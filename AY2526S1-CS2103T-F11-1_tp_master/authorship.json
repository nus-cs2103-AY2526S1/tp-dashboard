[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"w3njii"},"content":"[![Java CI](https://github.com/AY2526S1-CS2103T-F11-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2526S1-CS2103T-F11-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2025-10-01T10:54:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"w3njii"},"content":"# HealthNote","lastModifiedDate":"2025-10-01T11:24:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-01T11:24:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"w3njii"},"content":"* HealthNote helps independent doctors manage their patients and schedule more efficiently using a keyboard focused UI.","lastModifiedDate":"2025-10-01T11:24:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"w3njii"},"content":"* It is optimised for more tech savvy doctors who prefer using a CLI.","lastModifiedDate":"2025-10-01T11:24:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"w3njii"},"content":"* Enables quick retrieval of patientâ€™s records, especially useful when they are always on the move.","lastModifiedDate":"2025-10-01T11:24:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-01T11:24:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"w3njii"},"content":"##### Acknowledgements","lastModifiedDate":"2025-10-01T11:24:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"w3njii"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-10-01T11:24:01","isFullCredit":false}],"authorContributionMap":{"w3njii":8,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29T16:48:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05T13:30:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05T13:30:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17T23:10:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08T19:10:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29T16:48:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29T16:48:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08T19:10:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11T13:15:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12T23:57:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-07T12:39:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12T23:57:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12T23:57:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17T23:10:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17T23:10:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10T15:18:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08T21:51:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"w3njii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-10-09T15:03:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"w3njii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-10-09T15:03:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"w3njii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-10-09T15:03:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"w3njii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-10-09T15:03:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"w3njii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-10-09T15:03:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"w3njii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-10-09T15:03:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05T13:35:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29T09:46:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29T09:46:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05T13:35:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"w3njii"},"content":"    implementation \u0027com.vladsch.flexmark:flexmark-all:0.64.8\u0027","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29T18:15:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29T18:15:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17T23:04:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29T18:15:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"w3njii":8,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"w3njii"},"content":"### Yen Chong Wenjie","lastModifiedDate":"2025-10-01T10:31:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"w3njii"},"content":"\u003cimg src\u003d\"images/w3njii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T10:31:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"w3njii"},"content":"[[github](https://github.com/w3njii)]","lastModifiedDate":"2025-10-01T10:31:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"w3njii"},"content":"[[portfolio](team/yenchongwenjie.md)]","lastModifiedDate":"2025-10-01T10:31:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"w3njii"},"content":"* Role: Code Quality, Documentation","lastModifiedDate":"2025-10-01T10:31:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"w3njii"},"content":"* Responsibilities: In charge of documentation quality and code quality","lastModifiedDate":"2025-10-01T10:31:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"camlin-tan"},"content":"### Camlin","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"camlin-tan"},"content":"\u003cimg src\u003d\"images/camlin-tan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"camlin-tan"},"content":"[[github](http://github.com/camlin-tan)]","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"camlin-tan"},"content":"[[portfolio](team/camlin-tan.md)]","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"camlin-tan"},"content":"* Role: Deliverables and Deadline","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"camlin-tan"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format.","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"### Ivan Lau","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"\u003cimg src\u003d\"images/soywater.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"[[github](https://github.com/SoyWater)]","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"[[portfolio](team/soywater.md)]","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"camlin-tan"},"content":"* Responsibilities: DevOps + Integration","lastModifiedDate":"2025-10-01T11:31:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bananapielearnsjava"},"content":"### Lew Si Yu","lastModifiedDate":"2025-10-01T10:23:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bananapielearnsjava"},"content":"\u003cimg src\u003d\"images/github_bananapielearnsjava.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T10:23:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bananapielearnsjava"},"content":"[[github](http://github.com/bananapielearnsjava)]","lastModifiedDate":"2025-10-01T10:23:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bananapielearnsjava"},"content":"[[portfolio](team/bananapielearnsjava.md)]","lastModifiedDate":"2025-10-01T10:23:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bananapielearnsjava"},"content":"* Responsibilities: Model, UI, Storage","lastModifiedDate":"2025-10-01T10:23:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Soo42"},"content":"### Jia Yang (soo42)","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Soo42"},"content":"\u003cimg src \u003d\"images/soo42.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Soo42"},"content":"[[github](http://github.com/soo42)]","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Soo42"},"content":"[[portfolio](team/soo42.md)]","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Soo42"},"content":"* Responsibilities: Testing + Data","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false}],"authorContributionMap":{"camlin-tan":7,"bananapielearnsjava":5,"Soo42":5,"w3njii":6,"SoyWater":4,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21T12:41:57","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17T04:27:55","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"SoyWater"},"content":"***General Characteristics***:","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"SoyWater"},"content":"* independent home-care doctor often making home visits","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"SoyWater"},"content":"* has a need to manage a significant number of patients with diverse conditions","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"SoyWater"},"content":"* works with limited resources (e.g., no receptionist, no nurse), self-services features are a must","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"SoyWater"},"content":"***Technical Characteristics***:","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26T01:11:10","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"SoyWater"},"content":"* needs reliable offline mode","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"SoyWater"},"content":"***Workflow Challenges***:","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"SoyWater"},"content":"* time pressure during home visits, needs to manage patients quickly","lastModifiedDate":"2025-10-01T11:57:50","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"SoyWater"},"content":"* juggle between patient\u0027s contact details, medical history, appointments","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"SoyWater"},"content":"* needs to track follow-up appointments, medication schedules","lastModifiedDate":"2025-10-01T11:57:01","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"SoyWater"},"content":"**Value proposition**:","lastModifiedDate":"2025-10-01T11:57:50","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"SoyWater"},"content":"Helps independent doctors manager their patients and schedule more efficiently using a keyboard-focused UI.","lastModifiedDate":"2025-10-01T11:57:50","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"SoyWater"},"content":"It is optimised for more tech-savvy doctors who prefer using a CLI.","lastModifiedDate":"2025-10-01T11:57:50","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"SoyWater"},"content":"Enables quick retrieval of patientâ€™s records, especially useful when they are always on the move.","lastModifiedDate":"2025-10-01T11:57:50","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"| Priority   | As a â€¦â€‹              | I want to â€¦â€‹                                                 | So that I canâ€¦â€‹                                                      |","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"bananapielearnsjava"},"content":"|------------|----------------------|--------------------------------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | New User             | view user guide                                              | learn how to use the product whenever I need to                      |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | add a patient\u0027s name                                         | identify the patient correctly                                       |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | add a patient\u0027s identity number                              | uniquely distinguish patients with similar names                     |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | add a patient\u0027s phone number                                 | contact the patient when needed                                      |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | add a patient\u0027s email address                                | send medical updates or reports conveniently                         |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | add a patient\u0027s home address                                 | send physical documents or conduct home visits                       |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | attach emergency contacts with relationship                  | call the right person when there is an emergency                     |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | view patients\u0027 blood type                                    | assure transfusion                                                   |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | see and update a patientâ€™s drug allergies                    | prevent administering harmful medications                            |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | view my patients\u0027 past health condition                      | gain an understanding of what may cause their current problem        |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | search for patients by name or ID                            | locate their records efficiently                                     |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | view my patients\u0027 current condition                          | administer the correct treatment                                     |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | delete outdated patient records                              | keep the patient records clean                                       |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | have a quick GUI summary on patient records                  | get a refresher on the patient\u0027s condition before appointment        |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | add in the patient record whether they are a smoker          | keep in mind if they have higher risk of certain diseases            |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | add in the patient record whether they are an alcoholic      | keep in mind if they have higher risk of certain diseases            |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Doctor               | retrieve previously inputted records after reopening the app | input records and retrieve them again without them being lost        |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Fast typing CLI user | use short command aliases                                    | retrieve data needed easily                                          |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"bananapielearnsjava"},"content":"| `* * *`    | Forgetful user       | view available commands                                      | know what command to be used                                         |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Doctor               | view my past appointments records                            | maintain a complete appointment history for accurate tracking        |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Doctor               | check my upcoming appointments                               | schedule my day easier and faster                                    |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Doctor               | view patients tagged with certain conditions                 | filter and prioritize cases more easily                              |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Doctor               | add my patient\u0027s gender to the profile                       | ensure accurate medical records and provide gender-specific care     |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Meticulous doctor    | add special notes to each appointment                        | add in useful information that I should remember                     |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Doctor               | detect potential duplicate ID                                | merge records safely                                                 |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Forgetful doctor     | recover recently deleted records                             | recover the data after I use delete command                          |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Clumsy doctor        | confirm before I delete records                              | avoid accidentally deleting records                                  |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"bananapielearnsjava"},"content":"| `* *`      | Doctor               | add a patient\u0027s age and date of birth                        | obtain their age for age-specific medical assessments and treatments |","lastModifiedDate":"2025-10-01T12:07:29","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"bananapielearnsjava"},"content":"| `*`        | Doctor               | add a patient\u0027s dietary restrictions                         | provide informed medical advice and ensure safe treatment plan       |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"bananapielearnsjava"},"content":"| `*`        | Doctor               | pull up records of a disease                                 | check previously successful treatment plans                          |","lastModifiedDate":"2025-10-01T12:19:47","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"camlin-tan"},"content":"(For all use cases below, the **System** is the `HealthNote` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"camlin-tan"},"content":"**Use case: Delete a patient**","lastModifiedDate":"2025-10-01T12:18:14","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"camlin-tan"},"content":"1.  User requests to list patients","lastModifiedDate":"2025-10-01T12:18:14","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"camlin-tan"},"content":"2.  HealthNote shows a list of patients","lastModifiedDate":"2025-10-01T12:18:14","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"camlin-tan"},"content":"3.  User requests to delete a specific patient in the list","lastModifiedDate":"2025-10-01T12:18:14","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"camlin-tan"},"content":"4.  HealthNote deletes the patient","lastModifiedDate":"2025-10-01T12:18:14","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"camlin-tan"},"content":"    * 3a1. HealthNote shows an error message.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"camlin-tan"},"content":"**Use case: Add a patient**","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"camlin-tan"},"content":"**MSS**","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"camlin-tan"},"content":"1.  User requests to add a patient using the add command with required parameters.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"camlin-tan"},"content":"2.  HealthNote adds the patient to the system.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"camlin-tan"},"content":"    Use case ends.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"camlin-tan"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"camlin-tan"},"content":"* 1a. One or more required parameters are missing.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"camlin-tan"},"content":"    * 1a1. HealthNote shows an error message.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"camlin-tan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"camlin-tan"},"content":"* 1b. Input parameters are in invalid formats (e.g. date, email, gender).","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"camlin-tan"},"content":"    * 1b1. HealthNote shows an error message.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"camlin-tan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"camlin-tan"},"content":"* 1c. Duplicate identity number detected.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"camlin-tan"},"content":"    * 1c1. HealthNote shows an error message.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"camlin-tan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"camlin-tan"},"content":"* 1d. Duplicate email or contact number detected.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"camlin-tan"},"content":"    * 1d1. HealthNote shows a warning message.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"camlin-tan"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"camlin-tan"},"content":"**Use case: View all commands**","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"camlin-tan"},"content":"**MSS**","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"camlin-tan"},"content":"1.  User types a command to view all available commands","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"camlin-tan"},"content":"2.  HealthNote retrieves the list of commands supported","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"camlin-tan"},"content":"3.  The list of commands is displayed to the user","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"camlin-tan"},"content":"4.  User closes the list","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"camlin-tan"},"content":"    Use case ends.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"camlin-tan"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"camlin-tan"},"content":"* 2a. The list of commands cannot be retrieved due to some error","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"camlin-tan"},"content":"    * 2a1. HealthNote shows an error message.","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"camlin-tan"},"content":"      Use case ends","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T12:14:37","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09T15:37:20","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"Soo42"},"content":"## Non-Functional Requirements","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"Soo42"},"content":"1. Should work on any *mainstream OS* as long as it has Java `17` or above installed.","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"Soo42"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"Soo42"},"content":"3. A user with above-average typing speed for regular English text (i.e., not code, not system admin commands) should be able to accomplish most tasks faster using commands than using the mouse.","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"Soo42"},"content":"*{More to be added}*","lastModifiedDate":"2025-10-01T11:50:12","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"Soo42"},"content":"## Glossary","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"Soo42"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"Soo42"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2025-10-01T11:48:15","isFullCredit":false}],"authorContributionMap":{"camlin-tan":61,"bananapielearnsjava":31,"Soo42":14,"SoyWater":17,"-":379}},{"path":"docs/team/bananapielearnsjava.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bananapielearnsjava"},"content":"---","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bananapielearnsjava"},"content":"  layout: default.md","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bananapielearnsjava"},"content":"  title: \"Lew Si Yu\u0027s HealthNote Portfolio Page\"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bananapielearnsjava"},"content":"---","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bananapielearnsjava"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bananapielearnsjava"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bananapielearnsjava"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bananapielearnsjava"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bananapielearnsjava"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bananapielearnsjava"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bananapielearnsjava"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bananapielearnsjava"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bananapielearnsjava"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bananapielearnsjava"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bananapielearnsjava"},"content":"* **Project management**:","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bananapielearnsjava"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bananapielearnsjava"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bananapielearnsjava"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bananapielearnsjava"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bananapielearnsjava"},"content":"* **Documentation**:","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bananapielearnsjava"},"content":"    * User Guide:","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bananapielearnsjava"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bananapielearnsjava"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bananapielearnsjava"},"content":"    * Developer Guide:","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bananapielearnsjava"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bananapielearnsjava"},"content":"* **Community**:","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bananapielearnsjava"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bananapielearnsjava"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bananapielearnsjava"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bananapielearnsjava"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bananapielearnsjava"},"content":"* **Tools**:","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bananapielearnsjava"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bananapielearnsjava"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bananapielearnsjava"},"content":"","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bananapielearnsjava"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-10-01T10:28:51","isFullCredit":false}],"authorContributionMap":{"bananapielearnsjava":46}},{"path":"docs/team/camlin-tan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"camlin-tan"},"content":"---","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"camlin-tan"},"content":"  layout: default.md","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"camlin-tan"},"content":"  title: \"Camlin\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-10-01T10:29:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"camlin-tan"},"content":"---","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"camlin-tan"},"content":"### Project: HealthNote Level 3","lastModifiedDate":"2025-10-01T10:29:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"camlin-tan"},"content":"HealthNote - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-10-01T10:29:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"camlin-tan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"camlin-tan"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"camlin-tan"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"camlin-tan"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"camlin-tan"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"camlin-tan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"camlin-tan"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"camlin-tan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"camlin-tan"},"content":"* **Project management**:","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"camlin-tan"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"camlin-tan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"camlin-tan"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"camlin-tan"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"camlin-tan"},"content":"* **Documentation**:","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"camlin-tan"},"content":"  * User Guide:","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"camlin-tan"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"camlin-tan"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"camlin-tan"},"content":"  * Developer Guide:","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"camlin-tan"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"camlin-tan"},"content":"* **Community**:","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"camlin-tan"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"camlin-tan"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"camlin-tan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"camlin-tan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"camlin-tan"},"content":"* **Tools**:","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"camlin-tan"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"camlin-tan"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"camlin-tan"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-10-01T10:26:08","isFullCredit":false}],"authorContributionMap":{"camlin-tan":46}},{"path":"docs/team/soo42.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Soo42"},"content":"---","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Soo42"},"content":"  layout: default.md","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Soo42"},"content":"  title: \"JiaYang\u0027s Portfolio Page\"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Soo42"},"content":"---","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Soo42"},"content":"### Project: HealthNote","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Soo42"},"content":"HealthNote is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Soo42"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Soo42"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Soo42"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Soo42"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Soo42"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Soo42"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Soo42"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Soo42"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Soo42"},"content":"* **Project management**:","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Soo42"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Soo42"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Soo42"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Soo42"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Soo42"},"content":"* **Documentation**:","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Soo42"},"content":"    * User Guide:","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Soo42"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Soo42"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Soo42"},"content":"    * Developer Guide:","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Soo42"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Soo42"},"content":"* **Community**:","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Soo42"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Soo42"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Soo42"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Soo42"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Soo42"},"content":"* **Tools**:","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Soo42"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Soo42"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Soo42"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-10-01T10:30:00","isFullCredit":false}],"authorContributionMap":{"Soo42":46}},{"path":"docs/team/soywater.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"---","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"  layout: default.md","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"    title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"---","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"### Project: HealthNote","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"HealthNote is a desktop address book application targeted at healthcare professionals. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"* **Project management**:","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"* **Documentation**:","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    * User Guide:","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    * Developer Guide:","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"* **Community**:","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"* **Tools**:","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2025-10-01T10:22:15","isFullCredit":false}],"authorContributionMap":{"SoyWater":46}},{"path":"docs/team/yenchongwenjie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"w3njii"},"content":"  title: \"Yen Chong Wenjie\u0027s Project Portfolio Page\"","lastModifiedDate":"2025-10-01T10:31:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"w3njii"},"content":"### Project: HealthNote","lastModifiedDate":"2025-10-01T10:31:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"w3njii":2,"-":44}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"camlin-tan"},"content":" * Error: JavaFX runtime components are missing, and are required to run this","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"camlin-tan"},"content":" * application","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"camlin-tan"},"content":"        // As per","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"camlin-tan"},"content":"        // https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"camlin-tan"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"camlin-tan"},"content":"        // loaded from","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"camlin-tan"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"camlin-tan"},"content":"        // ignored when","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"camlin-tan"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"camlin-tan"},"content":"        // even then.","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"camlin-tan"},"content":"        // the user (if looking at the log output) that the said warning appearing in","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"camlin-tan"},"content":"        // the log","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below (if any) can be ignored.\");","lastModifiedDate":"2024-08-08T19:18:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false}],"authorContributionMap":{"camlin-tan":12,"-":35}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28T20:36:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"                .append(\"; Date of Birth: \")","lastModifiedDate":"2025-10-08T16:57:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"                .append(person.getDateOfBirth())","lastModifiedDate":"2025-10-08T16:57:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"SoyWater":2,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOOD_TYPE;","lastModifiedDate":"2025-10-08T11:43:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"camlin-tan"},"content":"            + PREFIX_BLOOD_TYPE + \"BLOOD TYPE \"","lastModifiedDate":"2025-10-08T11:43:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"camlin-tan"},"content":"            + PREFIX_BLOOD_TYPE + \"AB\"","lastModifiedDate":"2025-10-08T11:43:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"camlin-tan":3,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"camlin-tan"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01T01:51:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07T22:57:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07T22:57:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07T22:57:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:57:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17T13:31:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"        DateOfBirth updatedDateOfBirth \u003d editPersonDescriptor.getDateOfBirth().orElse(personToEdit.getDateOfBirth());","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"camlin-tan"},"content":"        BloodType updatedBloodType \u003d editPersonDescriptor.getBloodType().orElse(personToEdit.getBloodType());","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"                updatedAddress, updatedTags, updatedDateOfBirth, updatedBloodType","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"        );","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"SoyWater"},"content":"        private DateOfBirth dateOfBirth;","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"camlin-tan"},"content":"        private BloodType bloodType;","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15T22:11:44","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15T22:11:44","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15T22:11:44","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15T22:11:44","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"camlin-tan"},"content":"            setBloodType(toCopy.bloodType);","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"SoyWater"},"content":"            setDateOfBirth(toCopy.dateOfBirth);","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"SoyWater"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, dateOfBirth);","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"SoyWater"},"content":"        public void setDateOfBirth(DateOfBirth dateOfBirth) {","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"SoyWater"},"content":"            this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"SoyWater"},"content":"        public Optional\u003cDateOfBirth\u003e getDateOfBirth() {","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"SoyWater"},"content":"            return Optional.ofNullable(dateOfBirth);","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"camlin-tan"},"content":"        public void setBloodType(BloodType bloodType) {","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"camlin-tan"},"content":"            this.bloodType \u003d bloodType;","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"camlin-tan"},"content":"        }","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"camlin-tan"},"content":"        public Optional\u003cBloodType\u003e getBloodType() {","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"camlin-tan"},"content":"            return Optional.ofNullable(bloodType);","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"camlin-tan"},"content":"        }","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T12:02:41","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"SoyWater"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"SoyWater"},"content":"                    \u0026\u0026 Objects.equals(dateOfBirth, otherEditPersonDescriptor.dateOfBirth);","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"SoyWater"},"content":"                    .add(\"dateOfBirth\", dateOfBirth)","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false}],"authorContributionMap":{"camlin-tan":12,"SoyWater":19,"-":239}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOOD_TYPE;","lastModifiedDate":"2025-10-08T11:44:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2025-10-08T16:41:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"camlin-tan"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2025-10-08T11:44:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06T08:43:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11T10:22:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2025-10-08T16:41:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_DATE_OF_BIRTH,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"                PREFIX_BLOOD_TYPE","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        );","lastModifiedDate":"2025-10-08T16:41:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2025-10-08T16:41:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"                PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_DATE_OF_BIRTH, PREFIX_BLOOD_TYPE","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"            ) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-10-08T16:41:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"                PREFIX_DATE_OF_BIRTH, PREFIX_BLOOD_TYPE);","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"        DateOfBirth dateOfBirth \u003d ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DATE_OF_BIRTH).get());","lastModifiedDate":"2025-10-08T16:56:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"camlin-tan"},"content":"        BloodType bloodType \u003d ParserUtil.parseBloodType(argMultimap.getValue(PREFIX_BLOOD_TYPE).get());","lastModifiedDate":"2025-10-08T11:44:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, dateOfBirth, bloodType);","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false}],"authorContributionMap":{"camlin-tan":3,"SoyWater":14,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    public static final Prefix PREFIX_DATE_OF_BIRTH \u003d new Prefix(\"dob/\");","lastModifiedDate":"2025-10-08T16:40:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"camlin-tan"},"content":"    public static final Prefix PREFIX_BLOOD_TYPE \u003d new Prefix(\"b/\");","lastModifiedDate":"2025-10-08T11:11:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false}],"authorContributionMap":{"camlin-tan":1,"SoyWater":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-10-08T21:18:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2025-10-08T21:18:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-10-08T21:18:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-10-08T21:18:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-10-08T21:18:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-10-08T21:18:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06T08:43:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11T10:22:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20T23:17:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"                        PREFIX_DATE_OF_BIRTH);","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T08:15:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T08:15:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15T08:15:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06T18:20:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        if (argMultimap.getValue(PREFIX_DATE_OF_BIRTH).isPresent()) {","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"            editPersonDescriptor.setDateOfBirth(ParserUtil.parseDateOfBirth(","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"                    argMultimap.getValue(PREFIX_DATE_OF_BIRTH).get()));","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T21:12:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15T08:15:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false}],"authorContributionMap":{"SoyWater":7,"-":84}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"camlin-tan"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18T09:29:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02T08:13:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02T08:13:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02T08:13:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30T17:55:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T17:55:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30T18:08:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T18:08:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30T18:33:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T18:33:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"     * Parses a {@code String dateOfBirth} into an {@code dateOfBirth}.","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"     * @throws ParseException if the given {@code dateOfBirth} is invalid.","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"    public static DateOfBirth parseDateOfBirth(String dateOfBirth) throws ParseException {","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"        requireNonNull(dateOfBirth);","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"        String trimmedDateOfBirth \u003d dateOfBirth.trim();","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"        if (!DateOfBirth.isValidDateOfBirth(trimmedDateOfBirth)) {","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"        return new DateOfBirth(trimmedDateOfBirth);","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T16:41:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30T18:40:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T18:40:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"camlin-tan"},"content":"    /**","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"camlin-tan"},"content":"     * Parses a {@code String bloodType} into a {@code Name}.","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"camlin-tan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"camlin-tan"},"content":"     *","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"camlin-tan"},"content":"     * @throws ParseException if the given {@code bloodType} is invalid.","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"camlin-tan"},"content":"     */","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"camlin-tan"},"content":"    public static BloodType parseBloodType(String bloodType) throws ParseException {","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"camlin-tan"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"camlin-tan"},"content":"        String trimmedBloodType \u003d bloodType.trim();","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"camlin-tan"},"content":"        if (!BloodType.isValidBloodType(trimmedBloodType)) {","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"camlin-tan"},"content":"            throw new ParseException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"camlin-tan"},"content":"        }","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"camlin-tan"},"content":"        return new BloodType(trimmedBloodType);","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false}],"authorContributionMap":{"camlin-tan":16,"SoyWater":16,"-":124}},{"path":"src/main/java/seedu/address/model/person/BloodType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"camlin-tan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"camlin-tan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"camlin-tan"},"content":"/**","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"camlin-tan"},"content":" * Represents a Person\u0027s bloodType in the address book.","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"camlin-tan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBloodType(String)}","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"camlin-tan"},"content":" */","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"camlin-tan"},"content":"public class BloodType {","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"camlin-tan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"camlin-tan"},"content":"            \"Blood types should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2025-10-08T11:41:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"camlin-tan"},"content":"    /*","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"camlin-tan"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"camlin-tan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"camlin-tan"},"content":"     */","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"camlin-tan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[^\\\\s].*\";","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"camlin-tan"},"content":"    public final String bloodType;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"camlin-tan"},"content":"    /**","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"camlin-tan"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"camlin-tan"},"content":"     *","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"camlin-tan"},"content":"     * @param bloodType A valid bloodType.","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"camlin-tan"},"content":"     */","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"camlin-tan"},"content":"    public BloodType(String bloodType) {","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"camlin-tan"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"camlin-tan"},"content":"        checkArgument(isValidBloodType(bloodType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"camlin-tan"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"camlin-tan"},"content":"    /**","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"camlin-tan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"camlin-tan"},"content":"     */","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"camlin-tan"},"content":"    public static boolean isValidBloodType(String test) {","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"camlin-tan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"camlin-tan"},"content":"    @Override","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"camlin-tan"},"content":"    public String toString() {","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"camlin-tan"},"content":"        return bloodType;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"camlin-tan"},"content":"    @Override","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"camlin-tan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"camlin-tan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"camlin-tan"},"content":"            return true;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"camlin-tan"},"content":"        }","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"camlin-tan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"camlin-tan"},"content":"        if (!(other instanceof BloodType)) {","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"camlin-tan"},"content":"            return false;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"camlin-tan"},"content":"        }","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"camlin-tan"},"content":"        BloodType otherBloodType \u003d (BloodType) other;","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"camlin-tan"},"content":"        return bloodType.equals(otherBloodType.bloodType);","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"camlin-tan"},"content":"    @Override","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"camlin-tan"},"content":"    public int hashCode() {","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"camlin-tan"},"content":"        return bloodType.hashCode();","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"camlin-tan"},"content":"}","lastModifiedDate":"2025-10-08T11:18:10","isFullCredit":false}],"authorContributionMap":{"camlin-tan":67}},{"path":"src/main/java/seedu/address/model/person/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.util.DateParserUtil;","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * Represents a person\u0027s date of birth in the system.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateOfBirth(String)}.","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"public class DateOfBirth {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"            \"Dates should be of the following formats: DD-MM-YYYY, DD/MM/YYYY or DD.MM.YYYY\";","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     * A list of {@code DateTimeFormatter} objects that define the supported date formats.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * The formats include:","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * - \"dd-MM-yyyy\": Dates with dashes as separators (e.g., 01-01-2023).","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * - \"dd/MM/yyyy\": Dates with slashes as separators (e.g., 01/01/2023).","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     * - \"dd.MM.yyyy\": Dates with dots as separators (e.g., 01.01.2023).","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * These formatters are used to parse and validate user-provided date inputs","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * and ensure compatibility with the system\u0027s date handling logic.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    public static final List\u003cDateTimeFormatter\u003e FORMATTERS \u003d List.of(","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        DateTimeFormatter.ofPattern(\"dd.MM.yyyy\")","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    );","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * A {@code DateTimeFormatter} that specifies the pattern for date formatting and parsing.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * The pattern used is \"dd-MM-yyyy\", which represents a date in the format: day-month-year.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * Ensures consistency in handling date formats across the application.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     * A regular expression that defines the validation rules for date strings.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * The rules are as follows:","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * - The date must be in the format \"DD-MM-YYYY\", \"DD/MM/YYYY\", or \"DD.MM.YYYY\".","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * - The day (DD) must be a valid number ranging from 00 to 31.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * - The month (MM) must be a valid number ranging from 00 to 12.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * - The year (YYYY) must be a four-digit number.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * - The separator between day, month, and year can be \"-\", \"/\", or \".\".","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * These rules ensure the date is formatted correctly and can be validated against the system\u0027s requirements.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     */ /*","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * Dates: 00 to 31","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     * Separators: -, /, or .","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     * Months: 00 to 12","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     * Separators: -, /, or .","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     * Years: Four digits","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0[1-9]|[12]\\\\d|3[01])[-/.](0[1-9]|1[0-2])[-/.](\\\\d{4})$\";","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    public final LocalDate dateOfBirth;","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"     * Validates and parses the input date of the birth string, ensuring it conforms to the required format.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"     * @param dateOfBirth A string representing the date of birth, which must conform","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"     *                    to the accepted date formats and validation rules.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"     *                    Must not be null or invalid.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException If the provided {@code dateOfBirth} string","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"     *                                  does not pass validation.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"    public DateOfBirth(String dateOfBirth) {","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        requireNonNull(dateOfBirth);","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"        checkArgument(isValidDateOfBirth(dateOfBirth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"        this.dateOfBirth \u003d DateParserUtil.parseDate(dateOfBirth, FORMATTERS);","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"    public static boolean isValidDateOfBirth(String test) {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 DateParserUtil.isValidDate(test, FORMATTERS);","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"        return DateParserUtil.formatDate(dateOfBirth, DATE_FORMATTER);","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"            return true;","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"        if (!(other instanceof DateOfBirth otherDate)) {","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"            return false;","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"        return dateOfBirth.equals(otherDate.dateOfBirth);","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"    public int hashCode() {","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"        return dateOfBirth.hashCode();","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:47:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":111}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19T12:30:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"camlin-tan"},"content":"    private final BloodType bloodType;","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    private final DateOfBirth dateOfBirth;","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, DateOfBirth dateOfBirth,","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"                  BloodType bloodType) {","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        requireAllNonNull(name, phone, email, address, tags, dateOfBirth, bloodType);","lastModifiedDate":"2025-10-09T16:29:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"camlin-tan"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"    public DateOfBirth getDateOfBirth() {","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        return dateOfBirth;","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"camlin-tan"},"content":"    public BloodType getBloodType() {","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"camlin-tan"},"content":"        return bloodType;","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"                \u0026\u0026 dateOfBirth.equals(otherPerson.dateOfBirth)","lastModifiedDate":"2025-10-09T16:29:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"camlin-tan"},"content":"                \u0026\u0026 bloodType.equals(otherPerson.bloodType);","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":"        return Objects.hash(name, phone, email, address, tags, dateOfBirth, bloodType);","lastModifiedDate":"2025-10-09T16:29:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":"                .add(\"dateOfBirth\", dateOfBirth)","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"camlin-tan"},"content":"                .add(\"bloodType\", bloodType)","lastModifiedDate":"2025-10-08T11:26:01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"camlin-tan":8,"SoyWater":14,"-":113}},{"path":"src/main/java/seedu/address/model/person/SmokingRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Soo42"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Soo42"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Soo42"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Soo42"},"content":"/**","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Soo42"},"content":" * Represents a Person\u0027s smoking record in the address book.","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Soo42"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSmokingRecord(String)}","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Soo42"},"content":" */","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Soo42"},"content":"public class SmokingRecord {","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Soo42"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Smoking record can either be \u0027yes\u0027 or \u0027no\u0027(case-insensitive).\";","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Soo42"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?i)\\\\s*(?:yes|no)\\\\s*\";","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Soo42"},"content":"    public final boolean isSmoker;","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Soo42"},"content":"    /**","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Soo42"},"content":"     * Constructs a {@code SmokingRecord}.","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Soo42"},"content":"     *","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Soo42"},"content":"     * @param record A valid smoking record. (either \"yes\" or \"no\", case-insensitive)","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Soo42"},"content":"     */","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Soo42"},"content":"    public SmokingRecord(String record) {","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Soo42"},"content":"        requireNonNull(record);","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Soo42"},"content":"        checkArgument(isValidSmokingRecord(record), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Soo42"},"content":"        this.isSmoker \u003d record.equalsIgnoreCase(\"yes\");","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Soo42"},"content":"    }","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Soo42"},"content":"    /**","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Soo42"},"content":"     * Returns if a given string is a valid smoking record.","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Soo42"},"content":"     */","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Soo42"},"content":"    public static boolean isValidSmokingRecord(String test) {","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Soo42"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Soo42"},"content":"    }","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Soo42"},"content":"    @Override","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Soo42"},"content":"    public String toString() {","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Soo42"},"content":"        return isSmoker ? \"Yes\" : \"No\";","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Soo42"},"content":"    }","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Soo42"},"content":"    @Override","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Soo42"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Soo42"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Soo42"},"content":"            return true;","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Soo42"},"content":"        }","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Soo42"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Soo42"},"content":"        if (!(other instanceof SmokingRecord)) {","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Soo42"},"content":"            return false;","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Soo42"},"content":"        }","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Soo42"},"content":"        SmokingRecord otherRecord \u003d (SmokingRecord) other;","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Soo42"},"content":"        return isSmoker \u003d\u003d otherRecord.isSmoker;","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Soo42"},"content":"    }","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Soo42"},"content":"","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Soo42"},"content":"    @Override","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Soo42"},"content":"    public int hashCode() {","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Soo42"},"content":"        return Boolean.hashCode(isSmoker);","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Soo42"},"content":"    }","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Soo42"},"content":"}","lastModifiedDate":"2025-10-09T22:19:02","isFullCredit":false}],"authorContributionMap":{"Soo42":57}},{"path":"src/main/java/seedu/address/model/util/DateParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package seedu.address.model.util;","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * Utility class for parsing and formatting dates using specified {@code DateTimeFormatter} objects.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"public class DateParserUtil {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     * Parses the given date string using a list of {@code DateTimeFormatter} objects and returns","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * the matching {@code LocalDate}.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * If none of the formatters match, a {@code DateTimeParseException} is thrown.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     * @param date The date string to be parsed, which must conform to at least one of the formats","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     *             specified in the {@code formatters} list.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * @param formatters A list of {@code DateTimeFormatter} objects that define the acceptable formats","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     *                   for the date string.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * @return The parsed {@code LocalDate} object if the date string matches one of the specified formats.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     *      If the date string does not match any of the provided {@code DateTimeFormatter} formats","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public static LocalDate parseDate(String date, List\u003cDateTimeFormatter\u003e formatters) throws DateTimeParseException {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"            try {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"                return LocalDate.parse(date, formatter);","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"                // continue to next formatter","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"        // should never reach here if isValidDate is called before","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        throw new DateTimeParseException(\"Invalid date format\", date, 0);","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * Formats a given {@code LocalDate} object to a {@code String} using the specified {@code DateTimeFormatter}.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * @param date The {@code LocalDate} object to be formatted. Must not be null.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * @param formatter The {@code DateTimeFormatter} to use for formatting. Must not be null.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     * @return A {@code String} representation of the formatted date.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"    public static String formatDate(LocalDate date, DateTimeFormatter formatter) {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        return date.format(formatter);","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * Checks if a given date string is valid according to any of the specified {@code DateTimeFormatter} formats.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * @param dateString The date string to be validated. Must not be null.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     * @param formatters","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     *      A list of {@code DateTimeFormatter} objects that define the acceptable date formats. Must not be null.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     * @return {@code true} if the date string matches at least one of the specified formats, {@code false} otherwise.","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"    public static boolean isValidDate(String dateString, List\u003cDateTimeFormatter\u003e formatters) {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        return formatters.stream().anyMatch(formatter -\u003e isValid(dateString, formatter));","lastModifiedDate":"2025-10-08T15:07:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"    private static boolean isValid(String dateString, DateTimeFormatter formatter) {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"            LocalDate.parse(dateString, formatter);","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"            return true;","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"            return false;","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-10-08T14:46:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":70}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21T20:05:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21T20:05:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"                getTagSet(\"friends\"), new DateOfBirth(\"01-01-1998\"), new BloodType(\"AB\")),","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"                getTagSet(\"colleagues\", \"friends\"), new DateOfBirth(\"02-02-1999\"), new BloodType(\"AB\")),","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"                getTagSet(\"neighbours\"), new DateOfBirth(\"03-03-2000\"), new BloodType(\"AB\")),","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"                getTagSet(\"family\"), new DateOfBirth(\"04-04-2001\"), new BloodType(\"AB\")),","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"                getTagSet(\"classmates\"), new DateOfBirth(\"05-05-2002\"), new BloodType(\"AB\")),","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"                getTagSet(\"colleagues\"), new DateOfBirth(\"06-06-2003\"), new BloodType(\"AB\"))","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07T22:10:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07T22:10:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07T22:10:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30T18:45:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21T20:05:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21T20:05:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21T20:05:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20T21:30:39","isFullCredit":false}],"authorContributionMap":{"SoyWater":8,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"camlin-tan"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03T17:06:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    private final String dateOfBirth;","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"camlin-tan"},"content":"    private final String bloodType;","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"dob\") String dateOfBirth,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"camlin-tan"},"content":"            @JsonProperty(\"bloodType\") String bloodType) {","lastModifiedDate":"2025-10-08T17:33:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"camlin-tan"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"        dateOfBirth \u003d source.getDateOfBirth().toString();","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"camlin-tan"},"content":"        bloodType \u003d source.getBloodType().bloodType;","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":"        if (dateOfBirth \u003d\u003d null) {","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":"        if (!DateOfBirth.isValidDateOfBirth(dateOfBirth)) {","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":"        final DateOfBirth dob \u003d new DateOfBirth(dateOfBirth);","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T21:12:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"camlin-tan"},"content":"        if (bloodType \u003d\u003d null) {","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"camlin-tan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"camlin-tan"},"content":"                    BloodType.class.getSimpleName()));","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"camlin-tan"},"content":"        }","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"camlin-tan"},"content":"        if (!BloodType.isValidBloodType(bloodType)) {","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"camlin-tan"},"content":"            throw new IllegalValueException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"camlin-tan"},"content":"        }","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"camlin-tan"},"content":"        final BloodType modelBloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T11:50:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SoyWater"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, dob, modelBloodType);","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false}],"authorContributionMap":{"camlin-tan":14,"SoyWater":15,"-":107}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22T09:48:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"w3njii"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"w3njii"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"w3njii"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"w3njii"},"content":"import com.vladsch.flexmark.html.HtmlRenderer;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"w3njii"},"content":"import com.vladsch.flexmark.parser.Parser;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"w3njii"},"content":"import com.vladsch.flexmark.util.ast.Node;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24T15:44:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"w3njii"},"content":"import javafx.scene.web.WebView;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09T12:52:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"w3njii"},"content":" * Controller for a help page that shows Markdown content.","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20T16:11:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"w3njii"},"content":"    private static final String AVAILABLECOMMANDSPATH \u003d \"/docs/AvailableCommands.md\";","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24T15:44:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"w3njii"},"content":"    private WebView helpContent;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"w3njii"},"content":"     * Creates a HelpWindow using the given Stage as the root.","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"w3njii"},"content":"     * @param root The Stage to use as the root of the HelpWindow.","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"w3njii"},"content":"        loadMarkdownFile();","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"w3njii"},"content":"     * Creates a HelpWindow with a new Stage.","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"w3njii"},"content":"    /**","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"w3njii"},"content":"     * Loads the Available Commands Markdown file into the WebView.","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"w3njii"},"content":"     * If the file is not found or an error occurs, an error message is displayed.","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"w3njii"},"content":"     */","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"w3njii"},"content":"    private void loadMarkdownFile() {","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"w3njii"},"content":"        try (InputStream input \u003d getClass().getResourceAsStream(AVAILABLECOMMANDSPATH)) {","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"w3njii"},"content":"            if (input \u003d\u003d null) {","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"w3njii"},"content":"                helpContent.getEngine().loadContent(\"\u003cp\u003eAvailable Commands file not found\u003c/p\u003e\");","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"w3njii"},"content":"                return;","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"w3njii"},"content":"            }","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"w3njii"},"content":"            String markdown \u003d new String(input.readAllBytes(), StandardCharsets.UTF_8);","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"w3njii"},"content":"            Parser parser \u003d Parser.builder().build();","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"w3njii"},"content":"            HtmlRenderer renderer \u003d HtmlRenderer.builder().build();","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"w3njii"},"content":"            Node document \u003d parser.parse(markdown);","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"w3njii"},"content":"            String html \u003d renderer.render(document);","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"w3njii"},"content":"            helpContent.getEngine().loadContent(html);","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"w3njii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"w3njii"},"content":"            helpContent.getEngine().loadContent(\"\u003cp\u003eError loading Available Commands file.\u003c/p\u003e\");","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"w3njii"},"content":"        }","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"w3njii"},"content":"    }","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"w3njii"},"content":"        logger.fine(\"Showing help page.\");","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13T23:28:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false}],"authorContributionMap":{"w3njii":40,"-":50}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22T09:48:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12T12:35:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"camlin-tan"},"content":"    @FXML","lastModifiedDate":"2025-10-08T11:56:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"camlin-tan"},"content":"    private Label bloodType;","lastModifiedDate":"2025-10-08T11:56:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12T12:35:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"camlin-tan"},"content":"        bloodType.setText(person.getBloodType().bloodType);","lastModifiedDate":"2025-10-08T11:56:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false}],"authorContributionMap":{"camlin-tan":3,"-":59}},{"path":"src/main/resources/docs/AvailableCommands.md","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w3njii"},"content":"## Available Commands","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"w3njii"},"content":"### Add a patient: `add`","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"w3njii"},"content":"### Delete a patient: `delete`","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"w3njii"},"content":"### View available commands: `help`","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"w3njii"},"content":"","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"w3njii"},"content":"### Patient fields","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"w3njii"},"content":"- Name: `name/`","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"w3njii"},"content":"- Identity Number: `id/`","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"w3njii"},"content":"- Date of Birth:","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"w3njii"},"content":"- Contact Number and email","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"w3njii"},"content":"- Home Address","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"w3njii"},"content":"- Blood Type","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"w3njii"},"content":"- Gender","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"w3njii"},"content":"- Alcoholic","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"w3njii"},"content":"- Smoker","lastModifiedDate":"2025-10-09T15:15:52","isFullCredit":false}],"authorContributionMap":{"w3njii":16}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"w3njii"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"w3njii"},"content":"\u003c?import javafx.scene.web.WebView?\u003e","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25T11:15:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"w3njii"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"w3njii"},"content":"\u003cfx:root title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"w3njii"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"w3njii"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"w3njii"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"w3njii"},"content":"                \u003cWebView fx:id\u003d\"helpContent\" prefWidth\u003d\"600\" prefHeight\u003d\"400\"/\u003e","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"w3njii"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2025-10-08T18:09:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false}],"authorContributionMap":{"w3njii":9,"-":10}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28T10:10:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28T10:10:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27T17:40:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"0.5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-06-13T13:52:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"camlin-tan"},"content":"      \u003cLabel fx:id\u003d\"bloodType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$bloodType\" /\u003e","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false}],"authorContributionMap":{"camlin-tan":1,"-":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOOD_TYPE_DESC;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_AMY;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19T15:47:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31T09:59:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20T09:42:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20T08:42:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20T08:42:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19T15:47:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19T15:59:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19T15:59:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31T09:59:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31T09:59:21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31T09:59:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19T15:59:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"SoyWater"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + DATE_OF_BIRTH_DESC_AMY + BLOOD_TYPE_DESC;","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false}],"authorContributionMap":{"camlin-tan":1,"SoyWater":2,"-":174}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOOD_TYPE;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    public static final String VALID_DATE_OF_BIRTH_AMY \u003d \"01-01-1990\";","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    public static final String VALID_DATE_OF_BIRTH_BOB \u003d \"02-02-1992\";","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"camlin-tan"},"content":"    public static final String VALID_BLOOD_TYPE \u003d \"AB\";","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"    public static final String DATE_OF_BIRTH_DESC_AMY \u003d \" \" + PREFIX_DATE_OF_BIRTH + VALID_DATE_OF_BIRTH_AMY;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"    public static final String DATE_OF_BIRTH_DESC_BOB \u003d \" \" + PREFIX_DATE_OF_BIRTH + VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"camlin-tan"},"content":"    public static final String BLOOD_TYPE_DESC \u003d \" \" + PREFIX_BLOOD_TYPE + VALID_BLOOD_TYPE;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"    public static final String INVALID_DATE_OF_BIRTH_DESC \u003d \" \" + PREFIX_DATE_OF_BIRTH + \"41-01-2000\"; // invalid date","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"camlin-tan"},"content":"                .withTags(VALID_TAG_FRIEND).withBloodType(VALID_BLOOD_TYPE).build();","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"camlin-tan"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withBloodType(VALID_BLOOD_TYPE).build();","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03T14:55:49","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08T01:18:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false}],"authorContributionMap":{"camlin-tan":5,"SoyWater":6,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", dateOfBirth\u003d\"","lastModifiedDate":"2025-10-08T21:15:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"                + editPersonDescriptor.getDateOfBirth().orElse(null) + \"}\";","lastModifiedDate":"2025-10-08T21:15:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false}],"authorContributionMap":{"SoyWater":2,"-":70}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BLOOD_TYPE_DESC;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_AMY;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_BOB;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_OF_BIRTH_DESC;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOOD_TYPE;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06T09:15:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06T09:15:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25T01:41:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25T01:41:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25T01:41:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + DATE_OF_BIRTH_DESC_BOB","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"                + BLOOD_TYPE_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25T01:41:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25T01:41:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"        assertParseSuccess(","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"                parser,","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_FRIEND + BLOOD_TYPE_DESC;","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"        // multiple date of birth","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"        assertParseFailure(parser, DATE_OF_BIRTH_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE_OF_BIRTH));","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"                        + DATE_OF_BIRTH_DESC_AMY + BLOOD_TYPE_DESC + validExpectedPersonString,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"                        PREFIX_DATE_OF_BIRTH, PREFIX_BLOOD_TYPE));","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SoyWater"},"content":"        // invalid date of birth","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SoyWater"},"content":"        assertParseFailure(parser, INVALID_DATE_OF_BIRTH_DESC + validExpectedPersonString,","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE_OF_BIRTH));","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SoyWater"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"SoyWater"},"content":"        // invalid date of birth","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"SoyWater"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_DATE_OF_BIRTH_DESC,","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"SoyWater"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE_OF_BIRTH));","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25T01:41:52","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"SoyWater"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"SoyWater"},"content":"                        + DATE_OF_BIRTH_DESC_AMY + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"SoyWater"},"content":"                + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"SoyWater"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"SoyWater"},"content":"                + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"SoyWater"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"SoyWater"},"content":"                + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"SoyWater"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"SoyWater"},"content":"                + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"SoyWater"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23T14:31:02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"SoyWater"},"content":"                + DATE_OF_BIRTH_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"SoyWater"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"SoyWater"},"content":"        // invalid date of birth","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"SoyWater"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"SoyWater"},"content":"                + INVALID_DATE_OF_BIRTH_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:59:17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"SoyWater"},"content":"                DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-09T16:59:17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"SoyWater"},"content":"        // two invalid values, only the first invalid value reported","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"SoyWater"},"content":"        assertParseFailure(","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"SoyWater"},"content":"                parser,","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"SoyWater"},"content":"                INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + DATE_OF_BIRTH_DESC_BOB","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"camlin-tan"},"content":"                        + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"SoyWater"},"content":"                Name.MESSAGE_CONSTRAINTS","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"SoyWater"},"content":"        );","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"SoyWater"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + BLOOD_TYPE_DESC,","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15T10:33:40","isFullCredit":false}],"authorContributionMap":{"camlin-tan":3,"SoyWater":50,"-":180}},{"path":"src/test/java/seedu/address/model/person/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"public class DateOfBirthTest {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth(null));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    public void constructor_invalidDateOfBirth_throwsIllegalArgumentException() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"        String invalidDob \u003d \"not-a-date\";","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfBirth(invalidDob));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    public void isValidDateOfBirth() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"        // null date of birth","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfBirth.isValidDateOfBirth(null));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        // invalid date of birth","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"\")); // empty string","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\" \")); // spaces only","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"not-a-date\"));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"2020-02-30\")); // invalid date","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(\"31/14/1999\")); // wrong month","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"        // valid date of birth","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        assertTrue(DateOfBirth.isValidDateOfBirth(\"31-12-1999\"));","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"        assertTrue(DateOfBirth.isValidDateOfBirth(\"01-01-2000\"));","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"    public void equals() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        DateOfBirth dob \u003d new DateOfBirth(\"01-01-2000\");","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        assertTrue(dob.equals(new DateOfBirth(\"01-01-2000\")));","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        assertTrue(dob.equals(dob));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        assertFalse(dob.equals(null));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        assertFalse(dob.equals(5.0f));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        assertFalse(dob.equals(new DateOfBirth(\"31-12-1999\")));","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    public void hashCode_sameValue_equals() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"        DateOfBirth dob1 \u003d new DateOfBirth(\"01-01-2000\");","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        DateOfBirth dob2 \u003d new DateOfBirth(\"01-01-2000\");","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"        assertEquals(dob1.hashCode(), dob2.hashCode());","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false}],"authorContributionMap":{"SoyWater":66}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18T17:19:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18T17:19:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18T17:19:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18T17:19:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"                + \", dateOfBirth\u003d\" + ALICE.getDateOfBirth() + \", bloodType\u003d\" + ALICE.getBloodType() + \"}\";","lastModifiedDate":"2025-10-09T16:29:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false}],"authorContributionMap":{"SoyWater":2,"-":98}},{"path":"src/test/java/seedu/address/model/util/DateParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package seedu.address.model.util;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"public class DateParserUtilTest {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    private static final List\u003cDateTimeFormatter\u003e FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ISO_LOCAL_DATE","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    );","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    public void parseDate_validIsoFormat_success() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"        String validDate \u003d \"2020-12-31\";","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        LocalDate expected \u003d LocalDate.of(2020, 12, 31);","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"        assertEquals(expected, DateParserUtil.parseDate(validDate, FORMATTERS));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    public void parseDate_invalidFormat_throwsIllegalArgumentException() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"        String invalidDate \u003d \"31/12/2020\";","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateParserUtil.parseDate(invalidDate, FORMATTERS));","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    public void parseDate_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"        String invalidDate \u003d \"2020-02-30\";","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateParserUtil.parseDate(invalidDate, FORMATTERS));","lastModifiedDate":"2025-10-08T15:45:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateParserUtil.parseDate(null, FORMATTERS));","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-10-08T15:21:44","isFullCredit":false}],"authorContributionMap":{"SoyWater":43}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    private static final String INVALID_DOB \u003d \"32-13-2020\";","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    private static final String VALID_DOB \u003d BENSON.getDateOfBirth().toString();","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"camlin-tan"},"content":"    private static final String VALID_BLOOD_TYPE \u003d \"AB\";","lastModifiedDate":"2025-10-08T11:54:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_DOB,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"camlin-tan"},"content":"                        VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"camlin-tan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"                VALID_TAGS, VALID_DOB, VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_DOB,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"camlin-tan"},"content":"                        VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"                VALID_DOB, VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_DOB,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"camlin-tan"},"content":"                        VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS, VALID_DOB,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"camlin-tan"},"content":"                        VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_DOB,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"camlin-tan"},"content":"                        VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS, VALID_DOB,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"                        VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":"    public void toModelType_invalidDateOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, INVALID_DOB,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":"                        VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SoyWater"},"content":"    public void toModelType_nullDateOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SoyWater"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-10-08T21:15:11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS, null, VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SoyWater"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_DOB,","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"camlin-tan"},"content":"                        VALID_BLOOD_TYPE);","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false}],"authorContributionMap":{"camlin-tan":8,"SoyWater":32,"-":101}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"camlin-tan"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05T09:45:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05T09:45:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05T09:45:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05T09:45:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        descriptor.setDateOfBirth(person.getDateOfBirth());","lastModifiedDate":"2025-10-08T21:15:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05T09:45:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:45:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23T12:59:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"camlin-tan"},"content":"    /**","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"camlin-tan"},"content":"     * Sets the {@code bloodType} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"camlin-tan"},"content":"     */","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"camlin-tan"},"content":"    public EditPersonDescriptorBuilder withBloodType(String bloodType) {","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"camlin-tan"},"content":"        descriptor.setBloodType(new BloodType(bloodType));","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"camlin-tan"},"content":"        return this;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false}],"authorContributionMap":{"camlin-tan":9,"SoyWater":1,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"camlin-tan"},"content":"import seedu.address.model.person.BloodType;","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2025-10-08T16:31:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"camlin-tan"},"content":"    public static final String DEFAULT_BLOOD_TYPE \u003d \"O\";","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    public static final String DEFAULT_DOB \u003d \"01-01-2000\";","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"camlin-tan"},"content":"    private BloodType bloodType;","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    private DateOfBirth dateOfBirth;","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26T15:01:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"camlin-tan"},"content":"        bloodType \u003d new BloodType(DEFAULT_BLOOD_TYPE);","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        dateOfBirth \u003d new DateOfBirth(DEFAULT_DOB);","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"camlin-tan"},"content":"        bloodType \u003d personToCopy.getBloodType();","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        dateOfBirth \u003d personToCopy.getDateOfBirth();","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"     * Sets the {@code dateOfBirth} of the {@code Person} that we are building.","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"    public PersonBuilder withDateOfBirth(String dateOfBirth) {","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"        this.dateOfBirth \u003d new DateOfBirth(dateOfBirth);","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"        return this;","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T16:17:11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"camlin-tan"},"content":"    /**","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"     * Sets the {@code bloodType} of the {@code Person} that we are building.","lastModifiedDate":"2025-10-09T16:33:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"camlin-tan"},"content":"     */","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"camlin-tan"},"content":"    public PersonBuilder withBloodType(String bloodType) {","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"camlin-tan"},"content":"        this.bloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"camlin-tan"},"content":"        return this;","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"camlin-tan"},"content":"    }","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"camlin-tan"},"content":"","lastModifiedDate":"2025-10-08T12:08:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":"        return new Person(name, phone, email, address, tags, dateOfBirth, bloodType);","lastModifiedDate":"2025-10-09T16:29:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false}],"authorContributionMap":{"camlin-tan":13,"SoyWater":15,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOOD_TYPE;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29T14:36:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29T14:36:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"camlin-tan"},"content":"        sb.append(PREFIX_BLOOD_TYPE + person.getBloodType().bloodType + \" \");","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        sb.append(PREFIX_DATE_OF_BIRTH + person.getDateOfBirth().toString() + \" \");","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        descriptor.getDateOfBirth().ifPresent(","lastModifiedDate":"2025-10-08T21:15:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"                dob -\u003e sb.append(PREFIX_DATE_OF_BIRTH).append(dob.toString()).append(\" \"));","lastModifiedDate":"2025-10-08T21:15:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"camlin-tan"},"content":"        descriptor.getBloodType().ifPresent(bloodType -\u003e sb.append(PREFIX_NAME).append(bloodType.bloodType)","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"camlin-tan"},"content":"                .append(\" \"));","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false}],"authorContributionMap":{"camlin-tan":4,"SoyWater":4,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"camlin-tan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLOOD_TYPE;","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_AMY;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05T16:32:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"            .withTags(\"friends\").withDateOfBirth(\"20-05-1998\").withBloodType(\"O\").build();","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withBloodType(\"O\")","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"            .withTags(\"owesMoney\", \"friends\").withDateOfBirth(\"20-05-2000\").build();","lastModifiedDate":"2025-10-08T21:14:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\").withBloodType(\"O\")","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withDateOfBirth(\"20-12-1998\").build();","lastModifiedDate":"2025-10-08T21:14:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2025-10-08T21:14:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"            .withDateOfBirth(\"30-05-1995\").withBloodType(\"O\")","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"camlin-tan"},"content":"            .build();","lastModifiedDate":"2025-10-08T17:27:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\").withBloodType(\"O\")","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withDateOfBirth(\"20-11-1999\").build();","lastModifiedDate":"2025-10-08T21:14:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"            .withBloodType(\"O\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withDateOfBirth(\"15-08-1997\")","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"            .build();","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"            .withBloodType(\"O\").withEmail(\"anna@example.com\").withAddress(\"4th street\").withDateOfBirth(\"01-01-2000\")","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"            .build();","lastModifiedDate":"2025-10-09T17:26:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"camlin-tan"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withBloodType(\"O\").build();","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"camlin-tan"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withBloodType(\"O\").build();","lastModifiedDate":"2025-10-08T15:51:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2025-10-08T17:42:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"            .withDateOfBirth(VALID_DATE_OF_BIRTH_AMY).withBloodType(VALID_BLOOD_TYPE).build();","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"            .withDateOfBirth(VALID_DATE_OF_BIRTH_BOB).withBloodType(VALID_BLOOD_TYPE).build();","lastModifiedDate":"2025-10-09T16:56:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20T13:10:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20T13:10:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05T16:31:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05T16:31:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05T16:31:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05T16:52:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04T11:38:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04T11:38:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false}],"authorContributionMap":{"camlin-tan":4,"SoyWater":19,"-":62}}]
