[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Xateh"},"content":"[![Java CI](https://github.com/AY2526S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2526S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml) [![codecov](https://codecov.io/gh/AY2526S1-CS2103T-T13-2/tp/graph/badge.svg?token\u003d2BL7QTFFKN)](https://codecov.io/gh/AY2526S1-CS2103T-T13-2/tp)","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xateh"},"content":"**AssetSphere is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xateh"},"content":"* This project is named `AssetSphere` to represent the value and connectivity of the contacts `AssetSphere` holds.","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xateh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xateh"},"content":"* If you are interested in using AssetSphere, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xateh"},"content":"* If you are interested about developing AssetSphere, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false}],"authorContributionMap":{"Xateh":9,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29T16:48:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05T13:30:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05T13:30:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17T23:10:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08T19:10:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29T16:48:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29T16:48:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08T22:31:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08T19:10:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11T13:15:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12T23:57:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-07T12:39:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12T23:57:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12T23:57:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"denz-denz"},"content":"run {","lastModifiedDate":"2025-10-21T16:53:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"denz-denz"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-10-21T16:53:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"denz-denz"},"content":"}","lastModifiedDate":"2025-10-21T16:53:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-21T16:53:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17T23:10:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17T23:10:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10T15:18:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08T21:51:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19T23:48:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05T13:35:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29T09:46:28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29T09:46:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05T13:35:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23T16:51:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29T18:15:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29T18:15:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17T23:04:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29T18:15:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"denz-denz":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"denz-denz"},"content":"You can reach us at the email `e1398671@u.nus.edu`","lastModifiedDate":"2025-09-27T23:59:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"### Dylan Teo","lastModifiedDate":"2025-09-27T23:31:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"\u003cimg src\u003d\"images/dylantjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-27T23:35:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"[[github](https://github.com/dylantjy)]","lastModifiedDate":"2025-09-27T23:31:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"* Role: Documentation; MarkBind administration; Project site","lastModifiedDate":"2025-09-28T00:37:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"* Responsibilities: UI","lastModifiedDate":"2025-09-28T00:37:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"denz-denz"},"content":"### Alden","lastModifiedDate":"2025-09-27T23:33:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"denz-denz"},"content":"\u003cimg src\u003d\"images/denz-denz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-27T23:33:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"denz-denz"},"content":"[[github](https://github.com/denz-denz)]","lastModifiedDate":"2025-09-27T23:33:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"denz-denz"},"content":"* Role: Testing","lastModifiedDate":"2025-09-27T23:33:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"* Responsibilities: Model","lastModifiedDate":"2025-09-28T00:37:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"### Mitchel Lee","lastModifiedDate":"2025-09-27T23:39:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"\u003cimg src\u003d\"images/actualmulti.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-27T23:39:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"[[github](http://github.com/actualmulti)]","lastModifiedDate":"2025-09-27T23:39:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"* Role: Project Management","lastModifiedDate":"2025-09-27T23:39:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"* Responsibilities: Model","lastModifiedDate":"2025-09-27T23:39:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-28T00:24:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"### Mattheus Cheong","lastModifiedDate":"2025-09-27T23:39:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"\u003cimg src\u003d\"images/mattcce.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-27T23:39:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"[[github](https://github.com/mattcce)]","lastModifiedDate":"2025-09-27T23:39:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"* Role: DevOps, CI/CD","lastModifiedDate":"2025-09-27T23:39:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"* Responsibilities: Parsing","lastModifiedDate":"2025-09-27T23:39:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-28T00:47:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xateh"},"content":"### Xu An","lastModifiedDate":"2025-09-27T23:44:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xateh"},"content":"\u003cimg src\u003d\"images/xateh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-27T23:44:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xateh"},"content":"[[github](https://github.com/xateh)]","lastModifiedDate":"2025-09-27T23:44:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xateh"},"content":"* Role: Documentation","lastModifiedDate":"2025-09-27T23:44:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xateh"},"content":"* Responsibility: Model","lastModifiedDate":"2025-09-27T23:44:02","isFullCredit":false}],"authorContributionMap":{"dylantjy":6,"actualmulti":5,"Xateh":5,"mattcce":5,"denz-denz":5,"-":31}},{"path":"docs/BareCommand.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"# BareCommand API Reference","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"## Overview","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"`BareCommand` is the intermediate representation produced by the parser that your command extractors will work with. It provides a clean, type-safe interface for accessing the parsed components of a command: the imperative, parameters, and options.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"## Core Concepts","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"After the lexer and parser process a command string, they produce a `BareCommand` object containing:","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"- **Imperative**: The command verb (e.g., `\"add\"`, `\"delete\"`, `\"find\"`)","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"- **Parameters**: An ordered array of positional arguments","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"- **Options**: A map of named flags and key-value pairs","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"Your command extractor receives this `BareCommand` and is responsible for:","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"1. Extracting the relevant parameters and options","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"2. Validating them according to your command\u0027s requirements","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"3. Converting them to appropriate domain types","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"4. Constructing the final executable `Command` object","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"## Accessing Parameters","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"### Getting Individual Parameters","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"String getParameter(int index)","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"Retrieves the parameter at the specified zero-based index. Throws `ArrayIndexOutOfBoundsException` if the index is invalid.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"**Example:**","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"// Command: \"add John Doe\"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"String firstName \u003d bareCommand.getParameter(0);  // \"John\"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"String lastName \u003d bareCommand.getParameter(1);   // \"Doe\"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"### Getting All Parameters","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"String[] getAllParameters()","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"Returns an array containing all parameters in order. Use this when you need to validate the parameter count or iterate through all parameters.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"**Example:**","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"// Command: \"tag 1 friend colleague\"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"String[] params \u003d bareCommand.getAllParameters();  // [\"1\", \"friend\", \"colleague\"]","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"if (params.length \u003c 2) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"    throw new ValidationException(\"At least two parameters required\");","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"## Accessing Options","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"### Checking Option Presence","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"boolean hasOption(String key)","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"Returns `true` if the option was specified at least once, regardless of whether it has a value. Use this for boolean flags.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"**Example:**","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"// Command: \"delete 1 /force\"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"if (bareCommand.hasOption(\"force\")) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"    // Execute without confirmation","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"### Getting a Single Option Value","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"Optional\u003cString\u003e getOptionValue(String key)","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"Returns an `Optional` containing the first value associated with the option key. Returns `Optional.empty()` if:","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"- The option was not specified, or","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"- The option was specified as a flag without a value (e.g., `/force`)","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"**Example:**","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"// Command: \"add John /priority:high\"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"String priority \u003d bareCommand.getOptionValue(\"priority\")","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"    .orElse(\"medium\");  // Default to \"medium\" if not specified","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"### Getting Multiple Option Values","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"Optional\u003cList\u003cString\u003e\u003e getOptionAllValues(String key)","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"Returns an `Optional` containing all values for an option that may be specified multiple times. Returns `Optional.empty()` only if the option was never specified.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"**Example:**","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"// Command: \"add Task /tag:work /tag:urgent\"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"List\u003cString\u003e tags \u003d bareCommand.getOptionAllValues(\"tag\")","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"    .orElse(List.of());  // Empty list if no tags","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"// tags \u003d [\"work\", \"urgent\"]","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"**Important**: If an option is specified multiple times without values (e.g., `/flag /flag`), this returns an empty list wrapped in an `Optional`, not `Optional.empty()`.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"### Getting All Options","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"Map\u003cString, List\u003cString\u003e\u003e getAllOptions()","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"Returns a read-only view of all option key→value pairs. Useful for debugging or when you need to iterate through all provided options.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"## Common Validation Patterns","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"### Validating Parameter Count","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"String[] params \u003d bareCommand.getAllParameters();","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"if (params.length \u003d\u003d 0) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"    throw new ValidationException(\"At least one parameter required\");","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"if (params.length \u003c 2) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"    throw new ValidationException(\"Expected at least 2 parameters, got \" + params.length);","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"### Parsing Typed Parameters","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"Note that the following is just an example; index validation is provided as a static method in `Validation::validateIndex`.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"public class TagCommandExtractor {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_INDEX_FAILED_TO_PARSE \u003d \"Invalid index: expected positive integer, got %1$s\";","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_RANGE \u003d \"Invalid index: expected positive integer, got %1$s\";","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"    ","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mattcce"},"content":"    // ...","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mattcce"},"content":"    ","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mattcce"},"content":"    public static TagCommand extract(BareCommand bareCommand) throws ValidationException {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mattcce"},"content":"        // ...","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mattcce"},"content":"        ","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mattcce"},"content":"        // Parsing an index parameter","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mattcce"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(params[0]));","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mattcce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mattcce"},"content":"            // only thrown by Integer::parseInt","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(String.format(MESSAGE_INDEX_FAILED_TO_PARSE, params[0]));","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mattcce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mattcce"},"content":"            // only thrown by Index::fromOneBased","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(String.format(MESSAGE_INDEX_OUT_OF_RANGE, params[0]));","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mattcce"},"content":"        ","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mattcce"},"content":"        // ...","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mattcce"},"content":"### Validating Required Options","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mattcce"},"content":"if (!bareCommand.hasOption(\"email\")) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mattcce"},"content":"    throw new ValidationException(\"Email option is required\");","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mattcce"},"content":"String email \u003d bareCommand.getOptionValue(\"email\")","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mattcce"},"content":"    .orElseThrow(() -\u003e new ValidationException(\"Email option must have a value\"));","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mattcce"},"content":"### Handling Optional Options with Defaults","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mattcce"},"content":"String priority \u003d bareCommand.getOptionValue(\"priority\").orElse(\"medium\");","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mattcce"},"content":"boolean force \u003d bareCommand.hasOption(\"force\");","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mattcce"},"content":"int limit \u003d bareCommand.getOptionValue(\"limit\")","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mattcce"},"content":"    .map(Integer::parseInt)","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mattcce"},"content":"    .orElse(10);  // Default limit","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mattcce"},"content":"### Validating Option Values","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mattcce"},"content":"String priority \u003d bareCommand.getOptionValue(\"priority\").orElse(\"medium\");","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mattcce"},"content":"if (!Set.of(\"low\", \"medium\", \"high\").contains(priority)) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mattcce"},"content":"    throw new ValidationException(","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mattcce"},"content":"        \"Invalid priority: must be \u0027low\u0027, \u0027medium\u0027, or \u0027high\u0027, got \u0027\" + priority + \"\u0027\"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mattcce"},"content":"    );","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mattcce"},"content":"## Complete Extractor Example","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mattcce"},"content":"Here\u0027s a complete example showing typical usage patterns:","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mattcce"},"content":"public class TagCommandExtractor {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mattcce"},"content":"    // Messages for extraction","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_INDEX_UNSPECIFIED \u003d \"Index not specified.\";","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_INDEX_FAILED_TO_PARSE \u003d \"Invalid index: expected positive integer, got %1$s\";","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_RANGE \u003d \"Invalid index: expected positive integer, got %1$s\";","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_TAGS_UNSPECIFIED \u003d \"At least one tag must be specified.\";","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mattcce"},"content":"    private TagCommandExtractor() {}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mattcce"},"content":"     * Extracts command parameters from the given Command object. Performs input validation as well.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mattcce"},"content":"     * @param bareCommand Command to extract parameters from.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mattcce"},"content":"     * @return TagCommand that can be executed.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mattcce"},"content":"     * @throws ValidationException When the command parameters fail to validate.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mattcce"},"content":"    public static TagCommand extract(BareCommand bareCommand) throws ValidationException {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mattcce"},"content":"        String[] params \u003d bareCommand.getAllParameters();","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mattcce"},"content":"        // extract index","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mattcce"},"content":"        if (params.length \u003c\u003d 0) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(MESSAGE_INDEX_UNSPECIFIED);","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mattcce"},"content":"        Index index;","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mattcce"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(params[0]));","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mattcce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mattcce"},"content":"            // only thrown by Integer::parseInt","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(String.format(MESSAGE_INDEX_FAILED_TO_PARSE, params[0]));","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mattcce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mattcce"},"content":"            // only thrown by Index::fromOneBased","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(String.format(MESSAGE_INDEX_OUT_OF_RANGE, params[0]));","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mattcce"},"content":"        // extract tags","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mattcce"},"content":"        if (params.length \u003c\u003d 1) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(MESSAGE_TAGS_UNSPECIFIED);","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mattcce"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mattcce"},"content":"        for (int i \u003d 1; i \u003c params.length; i++) {","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mattcce"},"content":"            tags.add(new Tag(params[i]));","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mattcce"},"content":"        return new TagCommand(index, tags);","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mattcce"},"content":"## Best Practices","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mattcce"},"content":"1. **Always validate parameter count** before accessing individual parameters to avoid `ArrayIndexOutOfBoundsException`.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mattcce"},"content":"2. **Provide clear error messages** that tell users exactly what went wrong and what was expected.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mattcce"},"content":"3. **Use `Optional` methods effectively**: Prefer `orElse()`, `orElseThrow()`, or `map()` over explicit `isPresent()` checks.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mattcce"},"content":"4. **Handle type conversion errors gracefully**: Catch `NumberFormatException`, `DateTimeParseException`, etc., and wrap them in `ValidationException` with helpful messages.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mattcce"},"content":"5. **Document your parameter and option requirements** using the standard notation described in the \"Documenting Command Syntax\" section.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mattcce"},"content":"6. **Keep validation logic in the extractor**: Don\u0027t leak validation responsibilities into your `Command` class—it should receive only validated, typed inputs.","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false}],"authorContributionMap":{"mattcce":264}},{"path":"docs/CommandAssembly.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"# Command Assembly","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"This subguide details the full command assembly strategy used by AssetSphere.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"### Lexer Architecture","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"The `CommandLexer` is implemented a single finite state machine. It ingests an input string, and scans characters sequentially. At any point, it maintains a window representing the current token it is scanning.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"The lexer operates through a single forward pass over the input string, maintaining two position indices:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"- start: Marks the beginning of the current lexeme being scanned","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"- current: Marks the position of the next character to examine","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"**Core Methods**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"`peek()`: Returns the character at the current position without advancing. This allows the lexer to examine what\u0027s ahead before committing to a state transition.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"`advance()`: Returns the character at current and increments the position by one. This consumes the character and moves the lexer forward in the input stream.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"`munch`: A family of methods (munchWord(), munchText()) that consume multiple consecutive characters matching a specific pattern. \"Munching\" refers to the greedy consumption of characters: the lexer keeps calling advance() as long as characters match the expected pattern, maximizing the length of each token.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"**Usage**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"The lexer is accessed through the static factory method:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"TokenisedCommand result \u003d CommandLexer.lexCommand(inputString);","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"This returns a TokenisedCommand object containing the original input and the complete token sequence, ready for parsing.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"**Theoretical Foundation**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"The lexer is a lexical analyzer that tokenizes command strings according to a simple regular grammar. It transforms raw input strings into a sequence of tokens that can be used by a parser downstream.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"This lexer implements a single finite state machine (FSM) that recognizes a Level 3 regular grammar. The grammar defines five token types: `WORD`, `TEXT`, `SLASH`, `COLON`, and `TERMINAL`.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"As a finite state machine, the lexer maintains a current state (represented by its position in the input) and transitions between states based on the characters it encounters. The FSM operates deterministically: for any given character, the lexer knows exactly which state to transition to and which token type to emit.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"The regular nature of the grammar means the lexer requires no lookahead beyond a single character and no backtracking, making it efficient and straightforward to implement.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"### Parser Architecture","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"The `CommandParser` is an recursive descent parser that transforms a stream of tokens produced by the `CommandLexer` into an abstract syntax tree (AST). Each nonterminal (defined in the grammar by production rules of the form `A → α`) in the grammar corresponds to a parsing method. These methods call each other recursively, mirroring the grammar\u0027s hierarchical structure.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"**Core Methods**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"`peek()`: Returns the token at the current position without advancing. This provides the one-token lookahead that characterizes LL(1) parsing, allowing the parser to decide which production rule to apply.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"`advance()`: Returns the current token and increments the position by one. This consumes the token and moves the parser forward in the token stream.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"`eat(TokenType... types)`: The fundamental consuming operation that combines checking and advancing. It verifies that the current token matches one of the expected types, then consumes it via advance(). If the token doesn\u0027t match, it throws an exception. This method enforces the grammar rules at each step.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"`check(TokenType... types)`: A non-consuming lookahead operation that returns true if the current token matches any of the specified types. This is used in decision points to determine which production to apply or whether to continue looping.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"**Error Handling and Recovery**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"The parser uses exception-based error propagation:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"- **`ProductionApplicationException`**: Thrown when `eat()` encounters an unexpected token. The exception carries a `ParserError` containing:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"    - The original input string","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"    - The offending token","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"    - The expected token types","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"- **Error Enrichment**: As exceptions propagate up the call stack, each parsing method catches them, adds its non-terminal name to the error (building a derivation trace), and re-throws. This creates a complete picture of which production rule failed and where in the grammar hierarchy the error occurred.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"- **`ParserException`**: The final exception type thrown to the caller, wrapping the enriched parser error with full diagnostic information.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"**Usage**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"The parser is accessed through the static factory method:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"AstNode.Command ast \u003d CommandParser.parseCommand(tokenisedCommand);","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"This returns the root of the AST, which can then be traversed for semantic analysis, validation, and execution.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"**Theoretical Foundation**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"This parser implements an LL(1) parsing strategy, where:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"- _LL_ stands for \"Left-to-right, Leftmost derivation\"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"- _(1)_ indicates one token of lookahead","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"The parser recognises a Level 2 context-free grammar that defines the hierarchical structure of commands. Unlike the lexer\u0027s regular grammar, this context-free grammar can express nested and recursive structures, making it more powerful and suitable for parsing syntactic constructs.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"All production rules in a context-free grammar are of the form: `A → α`.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"The LL(1) property means the parser can determine which production rule to apply by examining only the current token, without backtracking. This is possible because the grammar is carefully designed so that each production has a distinct FIRST set (tokens that can begin that production) and FOLLOW set (tokens that can legally appear after that production).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"### AST Processing","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"**Overview**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"The `AstVisitor\u003cR\u003e` interface defines the contract for implementing the **Visitor pattern** on command Abstract Syntax Trees. It enables traversal and processing of AST nodes without modifying the node classes themselves, providing a clean separation between the tree structure and the operations performed on it.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"This interface is generic over the return type produced by visiting each node. This generic parameter provides flexibility for different visitor use cases.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"**Visitor Pattern**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"The Visitor pattern solves a common problem in compiler design: how to perform different operations on an AST (extraction, validation, transformation, optimization) without cluttering the node classes with operation-specific code.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"This interface declares one `visit` method for each AST node type in the command grammar. When a visitor traverses the tree, each node calls the appropriate `visit` method on the visitor, passing itself as an argument. This technique, called **double dispatch**, allows the visitor to execute type-specific logic for each node.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"**Visitor Methods**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"Each method corresponds to one AST node type and follows the naming convention `visit[NodeType]`:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"- **visitCommand**: Processes the root command structure (imperative + parameters + options)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"- **visitImperative**: Processes the command verb","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"- **visitParameterList** / **visitParameter**: Processes positional arguments","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"- **visitOptionList** / **visitOption**: Processes named options","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"- **visitOptionName** / **visitOptionValue**: Processes option components","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"- **visitText** / **visitWord**: Processes terminal (leaf) nodes containing actual token data","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"The complete set of methods ensures visitors can handle every node type in the grammar, providing exhaustive coverage of the AST structure.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"**Implementing Custom Visitors**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"To create a custom AST processor, implement the `AstVisitor\u003cR\u003e` interface with your desired return type:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"public class MyCustomVisitor implements AstVisitor\u003cMyResultType\u003e {","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"    public MyResultType visitCommand(AstNode.Command node) {","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"        // Process command node","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"        // Typically calls accept() on child nodes to traverse deeper","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"        MyResultType imperativeResult \u003d node.getImperative().accept(this);","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"        MyResultType paramsResult \u003d node.getParameterList().accept(this);","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"        MyResultType optionsResult \u003d node.getOptionList().accept(this);","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"        // Combine results and return","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"        return combineResults(imperativeResult, paramsResult, optionsResult);","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"    public MyResultType visitWord(AstNode.Word node) {","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"        // Process leaf node","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"        // Extract token data and convert to result type","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"        String tokenValue \u003d node.getToken().getLiteral();","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"        return processWord(tokenValue);","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mattcce"},"content":"    // Implement remaining visit methods...","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mattcce"},"content":"**Traversal Pattern**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mattcce"},"content":"Visitors typically follow a **recursive descent** pattern:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mattcce"},"content":"1. Each `visit` method processes the current node","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mattcce"},"content":"2. For non-terminal nodes, the visitor calls `accept(this)` on child nodes to continue traversal","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mattcce"},"content":"3. For terminal nodes (Word, Text), the visitor extracts token data directly","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mattcce"},"content":"4. Results from child visits are combined to produce the parent\u0027s result","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mattcce"},"content":"**Provided Visitors**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mattcce"},"content":"- Extraction (`CommandExtractor`): Builds a `Command` object by accumulating data as the visitor descends through the tree.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mattcce"},"content":"- Pretty-Printing (`AstPrinter`): Returns a formatted `String` visualisation of a tree.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mattcce"},"content":"### Lexer/Parser Interface: Commands","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mattcce"},"content":"**Overview**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mattcce"},"content":"The `BareCommand` class is a high-level facade that provides a simple, queryable interface for working with parsed commands. It serves as the primary entry point for users of the lexer/parser package, abstracting away the complexities of tokenisation, parsing, and AST traversal behind a clean, intuitive API.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mattcce"},"content":"**Design Philosophy**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mattcce"},"content":"This class embodies the **Facade pattern**, hiding the multi-stage processing pipeline (lexing → parsing → AST extraction) behind a single static factory method. Implementors do not need to understand tokens, ASTs, or visitor patterns, but should just call `BareCommand.parse()` and receive a structured representation of their command string.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mattcce"},"content":"The `BareCommand` class represents the **semantic model** of a command, distilled from the syntactic AST into three fundamental components:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mattcce"},"content":"- **Imperative**: The command verb (e.g., `add`, `delete`, `edit`)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mattcce"},"content":"- **Parameters**: Ordered positional arguments","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mattcce"},"content":"- **Options**: Named flags with optional values (e.g., `/email:john@example.com` or `/force`)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mattcce"},"content":"#### Architecture","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mattcce"},"content":"**Processing Pipeline**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mattcce"},"content":"The `parse()` method orchestrates a three-stage transformation:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mattcce"},"content":"1. **Lexical Analysis** (`CommandLexer.lexCommand()`): Converts the raw command string into a stream of tokens, recognising the basic lexical elements (words, text, slashes, colons).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mattcce"},"content":"2. **Syntactic Analysis** (`CommandParser.parseCommand()`): Transforms the token stream into an Abstract Syntax Tree that captures the hierarchical grammatical structure of the command.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mattcce"},"content":"3. **Semantic Extraction** (`CommandExtractor.extract()`): Traverses the AST using the visitor pattern to extract semantic information, populating a `CommandBuilder` with the command\u0027s meaningful components.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mattcce"},"content":"This pipeline separates concerns cleanly: lexing handles character-level details, parsing handles grammar structure, and extraction handles meaning. The `BareCommand` class receives only the final, distilled result.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mattcce"},"content":"**Data Model**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mattcce"},"content":"The internal representation uses three data structures optimised for different access patterns:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mattcce"},"content":"- **`imperative`** (`String`): A single command verb, accessed via `getImperative()`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mattcce"},"content":"- **`parameters`** (`String[]`): An ordered array for positional arguments, supporting indexed access via `getParameter(int)` or bulk retrieval via `getAllParameters()`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mattcce"},"content":"- **`options`** (`HashMap\u003cString, String\u003e`): A key-value map for named options, enabling fast lookup via `getOptionValue(String)` and existence checks via `hasOption(String)`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mattcce"},"content":"This design reflects typical command usage patterns: imperatives are always present and unique, parameters are order-dependent, and options are queried by name.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mattcce"},"content":"**Builder Pattern**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mattcce"},"content":"The nested `BareCommandBuilder` class implements the **Builder pattern** to construct `Command` instances incrementally. This is particularly useful for the `CommandExtractor` visitor, which discovers command components as it traverses the AST:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mattcce"},"content":"- **`setImperative(String)`**: Sets the command verb (called once)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mattcce"},"content":"- **`addParameter(String)`**: Appends a positional parameter (called zero or more times, preserving order)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mattcce"},"content":"- **`setOption(String)`** and **setOption(String, String)**: Adds flag-style or value-bearing options (called zero or more times)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mattcce"},"content":"- **`build()`**: Produces the immutable `BareCommand` instance","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mattcce"},"content":"The builder accumulates components in mutable collections (`ArrayList` for parameters, `HashMap` for options), then converts them to the appropriate final representations during `build()`. This separation allows flexible construction while maintaining immutability in the final product.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mattcce"},"content":"#### Usage Patterns","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mattcce"},"content":"**Basic Parsing**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mattcce"},"content":"The primary interface is the static factory method:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mattcce"},"content":"BareCommand cmd \u003d BareCommand.parse(\"add John Doe /email:john@example.com /force\");","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mattcce"},"content":"This single call handles all processing stages and returns a fully-populated `BareCommand` object.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mattcce"},"content":"**Querying BareCommands**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mattcce"},"content":"Once parsed, commands support intuitive queries:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mattcce"},"content":"String verb \u003d cmd.getImperative();           // \"add\"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mattcce"},"content":"String firstName \u003d cmd.getParameter(0);      // \"John\"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mattcce"},"content":"String[] allParams \u003d cmd.getAllParameters(); // [\"John\", \"Doe\"]","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mattcce"},"content":"String email \u003d cmd.getOptionValue(\"email\");  // \"john@example.com\"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mattcce"},"content":"boolean forced \u003d cmd.hasOption(\"force\");     // true","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mattcce"},"content":"The API distinguishes between:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mattcce"},"content":"- **`getOptionValue()`**: Returns the value (or null for flags/missing options)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mattcce"},"content":"- **`hasOption()`**: Tests for option presence (useful for boolean flags)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mattcce"},"content":"**Error Handling**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mattcce"},"content":"The `parse()` method declares two checked exceptions corresponding to the two stages where errors can occur:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mattcce"},"content":"- **`LexerException`**: Thrown when the input contains invalid characters or malformed tokens (e.g., unterminated strings)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mattcce"},"content":"- **`ParserException`**: Thrown when the token sequence doesn\u0027t conform to the command grammar (e.g., missing imperatives, unexpected token order)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mattcce"},"content":"Users should handle both exceptions to provide appropriate error feedback:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mattcce"},"content":"```java","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mattcce"},"content":"try {","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mattcce"},"content":"    BareCommand cmd \u003d BareCommand.parse(userInput);","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mattcce"},"content":"    // process command","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mattcce"},"content":"} catch (LexerException e) {","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mattcce"},"content":"    // handle tokenization errors","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mattcce"},"content":"} catch (ParserException e) {","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mattcce"},"content":"    // handle grammar errors","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mattcce"},"content":"### Command Grammar","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mattcce"},"content":"**Lexer Tokens**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mattcce"},"content":"The following regular grammar is recognised by the lexer.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mattcce"},"content":"WORD   ::\u003d [A-z0-9]+","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mattcce"},"content":"TEXT   ::\u003d \"[^\"/:]*\"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mattcce"},"content":"SLASH  ::\u003d /","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mattcce"},"content":"COLON  ::\u003d :","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mattcce"},"content":"The `TERMINAL` token denotes the end of input.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mattcce"},"content":"**Command Grammar**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mattcce"},"content":"The following command grammar is recognised by the parser, in EBNF notation.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mattcce"},"content":"command          → imperative parameter_list option_list TERMINAL","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mattcce"},"content":"imperative       → word","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mattcce"},"content":"parameter_list   → ( parameter )+","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mattcce"},"content":"parameter        → text","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mattcce"},"content":"option_list      → ( option )+","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mattcce"},"content":"option           → SLASH option_name ( COLON option_value )*","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mattcce"},"content":"option_name      → word","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mattcce"},"content":"option_value     → text","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mattcce"},"content":"text             → TEXT | WORD","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mattcce"},"content":"word             → WORD","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"mattcce"},"content":"```","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"mattcce"},"content":"### Resolution Architecture","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"mattcce"},"content":"The resolution step involves identifying the right command to run. This step uses the imperative parsed previously and matches the imperative to exactly one `CommandExtractor` (explained later, in validation), which builds the final `Command` eventually.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"mattcce"},"content":"#### Core Components","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"mattcce"},"content":"**`Decoder`**: The entry point that orchestrates command resolution. Given a `BareCommand`, it:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"mattcce"},"content":"1. Extracts the imperative (command verb)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"mattcce"},"content":"2. Queries `Bindings` to find the matching `CommandExtractor`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"mattcce"},"content":"3. Delegates to that extractor to build the final `Command`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"mattcce"},"content":"**`Bindings`**: An enumeration serving as the **command registry**. Each enum constant associates:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"mattcce"},"content":"- An **imperative string** (e.g., `\"tag\"`)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"mattcce"},"content":"- A **CommandExtractor** (method reference like `TagCommandExtractor::extract`)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"mattcce"},"content":"This enum acts as the single source of truth for all available commands. Adding a new command requires adding one line to this enum.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"mattcce"},"content":"**`BareCommand` to `Command` Transformation**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"mattcce"},"content":"The system transforms generic `BareCommand` objects (containing raw imperative, parameters, and options) into specific, type-safe `Command` instances ready for execution. This separation allows the parser to remain generic while enabling domain-specific validation and construction logic for each command type.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"mattcce"},"content":"**Exact Matching Strategy**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"mattcce"},"content":"The `Decoder.decode()` method uses **exact matching** via `Bindings.resolveExactBinding()`:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"mattcce"},"content":"1. A predicate tests each binding\u0027s imperative for equality with the input","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"mattcce"},"content":"2. If no matches found: throws `ResolutionException` (\"Unable to find a valid matching command\")","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"mattcce"},"content":"3. If multiple matches found: throws `ResolutionException` (\"Resolved command is ambiguous\")","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"mattcce"},"content":"4. If exactly one match: returns that binding\u0027s extractor","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"mattcce"},"content":"This strict resolution ensures deterministic command dispatch and catches configuration errors (duplicate imperatives) for now.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"mattcce"},"content":"**Flexible Resolution Support**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"mattcce"},"content":"The above also allows us to accommodate more flexible resolution for commands in the future.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"mattcce"},"content":"For exact binding resolution, we can support more flexible matching strategies (prefix matching, aliases) in the future by simply modifying the predicate passed in by the decoder.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"mattcce"},"content":"The `Bindings.resolveBindings()` method supports even more flexible matching strategies (fuzzy search) by returning all matching extractors. While not currently used by `Decoder`, this enables future features like command suggestions.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"mattcce"},"content":"### Validation Architecture","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"mattcce"},"content":"The validation step involves assembling the final command by parsing all necessary parameters and options and constructing the final `Command` executor object.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"mattcce"},"content":"#### Core Components","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"mattcce"},"content":"**`CommandExtractor\u003cT\u003e`**: A functional interface defining the contract for command-specific extraction logic. Each extractor:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"mattcce"},"content":"- Accepts a `BareCommand` (generic parsed representation)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"mattcce"},"content":"- Validates parameters and options and transforms them into valid constructor inputs for their respective `Command` constructors according to command-specific rules","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"mattcce"},"content":"- Constructs and returns a typed `Command` instance (e.g., `TagCommand`)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"mattcce"},"content":"- Throws `ValidationException` for invalid inputs","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false}],"authorContributionMap":{"mattcce":340}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07T16:11:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to create a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2025-07-24T02:35:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01T16:13:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02T19:17:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02T19:17:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07T19:03:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02T19:17:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01T16:16:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28T15:23:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xateh"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2526S1-CS2103T-T13-2/tp/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30T12:32:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26T01:04:45","isFullCredit":false}],"authorContributionMap":{"Xateh":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"# Developer Guide","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xateh"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2526S1-CS2103T-T13-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2526S1-CS2103T-T13-2/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"1. When `Logic` is called upon to execute a command, it is passed to `Decoder` which performs a full assembly process involving parsing, resolution, and validation. This process is described below in greater detail.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"#### Command Assembly (User Input to Execution)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"See [Detailed Command Assembly Documentation](CommandAssembly.md) for a very detailed piece of documentation on the command assembly process.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"Command assembly in AssetSphere is handled as shown in the following activity diagram.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"\u003cpuml src\u003d\"diagrams/assembly/AssemblyActivity.puml\" width\u003d1080 /\u003e","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"Before a command can be executed, a sequence of steps assemble the `Command` object to be called. This process, which we call **assembly**, is split into four distinct phases. Any of these phases may produce an exception, which will terminate this process.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"1. Lexing - User Input: `String` → Tokenised Command: `TokenisedCommand`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"2. Parsing - Tokenised Command: `TokenisedCommand` → AST: `ASTNode.Command`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"3. Resolution - Imperative: `String` → Command Extractor: `CommandExtractor`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"4. Validation - Bare Command: `BareCommand` → Assembled Command: `Command`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"We jointly refer to:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"- (1) and (2) together as **recognition**, and","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"- (3) and (4) together as **decoding**.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"**Recognition**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"This segment describes the lexer and parser. The lexer and parser are interfaced with through the `BareCommand` facade.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"\u003cpuml src\u003d\"diagrams/assembly/RecognitionStructure.puml\" width\u003d1080 /\u003e","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"This diagram shows a truncated architecture (with auxiliary classes hidden) organized into five packages:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"- **Top-Level Package**: Contains the user-facing `Command` class and its nested `CommandBuilder`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"- **Lexer Package**: Contains `CommandLexer`, `TokenisedCommand`, `Token`, and related types for tokenisation","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"- **Parser Package**: Contains `CommandParser` and exception types for syntactic analysis","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"    - **AST Package**: Shows all AST node types in the hierarchy (Command, Imperative, ParameterList, etc.)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"        - **Visitor Package**: Contains the `AstVisitor` interface and `CommandExtractor` implementation","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mattcce"},"content":"\u003cpuml src\u003d\"diagrams/assembly/RecognitionSequence.puml\" width\u003d1080 /\u003e","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mattcce"},"content":"This sequence diagram traces the high-level flow of execution (omitting exceptions and various internal implementation details) starting from `BareCommand.parse(String)`:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mattcce"},"content":"1. **Lexing Phase**: Shows how the lexer processes the string character-by-character using peek/advance/munch operations, creating tokens","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mattcce"},"content":"2. **Parsing Phase**: Demonstrates recursive descent parsing with the parser calling various parse methods that mirror the grammar structure","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mattcce"},"content":"3. **Extraction Phase** (not an actual distinguished phase): Illustrates the Visitor pattern in action, with the CommandExtractor traversing the AST and populating a CommandBuilder","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mattcce"},"content":"The diagram includes notes explaining key concepts at each phase and shows both the normal flow and error handling paths. It clearly shows the three-stage transformation: String → Tokens → AST → BareCommand.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mattcce"},"content":"**Decoding**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mattcce"},"content":"This segment describes resolution and validation. The components involved are interfaced with through the `Decoder` facade.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mattcce"},"content":"\u003cpuml src\u003d\"diagrams/assembly/DecodingStructure.puml\" width\u003d1080 /\u003e","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mattcce"},"content":"This diagram shows a truncated architecture (with auxiliary classes hidden) with the classes responsible for resolution and validation demarcated in their own packages.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mattcce"},"content":"\u003cpuml src\u003d\"diagrams/assembly/DecodingSequence.puml\" width\u003d1080 /\u003e","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mattcce"},"content":"This sequence diagram traces the high-level flow of execution (omitting exceptions and various internal implementation details) starting from `Decoder.decode(BareCommand)`:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mattcce"},"content":"1. **Resolution Phase**: Shows how the exact command extractor (exact: no ambiguity) is identified given the imperative.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mattcce"},"content":"2. **Validation Phase**: Validates all parameters and options to finish assembling the final `Command`.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21T12:41:57","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17T04:27:55","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mattcce"},"content":"This section describes some noteworthy details on how new features should be implemented and how certain existing features are implemented.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mattcce"},"content":"This guide details the command syntax, parsing behaviour, and design considerations for developers adding new commands.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mattcce"},"content":"### Commands","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mattcce"},"content":"The command framework is built on a **uniform, regular structure**. The parser handles the low-level tokenizing and structural validation (lexing, parsing `+`/`-` prefixes, distinguishing parameters from options). Your command implementation is responsible for **semantic validation** and execution.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mattcce"},"content":"**Command Structure**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mattcce"},"content":"The parser validates all commands against this high-level grammar:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mattcce"},"content":"`imperative parameter_list option_list`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mattcce"},"content":"1. **Imperative:** A single `\u003cword\u003e` that identifies the command (e.g., `add`).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mattcce"},"content":"2. **Parameter List:** A sequence of parameters that appears _immediately_ after the imperative.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mattcce"},"content":"3. **Option List:** A sequence of options that appears _only after_ the entire parameter list.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mattcce"},"content":"The parser strictly enforces this order. Any options found before the end of the parameter list will cause a parsing error.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mattcce"},"content":"**Designing Parameters**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mattcce"},"content":"Parameters are the primary, positional inputs for your command.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mattcce"},"content":"- **Semantics:** Parameters are **positional** (order matters), **unnamed**, and generally **required**.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mattcce"},"content":"- **Implementation:** Your command will receive an _ordered list_ of parameter \"variants.\" You are responsible for validating this list.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mattcce"},"content":"- **Validation:** Your implementation **must** validate:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mattcce"},"content":"    - **Count:** Does the number of received parameters match your command\u0027s needs (e.g., `add` requires at least one)?","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mattcce"},"content":"    - **Type:** Is a parameter meant to be an `\u003cindex\u003e` actually a positive integer?","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mattcce"},"content":"    - **Variant:** Does the command accept the variants it received (e.g., does `find` accept an `ADDITIVE` parameter? Probably not.)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mattcce"},"content":"- **Parameter Variants:** The parser distinguishes between three parameter types and passes them to your implementation as distinct variants (e.g., as different enum types or subclasses):","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mattcce"},"content":"    - **`NORMAL`:** A standard text value (e.g., `item` or `\"new item\"`).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mattcce"},"content":"    - **`ADDITIVE`:** A text value prefixed with `+` (e.g., `+tag`). The parser provides the _intent_ (add) and the _value_ (\"tag\").","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mattcce"},"content":"    - **`SUBTRACTIVE`:** A text value prefixed with `-` (e.g., `-tag`). The parser provides the _intent_ (remove) and the _value_ (\"tag\").","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mattcce"},"content":"- **Overloading:** A single command `imperative` _can_ support multiple parameter signatures (e.g., `find \u003cindex\u003e` and `find \u003cstring\u003e`). Your implementation must inspect the received parameter list (count, types) to determine which behavior to execute.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mattcce"},"content":"- **Whitespace:** The lexer handles whitespace. `param1 \"param two\"` is tokenized as two `text` parameters: \"param1\" and \"param two\". `param1 param two` is tokenized as three `text` parameters: \"param1\", \"param\", and \"two\".","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mattcce"},"content":"**Designing Options**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mattcce"},"content":"Options are optional, named inputs that modify command behavior.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mattcce"},"content":"- **Semantics:** Options are **optional**, **non-positional** (order does not matter), and **named**.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mattcce"},"content":"- **Implementation:** Options are provided to your command as a collection (e.g., a map) of key-value pairs or keys. You **must not** rely on the order in which they were provided by the user.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mattcce"},"content":"- **Default Behaviour:** Because all options are by definition optional, your command implementation **must provide a default behaviour** for every option it supports.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mattcce"},"content":"- **Formats:** The parser supports two formats and delivers them as such:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mattcce"},"content":"    1. **Name-only (Flag):** `/force`. Your code should check for the _presence_ of the \"force\" key.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mattcce"},"content":"    2. **Name-Value Pair:** `/priority:high`. Your code should retrieve the \"priority\" key and its associated _value_ (\"high\").","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mattcce"},"content":"**Error Handling**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mattcce"},"content":"Error handling is a two-part responsibility:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mattcce"},"content":"1. **Parser Errors:** The parser/lexer handles all **syntax errors** (e.g., unbalanced quotes, invalid tokens like `/` in a parameter, options before parameters). If parsing fails, your command will _not_ be executed.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mattcce"},"content":"2. **Semantic Errors:** Your command implementation is responsible for all **semantic validation**. This includes:","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mattcce"},"content":"    - Wrong number of parameters.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mattcce"},"content":"    - Invalid parameter _type_ (e.g., `delete \"abc\"` when an `\u003cindex\u003e` was expected).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mattcce"},"content":"    - Invalid parameter _variant_ (e.g., `list +tag`).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mattcce"},"content":"    - Invalid option _value_ (e.g., `/priority:urgent` when only `low`/`medium`/`high` are allowed).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mattcce"},"content":"    - Unknown options (e.g., `/nonexistent`). _Note: The base framework may ignore excess/unknown options by default._","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mattcce"},"content":"**Documenting Command Syntax**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mattcce"},"content":"When writing help text or documentation for your new command, you **must** use the following standard notation.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mattcce"},"content":"- **Field Definition:** `\u003cfield-name\u003e (\u003ctype\u003e): \u003cdescription\u003e`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mattcce"},"content":"    - `\u003cfield-name\u003e`: The placeholder in the syntax (e.g., `\u003cindex\u003e`).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mattcce"},"content":"    - `\u003ctype\u003e`: The expected data type.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mattcce"},"content":"    - `\u003cdescription\u003e`: A human-readable explanation.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mattcce"},"content":"- **Data Types:**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mattcce"},"content":"    - `word`: A single word of text without quotes or whitespace.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mattcce"},"content":"    - `string`: Text that can be a single `word` or quoted text `\"with spaces\"`.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mattcce"},"content":"    - `index`: A `word` that must be a positive integer (1, 2, …).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mattcce"},"content":"- **Multiplicity Notation:**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mattcce"},"content":"    - `item`: Exactly one.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mattcce"},"content":"    - `item?`: Zero or one (optional).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mattcce"},"content":"    - `item+`: One or more (at least one required).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mattcce"},"content":"    - `item*`: Zero or more (optional).","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mattcce"},"content":"**Adding New Commands**","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mattcce"},"content":"To add a new command to the system,","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"mattcce"},"content":"1. **Create the Command class** (e.g., `DeleteCommand extends Command`)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"mattcce"},"content":"2. **Implement a CommandExtractor** (e.g., `DeleteCommandExtractor` with static `extract()` method)","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"mattcce"},"content":"3. **Register in Bindings enum**: Add one line like `DELETE(\"delete\", DeleteCommandExtractor::extract)`","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"mattcce"},"content":"The system automatically handles routing and dispatch.","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"mattcce"},"content":"Your extractor should accept a `BareCommand`, a facade for the output of the lexer and parser, documented in the [BareCommand API](BareCommand.md).","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-21T19:14:03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2025-09-28T02:13:28","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"mattcce"},"content":"### Product Scope","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"mattcce"},"content":"**Target User Profile**: This is primarily for **technologically-inclined asset managers for high-net-worth individuals (HWNIs)** that require managing **complex** relationships and hierarchies between large groups of people.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"mattcce"},"content":"In addition, they:","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"mattcce"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"mattcce"},"content":"- can type fast","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"mattcce"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"mattcce"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"mattcce"},"content":"**Value Proposition**: **AssetSphere** strives in streamlining contact tracking, and managing complex networks with business partners and critical contacts within and outside the company. This application is valuable for asset managers of multinational companies, improving reliability, navigability and efficiency of their contact chain, one contact at a time.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"mattcce"},"content":"### User Stories","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"mattcce"},"content":"**User type/role**\u003cbr /\u003e_As a_ | **Function**\u003cbr /\u003e_I can_                                               | **Benefit**\u003cbr /\u003e_so that_ | Priority","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"mattcce"},"content":"-|-------------------------------------------------------------------------| - | -","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Xateh"},"content":"Asset manager | find for contacts using keywords based on all fields | cast wider searches | Must-have (✓✓)","lastModifiedDate":"2025-10-16T01:48:51","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Xateh"},"content":"Asset manager | additively add tags | I do not have to waste time retyping a full list of tags whenever I wish to update a user\u0027s tags | Must-have (✓✓)","lastModifiedDate":"2025-10-16T01:48:51","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Xateh"},"content":"Asset manager | remove existing tags | I do not have to waste time retyping a full list of tags whenever I wish to update a user\u0027s tags | Must-have (✓✓)","lastModifiedDate":"2025-10-16T01:48:51","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Xateh"},"content":"Asset manager | find for contacts using keywords based on all fields | cast wider searches | Must-have (✓✓)","lastModifiedDate":"2025-10-16T01:48:51","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Xateh"},"content":"Asset manager | additively add tags | I do not have to waste time retyping a full list of tags whenever I wish to update a user\u0027s tags | Must-have (✓✓)","lastModifiedDate":"2025-10-16T01:48:51","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Xateh"},"content":"Asset manager | remove existing tags | I do not have to waste time retyping a full list of tags whenever I wish to update a user\u0027s tags | Must-have (✓✓)","lastModifiedDate":"2025-10-16T01:48:51","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"mattcce"},"content":"Asset manager | save data between sessions                                              | I don’t have to re-enter information after relaunching | Must-have (✓✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"mattcce"},"content":"Organised asset manager | categorise contacts based on asset classes                              | I can quickly identify relevant people per portfolio | Must-have (✓✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"mattcce"},"content":"Detailed asset manager | customise client profiles with custom fields                            | I can track unique client details/needs | Must-have (✓✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"mattcce"},"content":"Asset manager | define links between clients and their contacts                         | I can navigate complex relationship networks | Must-have (✓✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"mattcce"},"content":"Asset manager | view all clients linked to a specific asset class                       | I can understand dependencies within each asset | Must-have (✓✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"mattcce"},"content":"Tech-savvy asset manager | save my data in a portable, human-readable format                       | I can edit/process data in other apps and move between devices | Must-have (✓✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"mattcce"},"content":"Asset manager | have tiers/priority flags in my client list                             | I can track who the big players are | Must-have (✓✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"mattcce"},"content":"Asset manager | have custom notes for each contact                                      | I can attach longer pieces of information to contacts | Must-have (✓✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"mattcce"},"content":"Tech-savvy asset manager | make custom aliases for commands                                        | I can use shortcuts that match my preferences | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"mattcce"},"content":"Clumsy asset manager | have my commands be inferred (string matching, autocorrect, fuzzy find) | I don’t have to retype or I can use shorter variants | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"mattcce"},"content":"Considerate asset manager | see the time zone for a contact                                         | I can schedule sensibly | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"mattcce"},"content":"Asset manager | delete contacts                                                         | the app remains clean and easy to find things | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"mattcce"},"content":"Asset manager | have my address book flag important dates (e.g., birthdays)             | I can remember important dates and maintain relationships | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"mattcce"},"content":"Clumsy asset manager | merge/handle duplicate records                                          | the network remains clean and accurate | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"mattcce"},"content":"Asset manager | view my command history                                                 | I can redo regularly used commands | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"mattcce"},"content":"Tech-savvy asset manager | save custom workflows (sequences of commands)                           | I can quickly execute common workflows | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"mattcce"},"content":"Tech-savvy asset manager | have my commands be tab-completable                                     | I can quickly fill in command information | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"mattcce"},"content":"Asset manager | have syntax highlighting and diagnostics for commands                   | I can more easily spot mistakes as I type | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"mattcce"},"content":"Asset manager | see detailed, decorated error messages                                  | I can quickly understand and fix mistyped commands | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"mattcce"},"content":"Asset manager | have command syntax hints show up as I type                             | I can see what I need to fill in | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"mattcce"},"content":"Busy asset manager | segment users via predefined metrics (e.g., geography, sector)          | I can find useful contacts faster for different scenarios | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"mattcce"},"content":"Tech-savvy asset manager | use shell-like expansion for commands                                   | I can batch-run commands | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"mattcce"},"content":"Tech-savvy asset manager | use command pipes (\\|) to chain commands                                | I can create complex workflows | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"mattcce"},"content":"Asset manager | recursively delete contacts                                             | related links/notes are cleaned up safely | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"mattcce"},"content":"Asset manager | set (scoped) default values for common command flags/inputs             | I can type shorter commands by omitting defaults | Nice-to-have (✓)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"mattcce"},"content":"Asset manager | have the system flag potential conflicts                                | I can proactively see clashes in notes/tags/tiers | Rejected (✗)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"mattcce"},"content":"Asset manager | navigate past commands quickly                                          | I can scroll through previous commands | Rejected (✗)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"mattcce"},"content":"Asset manager | hide or expire old contacts automatically                               | I can keep my list tidy without manual effort | Rejected (✗)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"mattcce"},"content":"Tech-savvy asset manager | use a custom search syntax                                              | I can craft advanced queries beyond basic filters | Rejected (✗)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"mattcce"},"content":"Asset manager | store key files (e.g., NDAs, letters) with contacts                     | I can keep documents alongside records | Rejected (✗)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"mattcce"},"content":"Asset manager | assign follow-ups to team members                                       | I can distribute work across the team from the app | Rejected (✗)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"mattcce"},"content":"### Use Cases","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"mattcce"},"content":"(For all use cases below, the **System** is `AssetSphere` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"mattcce"},"content":"**Use case: Add set of contacts**","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"mattcce"},"content":"**MSS**","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"mattcce"},"content":"1. User keys command for adding a contact and specifies all necessary data fields for that contact.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"mattcce"},"content":"2. System validates command and input data fields.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"mattcce"},"content":"3. System adds contact with populated data fields to records.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"mattcce"},"content":"4. System displays to the user information about the most recently added contact.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"mattcce"},"content":"   Steps 1-4 are repeated until all contacts have been added.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"mattcce"},"content":"   Use case ends.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"mattcce"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"mattcce"},"content":"* 2a. System is unable to parse or decode command.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"mattcce"},"content":"    * 2a1. System informs user of exact error and hints at how to fix the error.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"mattcce"},"content":"    * 2a2. User corrects and reenters the command.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"mattcce"},"content":"  Steps 2a1-2a2 are repeated until a valid command is entered.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"mattcce"},"content":"* 4a. User realises that they added an invalid contact or a contact with invalid data fields.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"mattcce"},"content":"    * 4a1. User keys command for deleting that contact.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"mattcce"},"content":"  Use case ends.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"denz-denz"},"content":"**Use case: Comprehensive find set of contacts that fit a specific filter**","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"mattcce"},"content":"**MSS**","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"mattcce"},"content":"1. User keys command to specify criteria on which to match contacts/records.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"denz-denz"},"content":"2. System searches for records for any fields that match the provided criteria.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"mattcce"},"content":"3. System displays to user the records found.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"mattcce"},"content":"   Steps 1-3 are repeated with the user refining their criteria until they are satisfied with    the located records.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"mattcce"},"content":"   Use case ends.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"mattcce"},"content":"**Use case: Add links between contacts**","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"mattcce"},"content":"1. User keys command to specify a named link between contacts saved.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"mattcce"},"content":"2. System searches for the contacts specified by index number and adds a named link between them.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"mattcce"},"content":"3. System displays to the user the link formed.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"mattcce"},"content":"   Steps 1-3 are repeated for all links that are to be added.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"denz-denz"},"content":"* 3a. User realises that they made an incorrect link with invalid fields.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"mattcce"},"content":"    * 3a1. User keys command for deleting the affected contacts.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"mattcce"},"content":"    * 3a2. User adds the deleted contacts in 3a1.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"mattcce"},"content":"    * 3a3. User keys in link command with the correct fields.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"mattcce"},"content":"**Use case: Mass import data from external source**","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"mattcce"},"content":"**MSS**","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"mattcce"},"content":"1. User locates local data file containing all existing records.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"mattcce"},"content":"2. User converts their external source into the same format as that expected by the system.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"mattcce"},"content":"3. User injects their formatted external data into the local data file.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"mattcce"},"content":"4. User starts the system.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"mattcce"},"content":"5. System validates the data file.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"mattcce"},"content":"   Use case ends.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"mattcce"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"mattcce"},"content":"* 5a. Data file format is invalid after manual user addition.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"mattcce"},"content":"    * 5a1. System informs user that the data file may have been corrupted.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"mattcce"},"content":"    * 5a2. User closes the system and fixes the error in the data file.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"mattcce"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"denz-denz"},"content":"**Use case: Add tags to contacts**","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"denz-denz"},"content":"**MSS**","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"denz-denz"},"content":"1. User keys command to add tags to a contact.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"denz-denz"},"content":"2. System searches for contact specified by index number and adds the specified tags to the contact.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"denz-denz"},"content":"3. System displays to user the tags added to the specified contact.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"denz-denz"},"content":"   Steps 1 - 3 are repeated for all tags that are to be added.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"denz-denz"},"content":"   Use case ends.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"denz-denz"},"content":"* 2a. System is unable to parse or decode command.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"denz-denz"},"content":"    * 2a1. System informs user of exact error and hints at how to fix the error.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"denz-denz"},"content":"    * 2a2. User corrects and reenters the command.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"denz-denz"},"content":"  Steps 2a1-2a2 are repeated until a valid command is entered.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"denz-denz"},"content":"* 3a. User realises he added the tags wrongly.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"denz-denz"},"content":"    * 3a1. User keys command for untagging the wrongly added tags.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"denz-denz"},"content":"    * 3a2. User repeats steps 1-3 to add the correct tags.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"denz-denz"},"content":"**Use case: Remove tags from contacts**","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"denz-denz"},"content":"**MSS**","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"denz-denz"},"content":"1. User keys command to remove tags from a contact","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"denz-denz"},"content":"2. System searches for contact specified by index number and removes the specified tags from the contact","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"denz-denz"},"content":"3. System displays to user the tags removed from the specified contact","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"denz-denz"},"content":"   Steps 1–3 are repeated until the user is satisfied with the tags remaining on their contacts.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"denz-denz"},"content":"   Use case ends","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"denz-denz"},"content":"**Extensions**","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"denz-denz"},"content":"* 2a. System is unable to parse or decode command.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"denz-denz"},"content":"    * 2a1. System informs user of exact error and hints at how to fix the error.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"denz-denz"},"content":"    * 2a2. User corrects and reenters the command.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"denz-denz"},"content":"  Steps 2a1-2a2 are repeated until a valid command is entered.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"denz-denz"},"content":"* 2b. System is unable to find the specified tags to remove","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"denz-denz"},"content":"    * 2b1. System informs user that the tag is not found","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"denz-denz"},"content":"    * 2b2. User corrects and reenters the command","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"denz-denz"},"content":"  Steps 2b1-2b2 are repeated until a valid tag to be removed is entered.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"denz-denz"},"content":"* 3a. User realises he removed the tags wrongly","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"denz-denz"},"content":"    * 3a1. User keys command for re-tagging the wrongly removed tags","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"denz-denz"},"content":"    * 3a2. User repeats steps 1-3 to remove the correct tags","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"denz-denz"},"content":"  ","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"denz-denz"},"content":"  Use case ends.","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-12T10:36:18","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"denz-denz"},"content":"**Use case: Add fields to contacts**","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"denz-denz"},"content":"**MSS**","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"denz-denz"},"content":"1. User keys command to add fields with a corresponding value to a contact.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"denz-denz"},"content":"2. System searches for contact specified by index number and adds the specified field with the corresponding value to the contact","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"denz-denz"},"content":"3. System displays to user the field and associated value added to the specified contact.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"denz-denz"},"content":"    Steps 1-3 are repeated until all desired fields have been    ","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"denz-denz"},"content":"added.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"denz-denz"},"content":"    Use case ends.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"denz-denz"},"content":"**Extensions**","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"denz-denz"},"content":"* 2a. System is unable to parse or decode command.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"denz-denz"},"content":"    * 2a1. System informs user of exact error and hints at how to fix the error.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"denz-denz"},"content":"    * 2a2. User corrects and reenters the command.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"denz-denz"},"content":"  Steps 2a1-2a2 are repeated until a valid command is entered.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"denz-denz"},"content":"* 2b. The field to be added already exists.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"denz-denz"},"content":"    * 2b1. System updates the already existent field with the new value passed in.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"denz-denz"},"content":"* 3a. The user realised he added the fields wrongly.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"denz-denz"},"content":"    * 3a1. User keys command to delete the wrongly added field","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"denz-denz"},"content":"    ","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"denz-denz"},"content":"  Use case resumes from step 1","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"denz-denz"},"content":"**Use case: Delete fields from contacts**","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"denz-denz"},"content":"**MSS**","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"denz-denz"},"content":"1. User keys command to delete field from a contact.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"denz-denz"},"content":"2. System searches for contact specified by index number and removes specified field.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"denz-denz"},"content":"3. System displays to user the field removed from the specified contact.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"denz-denz"},"content":"   Steps 1-3 are repeated until all desired fields have been removed.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"denz-denz"},"content":"   Use case ends.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"denz-denz"},"content":"**Extensions**","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"denz-denz"},"content":"* 2a. System is unable to parse or decode command.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"denz-denz"},"content":"    * 2a1. System informs user of exact error and hints at how to fix the error.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"denz-denz"},"content":"    * 2a2. User corrects and reenters the command.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"denz-denz"},"content":"  Steps 2a1-2a2 are repeated until a valid command is entered.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"denz-denz"},"content":"* 2b. The field to be removed does not exist.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"denz-denz"},"content":"    * 2b1. System informs user that the field is not found.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"denz-denz"},"content":"    * 2b2. User corrects and reenters the command.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"denz-denz"},"content":"* 3a. User realises he removed the wrong field.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"denz-denz"},"content":"    * 3a1. User keys command to add the wrongly deleted field.","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"denz-denz"},"content":"  Use case resumes from step 1","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-13T22:32:36","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"mattcce"},"content":"**Performance**:","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"mattcce"},"content":"- The system should respond within **1 second** for each command.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"mattcce"},"content":"**Portability**:","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"mattcce"},"content":"- The product should work on all machines (**Windows, Linux, Mac**).","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"mattcce"},"content":"- The system should only require Java 17 or higher.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"mattcce"},"content":"**Security**:","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"mattcce"},"content":"- All data must be stored **locally inside a save file**.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"mattcce"},"content":"**Scalability**:","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"mattcce"},"content":"- The system should remain usable with up to **1000 contacts**, with command execution time not exceeding **3 seconds**.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"mattcce"},"content":"**Usability**:","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"mattcce"},"content":"- Error messages must pinpoint exact error and suggest fixes","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"mattcce"},"content":"**Speed**:","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"mattcce"},"content":"- A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-10-01T22:22:48","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09T15:37:20","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false}],"authorContributionMap":{"Xateh":7,"mattcce":259,"denz-denz":109,"-":367}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure Intellij is configured to use **JDK 17**.","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15T11:05:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xateh"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AssetSphere’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07T16:10:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Tracing code](https://se-education.org/guides/tutorials/ab3TracingCode.html)","lastModifiedDate":"2025-02-06T20:42:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Adding a new command](https://se-education.org/guides/tutorials/ab3AddRemark.html)","lastModifiedDate":"2025-02-06T20:42:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * [Removing fields](https://se-education.org/guides/tutorials/ab3RemovingFields.html)","lastModifiedDate":"2025-02-06T20:42:15","isFullCredit":false}],"authorContributionMap":{"Xateh":1,"-":61}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"# AssetSphere User Guide","lastModifiedDate":"2025-10-12T18:21:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"AssetSphere is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AssetSphere can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2025-10-12T18:21:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25T13:19:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25T13:19:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Download the latest `.jar` file from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-07-30T23:08:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01T16:03:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01T16:03:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01T16:08:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"#### Basic Command Structure","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"**NOTE TO REVIEWERS**: This part of the UG contains the updated command syntax that the app will eventually use. However, not all of the rest of the UG has been updated to be aligned with this new syntax. This **will be fixed** in a later version.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"All commands follow the same simple format:","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"`command \u003cparameters…\u003e \u003coptions…\u003e`","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"1. **Command:** The action you want to perform (e.g., `add`, `list`, `delete`).","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"2. **Parameters:** Inputs the command _needs_ to work. These are usually **required**, and their **order matters**.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"3. **Options:** Optional settings that change _how_ the command works. They always start with a slash (`/`) and can be in **any order**, but must come _after_ all parameters.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"**Parameters**","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-12T18:25:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"Parameters are the main inputs for a command.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"- **Order is Key:** You must provide them in the specific order shown in the command\u0027s help text.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"- **Handling Spaces:** If your parameter includes spaces, you **must** wrap it in straight quotes (`\"\"`).","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"    - `add \"New task\"` (This is one parameter: \"New task\")","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"    - `add New task` (This is two parameters: \"New\" and \"task\")","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"- **Parameter Types:** Some commands use special prefixes for parameters:","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"    - **Normal:** `\"My task\"`","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"    - **Additive:** `+tag` (Used to add an item, like a tag)","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"    - **Subtractive:** `-tag` (Used to remove an item, like a tag)","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"**Options**","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"Options are optional settings to customise your command. They always come _after_ all parameters. There are two types of options:","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"1. **Name-only (Flag):** Used to turn a setting on.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"    - **Example:** `list /all` (The `/all` flag might show completed items)","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"2. **Name-Value Pair:** Used to provide a specific value for a setting. Use a colon (`:`) to separate the name and value.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"    - **Example:** `add \"Finish report\" /priority:high`","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"    - If the value has spaces, wrap the value in quotes: `add \"New event\" /due:\"tomorrow at 5\"`","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"When you look at the help for a command, you\u0027ll see this notation:","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"- **Field Types:**","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"    - `\u003cstring\u003e`: Text that can be a single `word` or `\"text with spaces\"`.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"    - `\u003cword\u003e`: Text that must be a single `word` (without quotes).","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"    - `\u003cindex\u003e`: A positive number (like `1`, `2`, `3`) corresponding to an item in a list.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"- **Multiplicity (How many?):**","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"    - `\u003citem\u003e`: Exactly one is required.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"    - `\u003citem\u003e?`: Zero or one (it\u0027s optional).","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"    - `\u003citem\u003e+`: One or more are required.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"    - `\u003citem\u003e*`: Zero or more (it\u0027s optional and you can provide many).","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"**Example:** `tag \u003cindex\u003e+ \u003ctag\u003e+` means you must provide at least one index, followed by at least one tag.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"**Extraneous Parameters and Options**","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"By default:","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"- the number of parameters are fixed for commands and should be strictly adhered to. Using an number of parameters that does not conform to the requirements of the command format is **undefined behaviour**. Some commands may gracefully handle extraneous parameters if it is sensible to do so, but this behaviour _should not be relied on_.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"- extraneous options are *always* ignored.","lastModifiedDate":"2025-10-21T18:28:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03T23:17:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-07-24T02:42:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"### Adding a tag : `tag`","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"Adds a single tag to an existing person in the address book.","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"Format: `tag INDEX TAG+`","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"* Adds the specified `TAG` to the person at the given `INDEX` in the displayed list.","lastModifiedDate":"2025-10-15T21:19:37","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"* The index refers to the index number shown in the displayed person list and **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"actualmulti"},"content":"* There can be multiple tags added at one time, the tags are separated by a whitespace","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"actualmulti"},"content":"Examples:","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"actualmulti"},"content":"* `list` followed by `tag 2 friend cool` will add `friend` and `cool` to the 2nd person in the address book.","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-12T17:36:30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Xateh"},"content":"### Removing a tag : `untag`","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Xateh"},"content":"Removes a single tag from an existing person in the address book.","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Xateh"},"content":"Format: `untag INDEX t/TAG`","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Xateh"},"content":"* Removes the specified `TAG` from the person at the given `INDEX` in the displayed list.","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Xateh"},"content":"* The index refers to the index number shown in the displayed person list and **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Xateh"},"content":"* If the contact does not have the specified tag, the command will report an error and no changes will be made.","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Xateh"},"content":"Examples:","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Xateh"},"content":"* `list` followed by `untag 2 t/friends` removes the `friends` tag from the 2nd person in the address book.","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"actualmulti"},"content":"### Adding information to a person: `infoedit`","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"actualmulti"},"content":"Edits information about a person given its index.","lastModifiedDate":"2025-10-21T20:47:26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"actualmulti"},"content":"Format: `infoedit INDEX`","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"actualmulti"},"content":"* Displays an editable text box for the person at the given `INDEX` in the displayed list.","lastModifiedDate":"2025-10-21T20:47:26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"actualmulti"},"content":"* The index refers to the index number shown in the displayed person list and **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"actualmulti"},"content":"* If there is existing information attached to the person, it will be shown and editable in the text box.","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"actualmulti"},"content":"Examples:","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"actualmulti"},"content":"* `list` followed by `infoedit 2` will bring up an editable text box for the 2nd person in the address book.","lastModifiedDate":"2025-10-21T20:47:26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"actualmulti"},"content":"### Viewing information of a person: `infoview`","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"actualmulti"},"content":"View information about a person given its index.","lastModifiedDate":"2025-10-21T20:47:26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"actualmulti"},"content":"Format: `infoview INDEX`","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"actualmulti"},"content":"* Displays all the given information of the person at the `INDEX` specified.","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"actualmulti"},"content":"* The index refers to the index number shown in the displayed person list and **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"actualmulti"},"content":"Examples:","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"actualmulti"},"content":"* `list` followed by `infoview 2` will display available information about the 2nd person in the address book.","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dylantjy"},"content":"### Setting a custom field on a person : `field`","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dylantjy"},"content":"Sets or updates one or more **custom field values** for the specified person in the address book.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dylantjy"},"content":"Format: `field INDEX /KEY:VALUE [/KEY:VALUE]…`","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dylantjy"},"content":"* Updates the person at the specified `INDEX`. The index refers to the number shown in the current list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dylantjy"},"content":"* Each `/KEY:VALUE` pair targets a previously defined custom field (`KEY`).","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dylantjy"},"content":"* You may provide **one or multiple** `/KEY:VALUE` pairs in a single command.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dylantjy"},"content":"* If a `VALUE` contains spaces, wrap it in double quotes, e.g. `/notes:\"Met at FinTech conf 2025\"`.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"dylantjy"},"content":"* If a `KEY` is unknown (not defined), the command fails with an error.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dylantjy"},"content":"**Examples:**","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dylantjy"},"content":"* `field 5 /linkedInUsername:alextan /rate:120` — Sets two fields on the 5th person in one command.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dylantjy"},"content":"* `field 3 /notes:\"Met at FinTech conf 2025\"` — Adds a note with spaces to the 3rd person.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dylantjy"},"content":"* `field 7 /birthday:\"1999-02-01\"` — Sets a field on the 7th person in one command.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dylantjy"},"content":"* `field 7 /birthday:\"1999-02-10\"` — Updates the field with `KEY` `birthday` on the 7th person.","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"denz-denz"},"content":"Finds persons whose fields contain any of the given keywords.","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"denz-denz"},"content":"Format: `find \u003ckeyword\u003e+ [/\u003cfield\u003e]*`","lastModifiedDate":"2025-10-21T23:54:56","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"denz-denz"},"content":"If no specific field is provided, all built-in fields will be searched.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"denz-denz"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"denz-denz"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"denz-denz"},"content":"* All the fields are searched.","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"denz-denz"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"denz-denz"},"content":"* Persons matching at least one keyword on any one field will be returned (i.e. `OR` search).","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"denz-denz"},"content":"* `find John` returns `john` and `John Doe`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"denz-denz"},"content":"* `find 99999999` returns all persons whose phone number is `99999999`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"denz-denz"},"content":"* `find test.dummy@gmail.com` returns all persons whose email is `test.dummy@gmail.com`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"denz-denz"},"content":"* `find friend` returns all persons tagged with `\"friend\"`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"denz-denz"},"content":"You can limit the search to specific fields by adding options after your keywords.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"denz-denz"},"content":"Each field option starts with / followed by the field name.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"denz-denz"},"content":"* The same rules for searching applies as per the case of searching all built in fields. (see above)","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"denz-denz"},"content":"* Now, only those persons matching at least one keyword on any one specified field will be returned.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"denz-denz"},"content":"Examples:","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"denz-denz"},"content":"* `find John /name` returns persons whose name contains `john`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"denz-denz"},"content":"* `find gold /assetclass` returns all persons with custom field called `assetclass` and value contains the word `gold`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"denz-denz"},"content":"* `find 99999999 /phone` returns all persons whose phone number is `99999999`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"denz-denz"},"content":"* `find test /name /email` returns all persons whose name or email contains the word `test`.","lastModifiedDate":"2025-10-19T23:15:45","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04T00:18:23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04T00:18:23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08T13:04:40","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04T00:18:23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09T16:47:29","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04T00:18:23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04T00:19:32","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30T23:21:09","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08T13:05:01","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"dylantjy"},"content":"**List**   | `list`","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"actualmulti"},"content":"**Tag**    | `tag INDEX TAG+` \u003cbr\u003e e.g., `tag 2 friend cool`","lastModifiedDate":"2025-10-15T21:19:59","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"dylantjy"},"content":"**Remove tag** | `untag INDEX t/TAG` \u003cbr\u003e e.g., `untag 2 t/friends`","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"actualmulti"},"content":"**Edit Info** | `infoedit INDEX` \u003cbr\u003e e.g., `infoedit 2`","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"actualmulti"},"content":"**View Info** | `infoview INDEX` \u003cbr\u003e e.g., `infoview 2`","lastModifiedDate":"2025-10-21T20:43:24","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"dylantjy"},"content":"**Field**  | `field INDEX /KEY:VALUE` \u003cbr\u003e e.g., `field 2 /company:\"BlackRock\"`","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"dylantjy"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"dylantjy"},"content":"**Clear**  | `clear`","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"dylantjy"},"content":"**Exit**  | `exit`  ","lastModifiedDate":"2025-10-22T00:23:09","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"dylantjy":25,"actualmulti":44,"Xateh":13,"mattcce":44,"denz-denz":23,"-":182}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eAssetSphere\u003c/a\u003e","lastModifiedDate":"2025-09-10T23:54:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09T18:08:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xateh"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2526S1-CS2103T-T13-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false}],"authorContributionMap":{"Xateh":1,"-":62}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27T13:44:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"participant \":Decoder\" as Decoder LOGIC_COLOR","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09T15:47:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09T15:47:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"LogicManager -\u003e Decoder : Decoder.decode(\"delete 1\")","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"activate Decoder","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"Decoder -\u003e DeleteCommand","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"DeleteCommand -\u003e Decoder : d","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"Decoder -\u003e LogicManager : d","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"deactivate Decoder","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2025-10-21T18:54:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09T15:47:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03T12:05:39","isFullCredit":false}],"authorContributionMap":{"mattcce":8,"-":45}},{"path":"docs/diagrams/assembly/AssemblyActivity.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"@startuml","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"start","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":":Receive command string;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"partition \"Phase 1: Lexing\" {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"    :Lex and create TokenisedCommand;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    if () then ([Lexing fails])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"        #pink:Throw LexerException;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"        stop","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    else ([Lexing passes])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"    endif","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"partition \"Phase 2: Parsing\" {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"    :Parse and create Command AST;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    if () then ([Parsing fails])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"        #pink:Throw ParserException;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"        stop","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"    else ([Parsing passes])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"        :Visit AST to extract BareCommand;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"    endif","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"partition \"Phase 3: Resolution\" {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"    :Extract imperative from BareCommand;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    :Query Bindings with imperative predicate;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    :Filter bindings by predicate;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"    :Count matching extractors;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"    if () then ([match count \u003d\u003d 0])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"        #pink:Throw ResolutionException\\n\"Unable to find valid matching command\";","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        stop","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"    elseif () then ([match count \u003e 1])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        #pink:Throw ResolutionException\\n\"Resolved command is ambiguous\";","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"        stop","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"    else ([match count \u003d\u003d 1])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"        :Retrieve CommandExtractor;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"    endif","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"partition \"Phase 4: Validation\" {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"    :Extract and validate parameters from BareCommand;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"    if () then ([Validation fails])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"        #pink:Throw ValidationException;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"        stop","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"    else ([Validation passes])","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        :Construct typed Command object;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"    endif","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":":Return executable Command;","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"stop","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"@enduml","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false}],"authorContributionMap":{"mattcce":61}},{"path":"docs/diagrams/assembly/DecodingSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"@startuml","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"actor System","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"participant \"Caller\" as Caller","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"participant \"Decoder\" as Decoder","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"participant \"BareCommand\" as BareCmd","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"participant \"Bindings\" as Bindings","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"participant \"CommandExtractor\" as Extractor","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"participant \"Command\" as Cmd","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"System -\u003e Decoder: decode(bareCommand)","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"activate Decoder","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"note right of Decoder","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"  Resolution Phase:","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"  Match imperative to","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"  command extractor","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"Decoder -\u003e BareCmd: getImperative()","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"activate BareCmd","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"BareCmd --\u003e Decoder","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"deactivate BareCmd","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"Decoder -\u003e Bindings: resolveExactBinding(predicate)","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"activate Bindings","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"note right of Bindings","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"  Filter bindings using predicate:","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"  imperative.equals(\"tag\")","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"Bindings --\u003e Decoder: return CommandExtractor","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"deactivate Bindings","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"note right of Decoder","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"  Validation Phase:","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"  Extract and validate","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"  command parameters","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"Decoder -\u003e Extractor: extract(bareCommand)","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"activate Extractor","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"note right of Extractor","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"  Construction Phase:","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"  Build typed command","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"  with validated parameters","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"create Cmd","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"Extractor -\u003e Cmd","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"activate Cmd","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"Cmd --\u003e Extractor: return Command","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"deactivate Cmd","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"Extractor --\u003e Decoder: return Command","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"deactivate Extractor","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"Decoder --\u003e System: return Command","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"deactivate Decoder","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"note right of System","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"  Command is now ready","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"  for execution with validated","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"  index and tag set","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"@enduml","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false}],"authorContributionMap":{"mattcce":68}},{"path":"docs/diagrams/assembly/DecodingStructure.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"@startuml","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"!define INTERFACE interface","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"class Decoder {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"    + {static} decode(BareCommand): Command","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"abstract class Command {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    + execute(): CommandResult","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"class BareCommand {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"    - imperative: String","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    - parameters: String[]","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"    - options: HashMap\u003cString,String\u003e","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    __","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"    + getImperative(): String","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"    + getParameter(int): String","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    + getAllParameters(): String[]","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"    + getOptionValue(String): String","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    + hasOption(String): boolean","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"package \"Resolution\" {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"    enum Bindings {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"        TAG(\"tag\", TagCommandExtractor::extract)","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        __","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        - imperative: String","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"        - extractor: CommandExtractor\u003c?\u003e","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"        __","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"        + {static} resolveBindings(Predicate\u003cString\u003e): CommandExtractor\u003c?\u003e[]","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"        + {static} resolveExactBinding(Predicate\u003cString\u003e): CommandExtractor\u003c?\u003e","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"package \"Validation\" {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"    INTERFACE \"CommandExtractor\u003cT\u003e\" as CommandExtractor {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"        + extract(BareCommand): T","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"\u0027 Relationships - Core Decoding Flow","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"Decoder ..\u003e Bindings : uses","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"Decoder ..\u003e BareCommand : accepts","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"Decoder ..\u003e Command : returns","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"Bindings --\u003e CommandExtractor : contains","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"CommandExtractor ..\u003e BareCommand : accepts","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"CommandExtractor ..\u003e Command : returns","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"\u0027 Notes","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"note right of Bindings","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"Registry mapping imperatives","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"to their extractors.","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"Add new commands here.","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"note right of CommandExtractor","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"Functional interface for","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"command-specific extraction","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"and validation logic.","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"@enduml","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false}],"authorContributionMap":{"mattcce":65}},{"path":"docs/diagrams/assembly/RecognitionSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"@startuml","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"actor System","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"participant \"Command\" as Cmd","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"participant \"CommandLexer\" as Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"participant \"TokenisedCommand\" as TokCmd","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"participant \"CommandParser\" as Parser","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"participant \"AstNode.Command\" as AST","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"participant \"CommandExtractor\" as Extractor","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"participant \"CommandBuilder\" as Builder","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"System -\u003e Cmd: parse(commandString)","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"activate Cmd","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"\u0027 Lexing Phase","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"Cmd -\u003e Lexer: lexCommand(commandString)","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"activate Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"note right of Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"  Lexer processes the string","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"  character by character:","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"  - peek() to look ahead","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"  - advance() to consume","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"  - munch() to collect patterns","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"Lexer -\u003e Lexer: lex()","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"activate Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"loop while not at end","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    Lexer -\u003e Lexer: scanToken()","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    activate Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"    deactivate Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"end","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"Lexer -\u003e Lexer: addToken(TERMINAL)","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"deactivate Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"create TokCmd","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"Lexer -\u003e TokCmd: new TokenisedCommand(tokens)","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"Lexer --\u003e Cmd: return TokenisedCommand","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"deactivate Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"\u0027 Parsing Phase","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"Cmd -\u003e Parser: parseCommand(tokenisedCommand)","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"activate Parser","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"note right of Parser","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"  Parser uses recursive descent,","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"  calling parsing methods that","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"  mirror the grammar structure","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"Parser -\u003e Parser: parseCommand()","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"activate Parser","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"create AST","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"Parser -\u003e AST: new Command(imperative, params, options)","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"Parser --\u003e Parser: return AstNode.Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"deactivate Parser","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"Parser --\u003e Cmd: return AstNode.Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"deactivate Parser","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"\u0027 Extraction Phase","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"Cmd -\u003e Extractor: extract(astCommand)","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"activate Extractor","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"note right of Extractor","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"  Extractor uses the Visitor pattern","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"  to traverse the AST and build","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"  the final Command object","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"create Builder","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"Extractor -\u003e Builder: new CommandBuilder()","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"note right of Extractor","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"    multiple calls to","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"    CommandBuilder are made","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"    to set values while traversing","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"    the AST","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"end note","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"deactivate AST","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"Extractor -\u003e Builder: build()","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"activate Builder","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"create \"Command (result)\" as Result","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"Builder -\u003e Result: new Command(imperative, params, options)","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"Builder --\u003e Extractor: return Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"deactivate Builder","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"Extractor --\u003e Cmd: return Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"deactivate Extractor","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"Cmd --\u003e System: return Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"deactivate Cmd","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"@enduml","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false}],"authorContributionMap":{"mattcce":102}},{"path":"docs/diagrams/assembly/RecognitionStructure.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"@startuml","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"!define ABSTRACT_CLASS abstract class","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"!define INTERFACE interface","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"!define ABSTRACT_METHOD {abstract}","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"package \"Lexer\" {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"    class CommandLexer {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"        - ingest: String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"        - tokens: ArrayList\u003cToken\u003e","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"        - start: int","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"        - current: int","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"        __","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"        + {static} lexCommand(String): TokenisedCommand","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"        - lex(): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"        - scanToken(): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"        - peek(): char","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"        - advance(): char","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"        - munchWord(): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"        - munchText(): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"        - addToken(TokenType): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"        - error(LexerErrorType): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"    class TokenisedCommand {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"        - ingest: String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"        - tokens: List\u003cToken\u003e","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        __","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        + getIngest(): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"        + getAtIndex(int): Token","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    class Token {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"        - type: TokenType","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"        - literal: String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        - location: Location","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"        __","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        + getType(): TokenType","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"        + getLiteral(): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        + getLocation(): Location","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"    enum TokenType {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"        WORD","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"        TEXT","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"        SLASH","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"        COLON","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        TERMINAL","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"package \"Parser\" {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"    class CommandParser {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        - tokenisedCommand: TokenisedCommand","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"        - currentTokenIndex: int","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"        __","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"        + {static} parseCommand(TokenisedCommand): AstNode.Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"        - parseCommand(): AstNode.Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"        - parseImperative(): AstNode.Imperative","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"        - parseParameterList(): AstNode.ParameterList","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"        - parseParameter(): AstNode.Parameter","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"        - parseOptionList(): AstNode.OptionList","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"        - parseOption(): AstNode.Option","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"        - parseOptionName(): AstNode.OptionName","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"        - parseOptionValue(): AstNode.OptionValue","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"        - parseWord(): AstNode.Word","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"        - parseText(): AstNode.Text","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"        - eat(TokenType...): Token","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"        - advance(): Token","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"        - peek(): Token","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"        - check(TokenType...): boolean","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"    package \"AST\" {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"        ABSTRACT_CLASS AstNode {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"            + accept(AstVisitor): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"        note \"various AstNodes are implemented here, extending `AstNode`\" as N1","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"        package \"Visitor\" {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"            INTERFACE \"AstVisitor\u003cR\u003e\" as AstVisitor {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"                + visitCommand(Command): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"                + visitImperative(Imperative): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"                + visitParameterList(ParameterList): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"                + visitParameter(Parameter): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"                + visitOptionList(OptionList): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"                + visitOption(Option): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"                + visitOptionName(OptionName): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"                + visitOptionValue(OptionValue): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"                + visitText(Text): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"                + visitWord(Word): R","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"            }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"            class CommandExtractor {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"                + extract(Command): Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"                + visitCommand(Command): Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"                + visitImperative(Imperative): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"                + visitParameterList(ParameterList): List\u003cString\u003e","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"                + visitParameter(Parameter): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"                + visitOptionList(OptionList): Map\u003cString,String\u003e","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"                + visitOption(Option): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"                + visitOptionName(OptionName): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"                + visitOptionValue(OptionValue): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"                + visitText(Text): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"                + visitWord(Word): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"            }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"class Command {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"    - imperative: String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"    - parameters: String[]","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"    - options: HashMap\u003cString,String\u003e","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"    __","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"    + {static} parse(String): Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"    + getImperative(): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"    + getParameter(int): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"    + getAllParameters(): String[]","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"    + getOptionValue(String): String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"    + hasOption(String): boolean","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"class CommandBuilder {","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"    - imperative: String","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"    - parameters: ArrayList\u003cString\u003e","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"    - options: HashMap\u003cString,String\u003e","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"    __","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"    + setImperative(String): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"    + addParameter(String): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"    + setOption(String): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"    + setOption(String, String): void","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"    + build(): Command","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"\u0027 Relationships - Lexer","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"CommandLexer ..\u003e TokenisedCommand : creates","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"TokenisedCommand *-- Token","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"Token --\u003e TokenType","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"\u0027 Relationships - Parser","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"CommandParser --\u003e TokenisedCommand : uses","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mattcce"},"content":"CommandParser ..\u003e Command : creates","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mattcce"},"content":"\u0027 Relationships - Visitor","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mattcce"},"content":"CommandExtractor ..|\u003e AstVisitor","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mattcce"},"content":"AstNode ..\u003e AstVisitor : accepts","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mattcce"},"content":"CommandExtractor ..\u003e CommandBuilder : uses","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mattcce"},"content":"\u0027 Relationships - Interface","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mattcce"},"content":"Command +-- CommandBuilder","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mattcce"},"content":"Command ..\u003e CommandLexer : uses","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mattcce"},"content":"Command ..\u003e CommandParser : uses","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mattcce"},"content":"Command ..\u003e CommandExtractor : uses","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mattcce"},"content":"CommandBuilder ..\u003e Command : builds","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mattcce"},"content":"hide empty members","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mattcce"},"content":"@enduml","lastModifiedDate":"2025-10-08T12:52:49","isFullCredit":false}],"authorContributionMap":{"mattcce":160}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xateh"},"content":"# AssetSphere","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12T01:20:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xateh"},"content":"[![Java CI](https://github.com/AY2526S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2526S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xateh"},"content":"[![codecov](https://codecov.io/gh/AY2526S1-CS2103T-T13-2/tp/graph/badge.svg?token\u003d2BL7QTFFKN)](https://codecov.io/gh/AY2526S1-CS2103T-T13-2/tp)","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xateh"},"content":"**AssetSphere is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xateh"},"content":"* If you are interested in using AssetSphere, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xateh"},"content":"* If you are interested about developing AssetSphere, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xateh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-09-28T02:00:12","isFullCredit":false}],"authorContributionMap":{"Xateh":7,"-":15}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29T19:33:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.commands.FieldCommand;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.grammars.command.lexer.LexerException;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.grammars.command.parser.ParserException;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09T23:15:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29T19:33:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28T20:36:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25T00:37:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29T19:33:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"        try {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"            BareCommand gcmd \u003d BareCommand.parse(commandText);","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"            String imp \u003d gcmd.getImperative();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"            logger.info(\"[GRAMMAR] imp\u003d\" + imp); //TEMP: remove after verifying","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"            if (imp !\u003d null \u0026\u0026 imp.equalsIgnoreCase(\"field\")) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"                FieldCommand fc \u003d new FieldCommand(gcmd);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"                CommandResult result \u003d fc.execute(model);","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"                String feedback \u003d result.getFeedbackToUser(); // mutates model","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"                try {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"                    storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"                } catch (AccessDeniedException e) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"                    throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"                } catch (IOException ioe) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"                    throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"                }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"                return new CommandResult(feedback);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"            // if imperative is not \"field\", continue to legacy parser below","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"        } catch (LexerException | ParserException ex) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"            logger.info(\"[GRAMMAR] parse failed: \" + ex.getMessage()); // TEMP: remove later","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"        // Existing flow for all other commands","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"        var command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29T14:17:10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false}],"authorContributionMap":{"dylantjy":31,"-":86}},{"path":"src/main/java/seedu/address/logic/commands/FieldCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"import java.util.List;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"/**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":" * Adds or updates custom key→value fields on a person.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":" * Usage: {@code field \u003cindex\u003e /\u003ckey\u003e:\u003cvalue\u003e ...}","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":" */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"public class FieldCommand extends Command {","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"    public static final String COMMAND_WORD \u003d \"field\";","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"    private final int oneBasedIndex;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"    private final Map\u003cString, String\u003e pairs;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"     * Creates a FieldCommand from a parsed {@link BareCommand}.","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"     * @throws IllegalArgumentException if parameters/options are invalid.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"    public FieldCommand(BareCommand c) {","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"        requireNonNull(c);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"        if (!\"field\".equalsIgnoreCase(c.getImperative())) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"            throw new IllegalArgumentException(\"Wrong imperative for FieldCommand\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"        // Parse index (1-based)","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"        try {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"            this.oneBasedIndex \u003d Integer.parseInt(c.getParameter(0));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"        } catch (ArrayIndexOutOfBoundsException ex0) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"            throw new IllegalArgumentException(\"Missing index. Usage: field \u003cindex\u003e /key:value ...\", ex0);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"        } catch (NumberFormatException ex1) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"            throw new IllegalArgumentException(\"Invalid index. Must be a positive integer.\", ex1);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"        // Collect /key:value options","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e tmp \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"        for (Map.Entry\u003cString, String\u003e entry : c.getAllOptions().entrySet()) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"            String k \u003d entry.getKey();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"            String v \u003d entry.getValue();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"            if (v !\u003d null) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"                tmp.put(k, v);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"        if (tmp.isEmpty()) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"                \"Provide at least one /key:value pair. Usage: field \u003cindex\u003e /key:value ...\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"        this.pairs \u003d tmp;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"     * Convenience constructor used by tests.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"    public FieldCommand(int oneBasedIndex, Map\u003cString, String\u003e pairs) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"        if (oneBasedIndex \u003c\u003d 0 || pairs \u003d\u003d null || pairs.isEmpty()) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"            throw new IllegalArgumentException(\"Index must be \u003e 0 and at least one /key:value pair provided.\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"        this.oneBasedIndex \u003d oneBasedIndex;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"        this.pairs \u003d new LinkedHashMap\u003c\u003e(pairs);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"     * Executes the command: updates the selected person\u0027s custom fields and returns a user message.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"    @Override","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"        List\u003cPerson\u003e list \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"        int zero \u003d oneBasedIndex - 1;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"        if (zero \u003c 0 || zero \u003e\u003d list.size()) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"        Person target \u003d list.get(zero);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"        // Merge strategy: overwrite existing keys with new values, keep others.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e merged \u003d new LinkedHashMap\u003c\u003e(target.getCustomFields());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"        for (Map.Entry\u003cString, String\u003e e : pairs.entrySet()) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"            String k \u003d normalizeKey(e.getKey());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"            String v \u003d normalizeValue(e.getValue());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"            validate(k, v);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"            merged.put(k, v);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"        Person edited \u003d target.withCustomFields(merged);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"        model.setPerson(target, edited);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"        // persistence handled by LogicManager or caller","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"        // Build feedback message","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Added/updated field(s): \");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"        boolean first \u003d true;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"        for (Map.Entry\u003cString, String\u003e e : pairs.entrySet()) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylantjy"},"content":"            if (!first) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylantjy"},"content":"                sb.append(\", \");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylantjy"},"content":"            first \u003d false;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylantjy"},"content":"            sb.append(e.getKey()).append(\":\").append(e.getValue());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylantjy"},"content":"        sb.append(\" for \").append(edited.getName().fullName);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylantjy"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylantjy"},"content":"    private static String normalizeKey(String key) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"        return key \u003d\u003d null ? \"\" : key.trim();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylantjy"},"content":"    private static String normalizeValue(String value) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dylantjy"},"content":"        return value \u003d\u003d null ? \"\" : value.trim();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylantjy"},"content":"    private static void validate(String key, String value) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dylantjy"},"content":"        if (key.isEmpty()) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylantjy"},"content":"            throw new IllegalArgumentException(\"Field name cannot be blank.\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylantjy"},"content":"        if (value.isEmpty()) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylantjy"},"content":"            throw new IllegalArgumentException(\"Field value cannot be blank.\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dylantjy"},"content":"        // Optional: add length constraints if CheckStyle/enforcer requires.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false}],"authorContributionMap":{"dylantjy":127}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"denz-denz"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01T03:05:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"denz-denz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields contain any of \"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01T03:05:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"denz-denz"},"content":"    private final FieldContainsKeywordsPredicate predicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"denz-denz"},"content":"    public FindCommand(FieldContainsKeywordsPredicate predicate) {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01T02:26:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01T02:26:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false}],"authorContributionMap":{"denz-denz":4,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import java.util.List;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import java.util.Objects;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import java.util.Set;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":" * Adds tag to existing person in address book.","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds tags to person identified \"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"            + \"New tags will be added on top of existing tags.\\n\"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"            + \"[TAG NAME]...\\n\"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 beast friend\";","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"    public static final String MESSAGE_ADD_TAGS_SUCCESS \u003d \"Added tag to person: %1$s %2$s\";","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"    public static final String MESSAGE_NO_TAGS_PROVIDED \u003d \"At least one tag must be provided.\";","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"    public static final String MESSAGE_DUPLICATE_TAGS \u003d \"Some tags already exist for this person: %1$s\";","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"    private final Index index;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"    private final Set\u003cTag\u003e tagsToAdd;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"     * @param index of the person in the filtered person list to add tags","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"     * @param tagsToAdd tags to add to the person","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"    public TagCommand(Index index, Set\u003cTag\u003e tagsToAdd) {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"        requireNonNull(index);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"        requireNonNull(tagsToAdd);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"        this.tagsToAdd \u003d new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"        Person editedPerson \u003d createPersonWithAddedTags(personToEdit, tagsToAdd);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"        String tagsString \u003d tagsToAdd.stream()","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"                .map(tag -\u003e tag.tagName)","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"                .reduce((t1, t2) -\u003e t1 + \", \" + t2)","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"                .orElse(\"\");","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAGS_SUCCESS,","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"                Messages.format(editedPerson), tagsString));","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"     * Creates and returns a Person with tags added.","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"    private static Person createPersonWithAddedTags(Person personToEdit, Set\u003cTag\u003e tagsToAdd) {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(personToEdit.getTags());","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"        updatedTags.addAll(tagsToAdd);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"        return new Person(personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"                personToEdit.getEmail(), personToEdit.getAddress(), updatedTags);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"            return true;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"            return false;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"        TagCommand otherTagCommand \u003d (TagCommand) other;","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"        return index.equals(otherTagCommand.index)","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"                \u0026\u0026 tagsToAdd.equals(otherTagCommand.tagsToAdd);","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"    public int hashCode() {","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"        return Objects.hash(index, tagsToAdd);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"    public String toString() {","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"                .add(\"index\", index)","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"                .add(\"tagsToAdd\", tagsToAdd)","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"                .toString();","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-10-05T01:09:30","isFullCredit":false}],"authorContributionMap":{"actualmulti":116}},{"path":"src/main/java/seedu/address/logic/commands/UntagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Xateh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xateh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xateh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xateh"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xateh"},"content":"import java.util.List;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xateh"},"content":"import java.util.Objects;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xateh"},"content":"import java.util.Set;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xateh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xateh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xateh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xateh"},"content":"/**","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xateh"},"content":" * Removes a tag from an existing person in the address book.","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xateh"},"content":" */","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xateh"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xateh"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xateh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a tag from the person identified \"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xateh"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xateh"},"content":"            + \"Parameters: INDEX (must be a positive integer) t/TAG\\n\"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xateh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 t/friends\";","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xateh"},"content":"    public static final String MESSAGE_REMOVE_TAG_SUCCESS \u003d \"Removed tag %1$s from %2$s\";","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xateh"},"content":"    public static final String MESSAGE_TAG_NOT_FOUND \u003d \"%1$s does not contain tag %2$s.\";","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xateh"},"content":"    private final Index index;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xateh"},"content":"    private final Tag tagToRemove;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xateh"},"content":"    /**","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xateh"},"content":"     * @param index of the person in the filtered person list whose tag is to be removed","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xateh"},"content":"     * @param tagToRemove tag that will be removed from the person","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xateh"},"content":"     */","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xateh"},"content":"    public UntagCommand(Index index, Tag tagToRemove) {","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xateh"},"content":"        requireNonNull(index);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xateh"},"content":"        requireNonNull(tagToRemove);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xateh"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xateh"},"content":"        this.tagToRemove \u003d tagToRemove;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xateh"},"content":"    @Override","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xateh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xateh"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xateh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xateh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xateh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xateh"},"content":"        }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xateh"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xateh"},"content":"        if (!personToEdit.getTags().contains(tagToRemove)) {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xateh"},"content":"            throw new CommandException(String.format(MESSAGE_TAG_NOT_FOUND,","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xateh"},"content":"                    Messages.format(personToEdit), tagToRemove));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xateh"},"content":"        }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xateh"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(personToEdit.getTags());","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xateh"},"content":"        updatedTags.remove(tagToRemove);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xateh"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xateh"},"content":"                personToEdit.getAddress(), updatedTags);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xateh"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xateh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xateh"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_TAG_SUCCESS, tagToRemove,","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xateh"},"content":"                Messages.format(editedPerson)));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xateh"},"content":"    @Override","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xateh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xateh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xateh"},"content":"            return true;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xateh"},"content":"        }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xateh"},"content":"        if (!(other instanceof UntagCommand)) {","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xateh"},"content":"            return false;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xateh"},"content":"        }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xateh"},"content":"        UntagCommand otherCommand \u003d (UntagCommand) other;","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xateh"},"content":"        return index.equals(otherCommand.index) \u0026\u0026 tagToRemove.equals(otherCommand.tagToRemove);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xateh"},"content":"    @Override","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xateh"},"content":"    public int hashCode() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xateh"},"content":"        return Objects.hash(index, tagToRemove);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Xateh"},"content":"}","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false}],"authorContributionMap":{"Xateh":93}},{"path":"src/main/java/seedu/address/logic/commands/decoder/Bindings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.commands.decoder;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ResolutionException;","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ValidationException;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.extractors.CommandExtractor;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.extractors.TagCommandExtractor;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":" * Enumeration containing bindings for all imperatives and their respective command extractors.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"public enum Bindings {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    TAG(\"tag\", TagCommandExtractor::extract);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"    private static final String MESSAGE_NO_MATCHING_BINDING \u003d \"Unable to find a valid matching command.\";","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    private static final String MESSAGE_AMBIGUOUS_BINDING \u003d \"Resolved command is ambiguous.\";","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    private final String imperative;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"    private final CommandExtractor\u003c?\u003e extractor;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"    private \u003cT extends Command\u003e Bindings(String imperative, CommandExtractor\u003cT\u003e extractor) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"        this.imperative \u003d imperative;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"        this.extractor \u003d extractor;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"     * Returns {@code CommandExtractor}s corresponding to commands whose imperatives match a provided predicate.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"     * @param predicate Predicate used to test for matching imperatives.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"     * @return CommandExtractors corresponding to the imperatives that match the predicate.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"    public static CommandExtractor\u003c?\u003e[] resolveBindings(Predicate\u003cString\u003e predicate) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"        return Arrays.stream(Bindings.values())","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"                .filter(binding -\u003e predicate.test(binding.imperative))","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"                .map(binding -\u003e binding.extractor).toArray(CommandExtractor\u003c?\u003e[]::new);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"     * Returns a single {@code CommandExtractor} corresponding to the command whose imperative matches a provided","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"     * predicate.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"     * @param predicate Predicate used to test for matching imperative.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"     * @return CommandExtractor corresponding to the imperatives that match the predicate.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"     * @throws ValidationException When no commands are resolved to or there are multiple resolved commands.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"    public static CommandExtractor\u003c?\u003e resolveExactBinding(Predicate\u003cString\u003e predicate) throws ResolutionException {","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"        CommandExtractor\u003c?\u003e[] extractors \u003d Arrays.stream(Bindings.values())","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"                .filter(binding -\u003e predicate.test(binding.imperative))","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"                .map(binding -\u003e binding.extractor).toArray(CommandExtractor\u003c?\u003e[]::new);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"        if (extractors.length \u003d\u003d 0) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"            throw new ResolutionException(MESSAGE_NO_MATCHING_BINDING);","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"        if (extractors.length \u003e 1) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"            throw new ResolutionException(MESSAGE_AMBIGUOUS_BINDING);","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"        return extractors[0];","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false}],"authorContributionMap":{"mattcce":64}},{"path":"src/main/java/seedu/address/logic/commands/decoder/Decoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.commands.decoder;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ResolutionException;","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ValidationException;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.extractors.CommandExtractor;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":" * Utility class for decoding given commands and dispatching to the relevant command(s).","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"public class Decoder {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"    private Decoder() {}","lastModifiedDate":"2025-10-14T00:19:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T00:19:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"     * Decodes the relevant {@code Command} to be executed.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"     * @param bareCommand Input bare command","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"     * @return Decoded command, ready for execution.","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"     * @throws ResolutionException When a command could not be definitively resolved.","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    public static Command decode(BareCommand bareCommand) throws ResolutionException, ValidationException {","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"        String currentImperative \u003d bareCommand.getImperative();","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"        // use exact matching","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"        CommandExtractor\u003c?\u003e extractor \u003d","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"                Bindings.resolveExactBinding(imperative -\u003e imperative.equals(currentImperative));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        return extractor.extract(bareCommand);","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false}],"authorContributionMap":{"mattcce":30}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/ResolutionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":" * Represents an error which occurs during the resolution of a specific {@link Command} to execute.","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"public class ResolutionException extends Exception {","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"    public ResolutionException(String message) {","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"        super(message);","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"     * Constructs a new {@code ResolutionException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2025-10-14T01:30:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    public ResolutionException(String message, Throwable cause) {","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"        super(message, cause);","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false}],"authorContributionMap":{"mattcce":17}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/ValidationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":" * Represents an error which occurs during the validation of a {@link Command}\u0027s parameters and options.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"public class ValidationException extends Exception {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"    public ValidationException(String message) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"        super(message);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"     * Constructs a new {@code ValidationException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    public ValidationException(String message, Throwable cause) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"        super(message, cause);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false}],"authorContributionMap":{"mattcce":17}},{"path":"src/main/java/seedu/address/logic/commands/extractors/CommandExtractor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.commands.extractors;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ValidationException;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":" * Functional interface for command extractors, that accept a {@code BareCommand} and extracts information out of that","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":" * {@code BareCommand} to construct the final {@code Command} to be run.","lastModifiedDate":"2025-10-14T01:30:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":" *","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":" * @param \u003cT\u003e","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"@FunctionalInterface","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"public interface CommandExtractor\u003cT extends Command\u003e {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"    T extract(BareCommand bareCommand) throws ValidationException;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false}],"authorContributionMap":{"mattcce":16}},{"path":"src/main/java/seedu/address/logic/commands/extractors/TagCommandExtractor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.commands.extractors;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import java.util.Set;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ValidationException;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":" * Extractor that builds {@code TagCommand}s.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"public class TagCommandExtractor {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    // Messages for extraction","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_INDEX_UNSPECIFIED \u003d \"Index not specified.\";","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_INDEX_FAILED_TO_PARSE \u003d \"Invalid index: expected positive integer, got %1$s\";","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_RANGE \u003d \"Invalid index: expected positive integer, got %1$s\";","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"    public static final String MESSAGE_TAGS_UNSPECIFIED \u003d \"At least one tag must be specified.\";","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"    private TagCommandExtractor() {}","lastModifiedDate":"2025-10-14T00:19:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-14T00:19:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"     * Extracts command parameters from the given Command object. Performs input validation as well.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"     * @param bareCommand Command to extract parameters from.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"     * @return TagCommand that can be executed.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"     * @throws ValidationException When the command parameters fail to validate.","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"    public static TagCommand extract(BareCommand bareCommand) throws ValidationException {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"        String[] params \u003d bareCommand.getAllParameters();","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"        // extract index","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        if (params.length \u003c\u003d 0) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(MESSAGE_INDEX_UNSPECIFIED);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"        Index index;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(params[0]));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"            // only thrown by Integer::parseInt","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(String.format(MESSAGE_INDEX_FAILED_TO_PARSE, params[0]));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"            // only thrown by Index::fromOneBased","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(String.format(MESSAGE_INDEX_OUT_OF_RANGE, params[0]));","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"        // extract tags","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"        if (params.length \u003c\u003d 1) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"            throw new ValidationException(MESSAGE_TAGS_UNSPECIFIED);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"        for (int i \u003d 1; i \u003c params.length; i++) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"            tags.add(new Tag(params[i]));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"        return new TagCommand(index, tags);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false}],"authorContributionMap":{"mattcce":60}},{"path":"src/main/java/seedu/address/logic/grammars/command/BareCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import java.util.Collections;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.CommandLexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.LexerException;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.TokenisedCommand;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.CommandParser;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ParserException;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.AstNode;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.visitors.CommandExtractor;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":" * Command class that stores the various command tokens in an easily-queryable manner.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"public class BareCommand {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"    private final String imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    private final String[] parameters;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"    private final Map\u003cString, String\u003e options;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"    private BareCommand(String imperative, String[] parameters, Map\u003cString, String\u003e options) {","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"        this.imperative \u003d imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        this.options \u003d options;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"     * Builder for commands.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"    public static class BareCommandBuilder {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"        private String imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        private final ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"        private final Map\u003cString, String\u003e options \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"        public BareCommandBuilder() {","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        public void setImperative(String imperative) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"            this.imperative \u003d imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"        public void addParameter(String parameter) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"            this.parameters.add(parameter);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"        public void setOption(String optionName) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"            this.options.put(optionName, null);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        public void setOption(String optionName, String optionValue) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"            this.options.put(optionName, optionValue);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"         * Builds the final command.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"         * @return Built command.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"        public BareCommand build() {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"            String imperative \u003d this.imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"            String[] parameters \u003d this.parameters.toArray(String[]::new);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"            // Allows nulls (for flag-style options), but prevents external mutation","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"            Map\u003cString, String\u003e options \u003d","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"                Collections.unmodifiableMap(new LinkedHashMap\u003c\u003e(this.options));","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"            return new BareCommand(imperative, parameters, options);","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"     * Parses an input command string into a Command.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"     * @param commandString Input command string.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"     * @return Command.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"     * @throws LexerException  If command string fails to lex.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"     * @throws ParserException If command string fails to parse.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"    public static BareCommand parse(String commandString) throws LexerException, ParserException {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"        TokenisedCommand tokenisedCommand \u003d CommandLexer.lexCommand(commandString);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"        AstNode.Command rootCommandNode \u003d CommandParser.parseCommand(tokenisedCommand);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"        return new CommandExtractor().extract(rootCommandNode);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"    public String getImperative() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"        return this.imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"    public String getParameter(int index) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"        return this.parameters[index];","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"    public String[] getAllParameters() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"        return this.parameters;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"     * Returns the value associated with the key, if provided as an option.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"     * @param key The option key to look for.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"     * @return The value associated with the given key, or returns null if the key was not specified.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"    public String getOptionValue(String key) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"        return this.options.get(key);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"     * Returns whether the key was defined as an option; typically used for boolean flags.","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"     * @param key The option key to look for.","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"     * @return True if the option key was specified/defined, else returns false.","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"    public boolean hasOption(String key) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"        return this.options.containsKey(key);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dylantjy"},"content":"    /*","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylantjy"},"content":"     * Returns a read-only view of all option key→value pairs.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylantjy"},"content":"    public Map\u003cString, String\u003e getAllOptions() {","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylantjy"},"content":"        return this.options;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"dylantjy":16,"mattcce":108}},{"path":"src/main/java/seedu/address/logic/grammars/command/lexer/CommandLexer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.utils.Location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":" * Lexer for commands. Recognises the following regular grammar (Level 3):","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":" *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":" * {@code","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":" * \u003cword\u003e ::\u003d [A-z0-9]+","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":" * \u003ctext\u003e ::\u003d \"[^\"\\/:]*\"","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":" * \u003cslash\u003e ::\u003d /","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":" * \u003ccolon\u003e ::\u003d :","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":" * \u003cterminal\u003e ::\u003d $","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":" * }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"public class CommandLexer {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    private final String ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"    private final ArrayList\u003cToken\u003e tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"    // current lexeme","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"    private int start \u003d 0;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"    private int current \u003d 0;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"    private CommandLexer(String ingest) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"        this.ingest \u003d ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"     * Lexes a command.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"     * @param ingest Command string to be lexed.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"     * @return A TokenisedCommand consisting of the lexed tokens.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"     * @throws LexerException When an error occurs during lexing.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"    public static TokenisedCommand lexCommand(String ingest) throws LexerException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"        CommandLexer lexer \u003d new CommandLexer(ingest);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        lexer.lex();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"        return lexer.toTokenisedCommand();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"    private static boolean isCharacterOfWord(char c) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"        return (\u0027A\u0027 \u003c\u003d c \u0026\u0026 c \u003c\u003d \u0027Z\u0027) || (\u0027a\u0027 \u003c\u003d c \u0026\u0026 c \u003c\u003d \u0027z\u0027) || (\u00270\u0027 \u003c\u003d c \u0026\u0026 c \u003c\u003d \u00279\u0027);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"    private static boolean isRestrictedCharacter(char c) {","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"        return c \u003d\u003d \u0027/\u0027 || c \u003d\u003d \u0027:\u0027 || c \u003d\u003d \u0027\\\"\u0027;","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"     * Lexes the ingested string.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"     * @throws LexerException When an error occurs during lexing.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"    private void lex() throws LexerException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"        while (!this.isAtEnd()) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"            this.scanToken();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"            start \u003d current;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"        this.addToken(TokenType.TERMINAL);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"    private boolean isAtEnd() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"        return current \u003e\u003d ingest.length();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"     * Scans and consumes the next immediate token.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"     * @throws LexerException When an error occurs during lexing.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"    private void scanToken() throws LexerException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"        char c \u003d this.advance();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"        switch (c) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"        case \u0027/\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"            this.addToken(TokenType.SLASH);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"            break;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"        case \u0027:\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"            this.addToken(TokenType.COLON);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"            break;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"        case \u0027A\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"        case \u0027a\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"        case \u0027B\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"        case \u0027b\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"        case \u0027C\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"        case \u0027c\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"        case \u0027d\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"        case \u0027e\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"        case \u0027F\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"        case \u0027f\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"        case \u0027G\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"        case \u0027g\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"        case \u0027H\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"        case \u0027h\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"        case \u0027I\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"        case \u0027i\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"        case \u0027J\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"        case \u0027j\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"        case \u0027K\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"        case \u0027k\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"        case \u0027L\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"        case \u0027l\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"        case \u0027M\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"        case \u0027m\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"        case \u0027N\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"        case \u0027n\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"        case \u0027O\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"        case \u0027o\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"        case \u0027P\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"        case \u0027p\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"        case \u0027Q\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"        case \u0027q\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"        case \u0027R\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"        case \u0027r\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"        case \u0027S\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"        case \u0027s\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"        case \u0027t\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"        case \u0027U\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"        case \u0027u\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"        case \u0027V\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"        case \u0027v\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"        case \u0027W\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"        case \u0027w\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"        case \u0027X\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"        case \u0027x\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"        case \u0027Y\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"        case \u0027y\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"        case \u0027Z\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"        case \u0027z\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"        case \u00270\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"        case \u00271\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"        case \u00272\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"        case \u00273\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"        case \u00274\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"        case \u00275\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mattcce"},"content":"        case \u00276\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mattcce"},"content":"        case \u00277\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mattcce"},"content":"        case \u00278\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mattcce"},"content":"        case \u00279\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mattcce"},"content":"            this.munchWord();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mattcce"},"content":"            this.addToken(TokenType.WORD);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mattcce"},"content":"            break;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mattcce"},"content":"        case \u0027\"\u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mattcce"},"content":"            this.munchText();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mattcce"},"content":"            // trim quotes","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mattcce"},"content":"            String literal \u003d this.ingest.substring(start + 1, current - 1);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mattcce"},"content":"            this.addToken(TokenType.TEXT, literal, start + 1, current - 1);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mattcce"},"content":"            break;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mattcce"},"content":"        case \u0027 \u0027:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mattcce"},"content":"            // ignore whitespace","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mattcce"},"content":"            break;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mattcce"},"content":"        default:","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mattcce"},"content":"            this.error(LexerErrorType.UNEXPECTED_CHARACTER);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mattcce"},"content":"            break;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mattcce"},"content":"     * Returns the current character being looked at by the lexer.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mattcce"},"content":"     * @return Current character being looked at by the lexer.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mattcce"},"content":"    private char peek() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mattcce"},"content":"        return ingest.charAt(current);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mattcce"},"content":"     * Returns the current character being looked at and advances the lexer by one character forward unconditionally.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mattcce"},"content":"     * @return Character being looked at, at the time of calling.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mattcce"},"content":"    private char advance() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mattcce"},"content":"        char c \u003d ingest.charAt(current);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mattcce"},"content":"        current +\u003d 1;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mattcce"},"content":"        return c;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mattcce"},"content":"     * Constructs a token from the current substring being looked at, and inserts it into the token accumulator","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mattcce"},"content":"     * internally in sequence.","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mattcce"},"content":"     * @param type The type of the token just scanned.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mattcce"},"content":"    private void addToken(TokenType type) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mattcce"},"content":"        String literal \u003d this.ingest.substring(start, current);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mattcce"},"content":"        this.addToken(type, literal, start, current);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mattcce"},"content":"    private void addToken(TokenType type, String literal, int start, int end) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mattcce"},"content":"        this.tokens.add(new Token(type, literal, new Location(start, end)));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mattcce"},"content":"     * Munches a word, collecting as many characters matching the word regex as possible.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mattcce"},"content":"    private void munchWord() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mattcce"},"content":"        while (!this.isAtEnd() \u0026\u0026 isCharacterOfWord(this.peek())) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mattcce"},"content":"            this.advance();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mattcce"},"content":"     * Munches text, collecting as many characters matching the text regex as possible.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mattcce"},"content":"    private void munchText() throws LexerException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mattcce"},"content":"        while (!this.isAtEnd() \u0026\u0026 !isRestrictedCharacter(this.peek())) {","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mattcce"},"content":"            this.advance();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mattcce"},"content":"        if (this.isAtEnd() || this.peek() !\u003d \u0027\\\"\u0027) {","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mattcce"},"content":"            this.error(LexerErrorType.UNTERMINATED_STRING);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mattcce"},"content":"        this.advance(); // closing quote","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mattcce"},"content":"     * Constructs and throws an exception storing the state of the lexer and additional information at the point of the","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mattcce"},"content":"     * error.","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mattcce"},"content":"     * @param type The exact generic error encountered by the lexer.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mattcce"},"content":"     * @throws LexerException Always throws.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mattcce"},"content":"    private void error(LexerErrorType type) throws LexerException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mattcce"},"content":"        String offendingLiteral \u003d this.ingest.substring(start, current);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mattcce"},"content":"        LexerError lexerError \u003d new LexerError(type, this.ingest, offendingLiteral, new Location(start, current));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mattcce"},"content":"        throw new LexerException(lexerError);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mattcce"},"content":"    private TokenisedCommand toTokenisedCommand() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mattcce"},"content":"        return new TokenisedCommand(this.ingest, this.tokens);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":241}},{"path":"src/main/java/seedu/address/logic/grammars/command/lexer/LexerError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static seedu.address.logic.grammars.command.utils.Utils.makeVisualDelimiter;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.utils.Location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":" * Errors encountered by the lexer.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"class LexerError {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"    private final LexerErrorType lexerErrorType;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    private final String ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"    private final String offendingLiteral;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    private final Location location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"     * Constructs a new LexerError, encapsulating details of an error occurring during lexing.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"     * @param lexerErrorType   Lexer error type.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"     * @param ingest           Original string input the lexer was lexing at the point of the error.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"     * @param offendingLiteral The offending literal the lexer was attempting to lex when the error occurred.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"     * @param location         Location of the offending literal in the original string input.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"    LexerError(LexerErrorType lexerErrorType, String ingest, String offendingLiteral, Location location) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        this.lexerErrorType \u003d lexerErrorType;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        this.ingest \u003d ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"        this.offendingLiteral \u003d offendingLiteral;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"        this.location \u003d location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"    public String toString() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        lines.add(\"Error occurred during lexing.\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        lines.add(this.ingest);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        lines.add(makeVisualDelimiter(this.location.start(), this.location.end()));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"        lines.add(String.format(\"%s: %s\", this.lexerErrorType.getGenericDescription(), this.offendingLiteral));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"        return String.join(\"\\n\", lines);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":47}},{"path":"src/main/java/seedu/address/logic/grammars/command/lexer/LexerErrorType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":" * Enumeration of all error types the lexer may encounter.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"enum LexerErrorType {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"    UNEXPECTED_CHARACTER(\"Unexpected character\"),","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"    UNTERMINATED_STRING(\"Unterminated string\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"    private final String genericDescription;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    LexerErrorType(String genericDescription) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"        this.genericDescription \u003d genericDescription;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    String getGenericDescription() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"        return genericDescription;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":19}},{"path":"src/main/java/seedu/address/logic/grammars/command/lexer/LexerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":" * Exception for errors encountered during lexing.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"public class LexerException extends Exception {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"    private final LexerError lexerError;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"     * Constructs a new LexerException.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"     * @param lexerError LexerError containing details of the encountered error.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    LexerException(LexerError lexerError) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"        super(lexerError.toString());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"        this.lexerError \u003d lexerError;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":18}},{"path":"src/main/java/seedu/address/logic/grammars/command/lexer/Token.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.utils.Location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":" * Lexer tokens.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"public class Token {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    private final TokenType type;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"    private final String literal;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    private final Location location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"     * Constructs a new lexeme token.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"     * @param type     Type of the identified lexeme.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"     * @param literal  String literal of the identified lexeme.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"     * @param location Location of the identified lexeme within the original ingest.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"    Token(TokenType type, String literal, Location location) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"        this.literal \u003d literal;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"        this.location \u003d location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"    public TokenType getType() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        return this.type;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    public String getLiteral() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"        return this.literal;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"    public Location getLocation() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        return this.location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"    public String toString() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"        return String.format(\"[%02d:%02d] %s : %s\",","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"                this.location.start(), this.location.end(), this.type.getDescription(), this.literal);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":43}},{"path":"src/main/java/seedu/address/logic/grammars/command/lexer/TokenType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":" * Enumeration of all tokens types the lexer may produce.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"public enum TokenType {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"    WORD(\"WORD\"),","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"    TEXT(\"TEXT\"),","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    SLASH(\"SLASH\"),","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"    COLON(\"COLON\"),","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    TERMINAL(\"TERMINAL\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"    private final String description;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"    TokenType(String description) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    public String getDescription() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"        return this.description;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":22}},{"path":"src/main/java/seedu/address/logic/grammars/command/lexer/TokenisedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":" * Lexed command, representing a linear stream of tokens.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"public class TokenisedCommand {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    private final String ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"    private final ArrayList\u003cToken\u003e tokens;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"     * Constructs a new TokenisedCommand.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"     * @param ingest Original string input.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"     * @param tokens Tokens lexed by the command lexer.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"    TokenisedCommand(String ingest, ArrayList\u003cToken\u003e tokens) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"        this.ingest \u003d ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"    public String getIngest() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"        return this.ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"    public Token getAtIndex(int index) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        return this.tokens.get(index);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    public String toString() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"        String[] tokens \u003d this.tokens.stream().map(Token::toString).toArray(String[]::new);","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"        return String.join(\"\\n\", tokens);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":36}},{"path":"src/main/java/seedu/address/logic/grammars/command/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.Token;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.TokenType;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.TokenisedCommand;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.AstNode;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":" * LL(1) parser for commands. Recognises the following context-free grammar (Level 2) consisting of tokens obtained from","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":" * the lexer (tokens from lexer are in CAPITAL):","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":" * {@code","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":" * command          → imperative parameter_list option_list TERMINAL","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":" * imperative       → word","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":" * parameter_list   → ( parameter )+","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":" * parameter        → text","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":" * option_list      → ( option )+","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":" * option           → SLASH option_name ( COLON option_value )*","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":" * option_name      → word","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":" * option_value     → text","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":" * text             → TEXT | WORD","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":" * word             → WORD","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":" * }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"public class CommandParser {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"    private final TokenisedCommand tokenisedCommand;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    private int currentTokenIndex \u003d 0;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    private CommandParser(TokenisedCommand tokenisedCommand) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"        this.tokenisedCommand \u003d tokenisedCommand;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"     * Parses an input command.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"     * @param command Tokenised command to be parsed.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"     * @return Command AST node (root).","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"     * @throws ParserException If the command fails to be parsed.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"    public static AstNode.Command parseCommand(TokenisedCommand command) throws ParserException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"        CommandParser parser \u003d new CommandParser(command);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"        AstNode.Command root;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"            root \u003d parser.parseCommand();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"            throw new ParserException(e.getParserError());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        return root;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"    private AstNode.Command parseCommand() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"            AstNode.Imperative imperative \u003d this.parseImperative();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"            AstNode.ParameterList parameterList \u003d this.parseParameterList();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"            AstNode.OptionList optionList \u003d this.parseOptionList();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"            this.eat(TokenType.TERMINAL);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"            return new AstNode.Command(imperative, parameterList, optionList);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"command\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"    private AstNode.Imperative parseImperative() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"            AstNode.Word word \u003d this.parseWord();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"            return new AstNode.Imperative(word);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"imperative\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"    private AstNode.ParameterList parseParameterList() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"            ArrayList\u003cAstNode.Parameter\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"            // FOLLOW(parameter_list) \u003d { SLASH, TERMINAL }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"            while (!this.check(TokenType.SLASH, TokenType.TERMINAL)) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"                AstNode.Parameter parameter \u003d this.parseParameter();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"                parameters.add(parameter);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"            }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"            return new AstNode.ParameterList(parameters);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"parameter-list\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"    private AstNode.Parameter parseParameter() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"            AstNode.Text text \u003d this.parseText();","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"            return new AstNode.Parameter(text);","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"parameter\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"    private AstNode.OptionList parseOptionList() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"            ArrayList\u003cAstNode.Option\u003e options \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"            // FOLLOW(option_list) \u003d { TERMINAL }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"            // FIRST(option) \u003d { SLASH }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"            while (!this.check(TokenType.TERMINAL)) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"                this.eat(TokenType.SLASH);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"                AstNode.Option option \u003d this.parseOption();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"                options.add(option);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"            }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"            return new AstNode.OptionList(options);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"option-list\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"    private AstNode.Option parseOption() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"            AstNode.OptionName optionName \u003d this.parseOptionName();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"            AstNode.OptionValue optionValue;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"            if (this.check(TokenType.COLON)) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"                this.advance();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"                optionValue \u003d this.parseOptionValue();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"            } else {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"                optionValue \u003d null;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"            }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"            return new AstNode.Option(optionName, optionValue);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"option\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mattcce"},"content":"    private AstNode.OptionName parseOptionName() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mattcce"},"content":"            AstNode.Word word \u003d this.parseWord();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mattcce"},"content":"            return new AstNode.OptionName(word);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"option-name\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mattcce"},"content":"    private AstNode.OptionValue parseOptionValue() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mattcce"},"content":"            AstNode.Text text \u003d this.parseText();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mattcce"},"content":"            return new AstNode.OptionValue(text);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"option-value\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mattcce"},"content":"    private AstNode.Word parseWord() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mattcce"},"content":"            Token token \u003d this.eat(TokenType.WORD);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mattcce"},"content":"            return new AstNode.Word(token);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"word\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mattcce"},"content":"    private AstNode.Text parseText() throws ProductionApplicationException {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mattcce"},"content":"        try {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mattcce"},"content":"            Token token \u003d this.eat(TokenType.TEXT, TokenType.WORD);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mattcce"},"content":"            return new AstNode.Text(token);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mattcce"},"content":"        } catch (ProductionApplicationException e) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mattcce"},"content":"            ParserError error \u003d e.getParserError();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mattcce"},"content":"            error.addProductionNonterminal(\"text\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mattcce"},"content":"            throw e;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mattcce"},"content":"     * Eats a token that matches a list of specified valid token types, and returns the eaten token. Shifts the parser","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mattcce"},"content":"     * forward.","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mattcce"},"content":"     * @param types List of acceptable token types to eat.","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mattcce"},"content":"     * @return Eaten token.","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mattcce"},"content":"     * @throws ProductionApplicationException When the next token does not match the list specified.","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mattcce"},"content":"    private Token eat(TokenType... types) throws ProductionApplicationException {","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mattcce"},"content":"        if (!this.check(types)) {","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mattcce"},"content":"            ParserError parserError \u003d new ParserError(this.tokenisedCommand.getIngest(), this.peek(), types);","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mattcce"},"content":"            throw new ProductionApplicationException(parserError);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mattcce"},"content":"        return this.advance();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mattcce"},"content":"     * Advances the parser by one token unconditionally, unless it is already at the end.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mattcce"},"content":"     * @return Token advanced past.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mattcce"},"content":"    private Token advance() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mattcce"},"content":"        Token token \u003d this.peek();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mattcce"},"content":"        if (!this.isAtEnd()) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mattcce"},"content":"            this.currentTokenIndex +\u003d 1;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mattcce"},"content":"        return token;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mattcce"},"content":"     * Indicates if the parser is already at the end of the token stream.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mattcce"},"content":"     * @return Boolean corresponding to whether the parser is already at the end of the token stream.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mattcce"},"content":"    private boolean isAtEnd() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mattcce"},"content":"        return this.peek().getType() \u003d\u003d TokenType.TERMINAL;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mattcce"},"content":"    private boolean check(TokenType... types) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mattcce"},"content":"        for (TokenType type : types) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mattcce"},"content":"            if (this.peek().getType() \u003d\u003d type) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mattcce"},"content":"                return true;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mattcce"},"content":"            }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mattcce"},"content":"        return false;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mattcce"},"content":"     * Returns the token currently pointed to by the parser, without advancing past it.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mattcce"},"content":"     * @return Token currently being scanned.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mattcce"},"content":"    private Token peek() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mattcce"},"content":"        return this.tokenisedCommand.getAtIndex(this.currentTokenIndex);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":251}},{"path":"src/main/java/seedu/address/logic/grammars/command/parser/ParserError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static seedu.address.logic.grammars.command.utils.Utils.makeVisualDelimiter;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import static seedu.address.logic.grammars.command.utils.Utils.reverseArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.Token;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.TokenType;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.utils.Location;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"class ParserError {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    private final ArrayList\u003cString\u003e productionNonterminalStack \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"    private final String ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    private final Token offendingToken;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"    private final TokenType[] expectedTokenTypes;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    ParserError(String ingest, Token offendingToken, TokenType... expectedTokenTypes) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"        this.ingest \u003d ingest;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"        this.offendingToken \u003d offendingToken;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"        this.expectedTokenTypes \u003d expectedTokenTypes;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"    void addProductionNonterminal(String productionRule) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"        this.productionNonterminalStack.add(productionRule);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    public String toString() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"        lines.add(\"Error occurred during parsing.\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        lines.add(this.ingest);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        Location location \u003d this.offendingToken.getLocation();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"        lines.add(makeVisualDelimiter(location.start(), location.end()));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"        String productionRuleStack \u003d String.join(\" \u003e \", reverseArrayList(this.productionNonterminalStack));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        lines.add(String.format(\"Error occurred while applying production rules: %s\", productionRuleStack));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"        lines.add(String.format(\"Expected token types: one of {%s}\",","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"                String.join(\",\", Arrays.stream(this.expectedTokenTypes)","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"                        .map(Enum::toString).toArray(String[]::new))));","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        lines.add(String.format(\"Found: %s\", offendingToken.getType().getDescription()));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"        return String.join(\"\\n\", lines);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":51}},{"path":"src/main/java/seedu/address/logic/grammars/command/parser/ParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":" * Exception for parsing errors (failures to apply production rules).","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"public class ParserException extends Exception {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"    private final ParserError parserError;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    ParserException(ParserError parserError) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"        super(parserError.toString());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"        this.parserError \u003d parserError;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":13}},{"path":"src/main/java/seedu/address/logic/grammars/command/parser/ProductionApplicationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":" * Exception for internal use only by the parser. Used to unwind the stack in the recursive descent to trace the path of","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":" * production rules taken at the point of encountering a parsing error.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"class ProductionApplicationException extends Exception {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"    private final ParserError parserError;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"    public ProductionApplicationException(ParserError parserError) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"        this.parserError \u003d parserError;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    public ParserError getParserError() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"        return parserError;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":17}},{"path":"src/main/java/seedu/address/logic/grammars/command/parser/ast/AstNode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser.ast;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.Token;","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.visitors.AstVisitor;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":" * Abstract class for all AST nodes.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"public abstract class AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    public abstract \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"     * Command AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"    public static class Command extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"        private final Imperative imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"        private final ParameterList parameterList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"        private final OptionList optionList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"         * Constructs a new Command node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"         * @param imperative    Imperative node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"         * @param parameterList ParameterList node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"         * @param optionList    OptionList node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"        public Command(Imperative imperative, ParameterList parameterList, OptionList optionList) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"            this.imperative \u003d imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"            this.parameterList \u003d parameterList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"            this.optionList \u003d optionList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        public Imperative getImperative() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"            return imperative;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        public ParameterList getParameterList() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"            return parameterList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"        public OptionList getOptionList() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"            return optionList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"            return visitor.visitCommand(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"     * Imperative AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"    public static class Imperative extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"        private final Word word;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"         * Constructs a new Imperative node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"         * @param word Word node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"        public Imperative(Word word) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"            this.word \u003d word;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"        public Word getWord() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"            return word;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"            return visitor.visitImperative(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"     * Parameter List AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"    public static class ParameterList extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"        private final ArrayList\u003cParameter\u003e parameters;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"         * Constructs a new ParameterList node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"         * @param parameters ArrayList of Parameter, an ordered collection of parameters.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"        public ParameterList(ArrayList\u003cParameter\u003e parameters) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"            this.parameters \u003d parameters;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"        public ArrayList\u003cParameter\u003e getParameters() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"            return parameters;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"            return visitor.visitParameterList(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"     * Parameter AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"    public static class Parameter extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"        private final Text text;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"         * Constructs a new Parameter node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"         * @param text Text node.","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"        public Parameter(Text text) {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"            this.text \u003d text;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"        public Text getText() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"            return text;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"            return visitor.visitParameter(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"     * OptionList AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"    public static class OptionList extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"        private final ArrayList\u003cOption\u003e options;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"         * Constructs a new OptionList node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"         * @param options ArrayList of Option, an ordered collection of options.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"        public OptionList(ArrayList\u003cOption\u003e options) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"            this.options \u003d options;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mattcce"},"content":"        public ArrayList\u003cOption\u003e getOptions() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mattcce"},"content":"            return options;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mattcce"},"content":"            return visitor.visitOptionList(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mattcce"},"content":"     * Option AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mattcce"},"content":"    public static class Option extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mattcce"},"content":"        private final OptionName optionName;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mattcce"},"content":"        private final OptionValue optionValue;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mattcce"},"content":"         * Constructs a new Option node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mattcce"},"content":"         * @param optionName  OptionName node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mattcce"},"content":"         * @param optionValue OptionValue node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mattcce"},"content":"        public Option(OptionName optionName, OptionValue optionValue) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mattcce"},"content":"            this.optionName \u003d optionName;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mattcce"},"content":"            this.optionValue \u003d optionValue;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mattcce"},"content":"        public OptionName getOptionName() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mattcce"},"content":"            return optionName;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mattcce"},"content":"        public OptionValue getOptionValue() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mattcce"},"content":"            return optionValue;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mattcce"},"content":"        public boolean hasOptionValue() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mattcce"},"content":"            return optionValue !\u003d null;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mattcce"},"content":"            return visitor.visitOption(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mattcce"},"content":"     * Option Name AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mattcce"},"content":"    public static class OptionName extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mattcce"},"content":"        private final Word word;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mattcce"},"content":"         * Constructs a new OptionName node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mattcce"},"content":"         * @param word Word node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mattcce"},"content":"        public OptionName(Word word) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mattcce"},"content":"            this.word \u003d word;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mattcce"},"content":"        public Word getWord() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mattcce"},"content":"            return word;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mattcce"},"content":"            return visitor.visitOptionName(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mattcce"},"content":"     * Option Value AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mattcce"},"content":"    public static class OptionValue extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mattcce"},"content":"        private final Text text;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mattcce"},"content":"         * Constructs a new OptionValue node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mattcce"},"content":"         * @param text Text node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mattcce"},"content":"        public OptionValue(Text text) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mattcce"},"content":"            this.text \u003d text;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mattcce"},"content":"        public Text getText() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mattcce"},"content":"            return text;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mattcce"},"content":"            return visitor.visitOptionValue(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mattcce"},"content":"     * Text AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mattcce"},"content":"    public static class Text extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mattcce"},"content":"        private final Token token;","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mattcce"},"content":"         * Constructs a new Text node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mattcce"},"content":"         * @param token Token from lexer accepted by this node (one of WORD, TEXT).","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mattcce"},"content":"        public Text(Token token) {","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mattcce"},"content":"            this.token \u003d token;","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mattcce"},"content":"        public String getText() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mattcce"},"content":"            return this.token.getLiteral();","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mattcce"},"content":"            return visitor.visitText(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mattcce"},"content":"     * Word AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mattcce"},"content":"    public static class Word extends AstNode {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mattcce"},"content":"        private final Token token;","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mattcce"},"content":"        /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mattcce"},"content":"         * Constructs a new Word node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mattcce"},"content":"         *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mattcce"},"content":"         * @param token Token from lexer accepted by this node (one of WORD).","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mattcce"},"content":"         */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mattcce"},"content":"        public Word(Token token) {","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mattcce"},"content":"            this.token \u003d token;","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mattcce"},"content":"        public String getWord() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mattcce"},"content":"            return this.token.getLiteral();","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mattcce"},"content":"        @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mattcce"},"content":"        public \u003cR\u003e R accept(AstVisitor\u003cR\u003e visitor) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mattcce"},"content":"            return visitor.visitWord(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":288}},{"path":"src/main/java/seedu/address/logic/grammars/command/parser/ast/visitors/AstPrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser.ast.visitors;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import java.util.List;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.AstNode;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":" * Traverses an AST and builds a formatted string representation.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"public class AstPrinter implements AstVisitor\u003cString\u003e {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"     * Returns a pretty-printed string representation of the given AST.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"     * @param node Root of the AST.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"     * @return Pretty-printed string representation of given AST.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"    public String print(AstNode node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"        return node.accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"    public String visitCommand(AstNode.Command node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder(\"Command\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"        List\u003cAstNode\u003e children \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        children.add(node.getImperative());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        children.add(node.getParameterList());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"        children.add(node.getOptionList());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"        for (int i \u003d 0; i \u003c children.size(); i++) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"            boolean isLast \u003d (i \u003d\u003d children.size() - 1);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"            String childString \u003d children.get(i).accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"            builder.append(\"\\n\").append(addPrefixes(childString, isLast));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"     * Adds the correct tree-like prefixes to each line of a child\u0027s output.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"     * @param childOutput The fully-rendered string of a child node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"     * @param isLast      True if this is the last child of its parent.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"     * @return The prefixed string.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"    private String addPrefixes(String childOutput, boolean isLast) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"        String[] lines \u003d childOutput.split(\"\\n\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"        String firstLinePrefix \u003d isLast ? \"└─ \" : \"├─ \";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"        builder.append(firstLinePrefix).append(lines[0]);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        String restLinesPrefix \u003d isLast ? \"   \" : \"│  \";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"        for (int i \u003d 1; i \u003c lines.length; i++) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"            builder.append(\"\\n\").append(restLinesPrefix).append(lines[i]);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"    public String visitImperative(AstNode.Imperative node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder(\"Imperative\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"        String wordString \u003d node.getWord().accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"        builder.append(\"\\n\").append(addPrefixes(wordString, true)); // Always the last/only child","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"    public String visitParameterList(AstNode.ParameterList node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder(\"ParameterList\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"        List\u003cAstNode.Parameter\u003e params \u003d node.getParameters();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"        for (int i \u003d 0; i \u003c params.size(); i++) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"            boolean isLast \u003d (i \u003d\u003d params.size() - 1);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"            String paramString \u003d params.get(i).accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"            builder.append(\"\\n\").append(addPrefixes(paramString, isLast));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"    public String visitParameter(AstNode.Parameter node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder(\"Parameter\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"        String wordString \u003d node.getText().accept(this);","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"        builder.append(\"\\n\").append(addPrefixes(wordString, true));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"    public String visitOptionList(AstNode.OptionList node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder(\"OptionList\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"        List\u003cAstNode.Option\u003e options \u003d node.getOptions();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"        for (int i \u003d 0; i \u003c options.size(); i++) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"            boolean isLast \u003d (i \u003d\u003d options.size() - 1);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"            String optionString \u003d options.get(i).accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"            builder.append(\"\\n\").append(addPrefixes(optionString, isLast));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"    public String visitOption(AstNode.Option node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder(\"Option\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"        List\u003cAstNode\u003e children \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"        children.add(node.getOptionName());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"        if (node.getOptionValue() !\u003d null) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"            children.add(node.getOptionValue());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"        for (int i \u003d 0; i \u003c children.size(); i++) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"            boolean isLast \u003d (i \u003d\u003d children.size() - 1);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"            String childString \u003d children.get(i).accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"            builder.append(\"\\n\").append(addPrefixes(childString, isLast));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"    public String visitOptionName(AstNode.OptionName node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder(\"OptionName\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"        String wordString \u003d node.getWord().accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"        builder.append(\"\\n\").append(addPrefixes(wordString, true));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"    public String visitOptionValue(AstNode.OptionValue node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"        StringBuilder builder \u003d new StringBuilder(\"OptionValue\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"        String textString \u003d node.getText().accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"        builder.append(\"\\n\").append(addPrefixes(textString, true));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"    public String visitText(AstNode.Text node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"        return \"Text (\\\"\" + node.getText() + \"\\\")\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"    public String visitWord(AstNode.Word node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"        return \"Word (\\\"\" + node.getWord() + \"\\\")\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":142}},{"path":"src/main/java/seedu/address/logic/grammars/command/parser/ast/visitors/AstVisitor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser.ast.visitors;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.AstNode;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":" * Visitor pattern interface for AST traversal and operations.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":" *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":" * @param \u003cR\u003e Return type of the visitor after it visits each node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"public interface AstVisitor\u003cR\u003e {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"     * Visits a Command AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"     * @param node Command AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"    R visitCommand(AstNode.Command node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"     * Visits an Imperative AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"     * @param node Imperative AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"    R visitImperative(AstNode.Imperative node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"     * Visits a ParameterList AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"     * @param node ParameterList AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"    R visitParameterList(AstNode.ParameterList node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"     * Visits a Parameter AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"     * @param node Parameter AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"    R visitParameter(AstNode.Parameter node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"     * Visits an OptionList AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"     * @param node OptionList AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"    R visitOptionList(AstNode.OptionList node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"     * Visits an Option AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"     * @param node Option AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"    R visitOption(AstNode.Option node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"     * Visits an OptionName AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"     * @param node OptionName AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"    R visitOptionName(AstNode.OptionName node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"     * Visits a OptionValue List AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"     * @param node OptionValue AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"    R visitOptionValue(AstNode.OptionValue node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"     * Visits a Text AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"     * @param node Text AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"    R visitText(AstNode.Text node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"     * Visits a Word AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"     * @param node Word AST node.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"     * @return Value produced after visiting.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"    R visitWord(AstNode.Word node);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":90}},{"path":"src/main/java/seedu/address/logic/grammars/command/parser/ast/visitors/CommandExtractor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser.ast.visitors;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.AstNode;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":" * Extractor for commands from a complete AST.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"public class CommandExtractor implements AstVisitor\u003cString\u003e {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"    private final BareCommand.BareCommandBuilder bareCommandBuilder \u003d new BareCommand.BareCommandBuilder();","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"     * Returns a Command populated with the given AST\u0027s items.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"     * @param node Root of the AST to populate Command with.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"     * @return Populated Command.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"    public BareCommand extract(AstNode node) {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"        node.accept(this);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"        return this.bareCommandBuilder.build();","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"    public String visitCommand(AstNode.Command node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"        visitImperative(node.getImperative());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"        visitParameterList(node.getParameterList());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        visitOptionList(node.getOptionList());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        return null;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    public String visitImperative(AstNode.Imperative node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"        this.bareCommandBuilder.setImperative(visitWord(node.getWord()));","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"        return null;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"    public String visitParameterList(AstNode.ParameterList node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        for (AstNode.Parameter parameter : node.getParameters()) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"            visitParameter(parameter);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"        return null;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"    public String visitParameter(AstNode.Parameter node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        this.bareCommandBuilder.addParameter(visitText(node.getText()));","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"        return null;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"    public String visitOptionList(AstNode.OptionList node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        for (AstNode.Option option : node.getOptions()) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"            visitOption(option);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"        return null;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"    public String visitOption(AstNode.Option node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"        if (node.hasOptionValue()) {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"            this.bareCommandBuilder.setOption(visitOptionName(node.getOptionName()),","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"                    visitOptionValue((node.getOptionValue())));","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"        } else {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"            this.bareCommandBuilder.setOption(visitOptionName(node.getOptionName()));","lastModifiedDate":"2025-10-14T01:16:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"        return null;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"    public String visitOptionName(AstNode.OptionName node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"        return visitWord(node.getWord());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"    public String visitOptionValue(AstNode.OptionValue node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"        return visitText(node.getText());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"    public String visitText(AstNode.Text node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"        return node.getText();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"    @Override","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"    public String visitWord(AstNode.Word node) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"        return node.getWord();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":90}},{"path":"src/main/java/seedu/address/logic/grammars/command/utils/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.utils;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":" * Simple record storing the location of a token or AST node (contiguous indices [start, end)) in some ingested string.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"public record Location(int start, int end) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":7}},{"path":"src/main/java/seedu/address/logic/grammars/command/utils/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.utils;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":" * Utility class holding utility methods.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"public class Utils {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    private Utils() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"     * Returns a String that acts as a visual range delimiter.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"     * @param start Start index of range (inclusive).","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"     * @param end   End index of range (exclusive).","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"     * @return String visually delimiting the range described.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    public static String makeVisualDelimiter(int start, int end) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"        int current \u003d 0;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"        while (current \u003c start) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"            sb.append(\" \");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"            current++;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"        sb.append(\"^\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"        current++;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"        while (current \u003c end - 1) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"            sb.append(\"-\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"            current++;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"        if (current \u003d\u003d end - 1) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"            sb.append(\"^\");","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"        }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"        return sb.toString();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"    /**","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"     * Returns a reversed ArrayList.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"     *","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"     * @param arrayList Input ArrayList to be reversed.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"     * @param \u003cT\u003e       Type of elements in the given ArrayList.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"     * @return Reversed ArrayList, shallow copy of all items.","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"     */","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"    public static \u003cT\u003e ArrayList\u003cT\u003e reverseArrayList(ArrayList\u003cT\u003e arrayList) {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        int count \u003d arrayList.size();","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"        return IntStream.range(0, count).map(i -\u003e (count - 1) - i).boxed()","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"                .map(arrayList::get).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xateh"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2025-10-09T00:19:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.decoder.Decoder;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ResolutionException;","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ValidationException;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.LexerException;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ParserException;","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21T14:27:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21T14:27:50","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26T17:54:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xateh"},"content":"        case UntagCommand.COMMAND_WORD:","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xateh"},"content":"            return new UntagCommandParser().parse(arguments);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14T20:47:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"            try {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"                return Decoder.decode(BareCommand.parse(userInput));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"            } catch (LexerException | ParserException | ValidationException | ResolutionException e) {","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"            }","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"Xateh":4,"mattcce":12,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"denz-denz"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06T08:43:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11T21:37:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11T10:22:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12T16:00:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12T16:00:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"denz-denz"},"content":"        return new FindCommand(new FieldContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false}],"authorContributionMap":{"denz-denz":2,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/UntagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Xateh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xateh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xateh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xateh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xateh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xateh"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xateh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xateh"},"content":"/**","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xateh"},"content":" * Parses input arguments and creates a new {@code UntagCommand} object.","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xateh"},"content":" */","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xateh"},"content":"public class UntagCommandParser implements Parser\u003cUntagCommand\u003e {","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xateh"},"content":"    /**","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xateh"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code UntagCommand}","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xateh"},"content":"     * and returns a {@code UntagCommand} object for execution.","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xateh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xateh"},"content":"     */","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xateh"},"content":"    public UntagCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xateh"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xateh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xateh"},"content":"        if (argMultimap.getPreamble().isEmpty() || !argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xateh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xateh"},"content":"                    UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xateh"},"content":"        }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xateh"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xateh"},"content":"        Index index;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xateh"},"content":"        try {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xateh"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xateh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xateh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xateh"},"content":"                    UntagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xateh"},"content":"        }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xateh"},"content":"        Tag tagToRemove \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xateh"},"content":"        return new UntagCommand(index, tagToRemove);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xateh"},"content":"}","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false}],"authorContributionMap":{"Xateh":44}},{"path":"src/main/java/seedu/address/model/person/FieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"denz-denz"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"denz-denz"},"content":"import java.util.List;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"denz-denz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"denz-denz"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"denz-denz"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"denz-denz"},"content":"/**","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"denz-denz"},"content":" * Tests that a {@code Person}\u0027s {@code Fields} matches any of the keywords given.","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"denz-denz"},"content":" */","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"denz-denz"},"content":"public class FieldContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"denz-denz"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"denz-denz"},"content":"    public FieldContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"denz-denz"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"denz-denz"},"content":"    /**","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"denz-denz"},"content":"     * Returns {@code true} if any of the given {@code keywords} matches at least one of the","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"denz-denz"},"content":"     * {@link Person}\u0027s fields exactly. A match is case-insensitive and checks across multiple fields:","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"denz-denz"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"denz-denz"},"content":"     *     \u003cli\u003eName\u003c/li\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"denz-denz"},"content":"     *     \u003cli\u003ePhone number\u003c/li\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"denz-denz"},"content":"     *     \u003cli\u003eEmail address\u003c/li\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"denz-denz"},"content":"     *     \u003cli\u003ePhysical address\u003c/li\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"denz-denz"},"content":"     *     \u003cli\u003eTags\u003c/li\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"denz-denz"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"denz-denz"},"content":"     * The method iterates through all keywords and returns {@code true} as soon as a match is found.","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"denz-denz"},"content":"     *","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"denz-denz"},"content":"     * @param person The person whose details are being compared against the keywords.","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"denz-denz"},"content":"     * @return {@code true} if any keyword matches any of the person\u0027s fields (case-insensitive),","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"denz-denz"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"denz-denz"},"content":"     */","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"denz-denz"},"content":"    @Override","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"denz-denz"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"denz-denz"},"content":"        return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"denz-denz"},"content":"                        StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword)","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"denz-denz"},"content":"                        || StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword)","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"denz-denz"},"content":"                        || StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword)","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"denz-denz"},"content":"                        || StringUtil.containsWordIgnoreCase(person.getAddress().value, keyword)","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"denz-denz"},"content":"                        || person.getTags().stream().anyMatch(tag -\u003e","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"denz-denz"},"content":"                        StringUtil.containsWordIgnoreCase(tag.tagName, keyword))","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"denz-denz"},"content":"        );","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"denz-denz"},"content":"    @Override","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"denz-denz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"denz-denz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"denz-denz"},"content":"            return true;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"denz-denz"},"content":"        }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"denz-denz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"denz-denz"},"content":"        if (!(other instanceof FieldContainsKeywordsPredicate otherFieldsContainsKeywordsPredicate)) {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"denz-denz"},"content":"            return false;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"denz-denz"},"content":"        }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"denz-denz"},"content":"        return keywords.equals(otherFieldsContainsKeywordsPredicate.keywords);","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"denz-denz"},"content":"    @Override","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"denz-denz"},"content":"    public String toString() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"denz-denz"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"denz-denz"},"content":"}","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false}],"authorContributionMap":{"denz-denz":65}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19T12:30:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"    private final Map\u003cString, String\u003e customFields;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19T12:30:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"        this.customFields \u003d new LinkedHashMap\u003c\u003e(); //default: empty","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"     * Full constructor including custom fields.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"     * Kept package-private to encourage creation via {@link #withCustomFields(Map)}","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"                  Set\u003cTag\u003e tags, Map\u003cString, String\u003e customFields) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"        this.email \u003d email;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"        this.address \u003d address;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"        // Preserve order and make defensive copy","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"        this.customFields \u003d new LinkedHashMap\u003c\u003e(customFields);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12T12:35:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07T12:55:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26T12:27:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"     * Returns an unmodifiable view of custom fields.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"    public Map\u003cString, String\u003e getCustomFields() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"        return Collections.unmodifiableMap(customFields);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"     * Returns a new {@code Person} identical to this, but with the provided custom fields.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"     * The provided map is copied defensively and iteration order is preserved.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"    public Person withCustomFields(Map\u003cString, String\u003e fields) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"        return new Person(name, phone, email, address, tags, new LinkedHashMap\u003c\u003e(fields));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10T09:24:49","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dylantjy"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dylantjy"},"content":"                \u0026\u0026 customFields.equals(otherPerson.customFields);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dylantjy"},"content":"        return Objects.hash(name, phone, email, address, tags, customFields);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"dylantjy":38,"-":115}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03T17:06:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"    private final Map\u003cString, String\u003e customFields \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12T21:26:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"        customFields.putAll(source.getCustomFields()); // preserve order","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09T19:03:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"        // Backward compatible: if customFields missing, LinkedHashMap stays empty.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"        Person base \u003d new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"        return base.withCustomFields(customFields);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false}],"authorContributionMap":{"dylantjy":7,"-":107}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22T09:48:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24T15:44:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09T12:52:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xateh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2526s1-cs2103t-t13-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2025-10-17T01:13:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03T10:08:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20T16:11:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24T15:44:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01T18:20:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24T15:44:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13T23:28:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08T23:07:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15T13:36:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19T16:58:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18T19:19:48","isFullCredit":false}],"authorContributionMap":{"Xateh":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22T09:48:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"     * Feature flag for showing preview custom fields in the UI only (no logic/persistence).","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"    private static final String FLAG_CUSTOM_FIELDS_UI \u003d \"feature.customFields.ui\";","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"    private static final String ENV_CUSTOM_FIELDS_UI \u003d \"CF_UI\";","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12T12:35:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"    * Container that hosts zero or more {@code key : value} rows for user-defined (custom) fields.","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"    * \u003cp\u003eHidden when empty so the card layout remains identical to vanilla AB3.\u003c/p\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"    */","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"    @FXML","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"    private VBox customFieldsBox;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12T12:35:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"        // ----- Custom fields (schema-less key:value) -----","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"        // We render arbitrary user-defined attributes as \"key : value\" rows.","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"        // If there are no rows, the entire section is hidden to keep the card compact.","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"        // This PR is UI-only: preview data is supplied behind a feature flag so that master","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"        // is not coupled to logic/persistence that does not exist yet.","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"        customFieldsBox.getChildren().clear();","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"        // Real Data","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e fields \u003d new java.util.LinkedHashMap\u003c\u003e(person.getCustomFields());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"        // Stable alphabetical order (case-insensitive) sp cards are predictable to scan.","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"        var keys \u003d new java.util.ArrayList\u003c\u003e(fields.keySet());","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"        java.util.Collections.sort(keys, String.CASE_INSENSITIVE_ORDER);","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"        for (String key : keys) {","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"            String val \u003d fields.get(key);","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"            if (!val.isBlank()) {","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"                customFieldsBox.getChildren().add(kvRow(key, val));","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"            }","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"        // Back-compat: if no fields were provided by the flag-specific provider above, nothing is shown.","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylantjy"},"content":"        if (customFieldsBox.getChildren().isEmpty()) {","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylantjy"},"content":"            hide(customFieldsBox); // hide LAST","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylantjy"},"content":"     * Returns preview custom fields only when the feature flag is enabled.","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylantjy"},"content":"     * \u003cp\u003eThis keeps the UI change non-invasive: by default the section remains hidden and","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylantjy"},"content":"     * there is no dependency on model/persistence. When enabled, the returned map is used","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylantjy"},"content":"     * to render the same UI that future real data will drive.\u003c/p\u003e","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylantjy"},"content":"     *","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"     * @return a deterministic, insertion-ordered map of key-value pairs when enabled; otherwise an empty map.","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"    private Map\u003cString, String\u003e getPreviewCustomFieldsIfEnabled() {","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dylantjy"},"content":"        // Preferred: environment variable","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dylantjy"},"content":"        String env \u003d System.getenv(ENV_CUSTOM_FIELDS_UI);","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dylantjy"},"content":"        boolean viaEnv \u003d env !\u003d null \u0026\u0026 !env.isBlank();","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dylantjy"},"content":"        // Optional: JVM property (works if your run task forwards it; otherwise ignored)","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylantjy"},"content":"        boolean viaProperty \u003d Boolean.getBoolean(\"feature.customFields.ui\");","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylantjy"},"content":"        if (!viaProperty \u0026\u0026 !viaEnv) {","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylantjy"},"content":"            return Map.of();","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dylantjy"},"content":"        // Keep order stable for predictable UI and tests.","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e preview \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dylantjy"},"content":"        preview.put(\"asset-class\", \"gold\");","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dylantjy"},"content":"        preview.put(\"company\", \"Goldman Sachs\");","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dylantjy"},"content":"        return preview;","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dylantjy"},"content":"    * Hides a node from both view and layout.","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dylantjy"},"content":"    * \u003cp\u003eUsing {@code visible\u003dfalse} stops rendering; {@code managed\u003dfalse} removes it from","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dylantjy"},"content":"    * the parent\u0027s layout pass so no empty space is reserved.\u003c/p\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dylantjy"},"content":"    * @param n node to hide","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dylantjy"},"content":"    */","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dylantjy"},"content":"    private void hide(Node n) {","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dylantjy"},"content":"        n.setManaged(false);","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dylantjy"},"content":"        n.setVisible(false);","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dylantjy"},"content":"    * Builds a single {@code key : value} row for the custom fields section.","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dylantjy"},"content":"    * \u003cp\u003eReuses the small-label style so the row visually matches the rest of the card.\u003c/p\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dylantjy"},"content":"    * @param key   field name (displayed as {@code key: })","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dylantjy"},"content":"    * @param value field value text","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dylantjy"},"content":"    * @return a horizontal row containing the labels","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dylantjy"},"content":"    */","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dylantjy"},"content":"    private HBox kvRow(String key, String value) {","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dylantjy"},"content":"        Label keyLabel \u003d new Label(key + \":\");","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dylantjy"},"content":"        keyLabel.getStyleClass().add(\"Label\"); // keep casing to preserve current visuals","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dylantjy"},"content":"        Label valueLabel \u003d new Label(\" \" + value);","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dylantjy"},"content":"        valueLabel.getStyleClass().add(\"Label\"); // keep casing to preserve current visuals","lastModifiedDate":"2025-10-08T18:29:31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dylantjy"},"content":"        HBox pill \u003d new HBox(4, keyLabel, valueLabel);","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dylantjy"},"content":"        pill.getStyleClass().add(\"custom-field-pill\");","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dylantjy"},"content":"        return new HBox(pill);","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false}],"authorContributionMap":{"dylantjy":103,"-":59}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15T19:49:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15T19:49:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15T19:49:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15T19:49:49","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15T19:49:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10T19:46:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01T03:13:00","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15T12:33:54","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09T09:46:56","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09T09:46:56","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09T09:46:56","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09T09:46:56","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09T09:46:56","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08T22:17:28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14T22:14:25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14T22:14:25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14T22:14:25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14T22:14:25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14T22:14:25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14T22:14:25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14T22:14:25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08T22:17:28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08T22:17:28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01T03:13:00","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15T23:56:50","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15T23:45:39","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15T23:45:39","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15T23:45:39","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15T23:45:39","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15T23:45:39","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15T23:45:39","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15T23:56:50","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18T01:07:59","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T01:07:59","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18T01:07:59","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15T23:56:50","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15T23:45:39","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15T23:45:39","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18T01:07:59","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18T01:07:59","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18T01:07:59","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18T01:07:59","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13T12:23:05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15T21:08:56","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15T19:49:49","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02T13:32:55","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"dylantjy"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"dylantjy"},"content":"/* Chip style for custom-field values (same as #tags .label) */","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"dylantjy"},"content":".custom-field-pill {","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"dylantjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"dylantjy"},"content":"    -fx-background-color: #7f74d9;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"dylantjy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"dylantjy"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"dylantjy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"dylantjy"},"content":".custom-field-pill .label {","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"dylantjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"dylantjy"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false}],"authorContributionMap":{"dylantjy":20,"-":351}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27T07:45:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28T10:10:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28T10:10:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27T17:40:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"0.5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-06-13T13:52:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20T17:18:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"      \u003c!-- Custom fields (generic key:value rows) --\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"      \u003cVBox fx:id\u003d\"customFieldsBox\" spacing\u003d\"3\"\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"          \u003cInsets top\u003d\"3\"/\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2025-10-05T22:04:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false}],"authorContributionMap":{"dylantjy":6,"-":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerFieldCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package seedu.address.logic;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"/**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":" * Covers the grammar shim in LogicManager: success and both save-error branches,","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":" * plus the fall-through path when grammar parsing fails.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":" */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"class LogicManagerFieldCommandTest {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"    @TempDir","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"    Path temp;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"    void executeField_succeedsAndSaves() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"        Path abPath \u003d temp.resolve(\"ab.json\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"        Path prefsPath \u003d temp.resolve(\"prefs.json\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"        StorageManager storage \u003d new StorageManager(","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"                new JsonAddressBookStorage(abPath),","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"                new JsonUserPrefsStorage(prefsPath));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"        Model model \u003d baseModelWithOnePerson();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"        Logic logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"        String feedback \u003d logic.execute(\"field 1 /company:\\\"Goldman Sachs\\\"\")","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"                .getFeedbackToUser();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"        assertTrue(feedback.contains(\"company:Goldman Sachs\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"        Person edited \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"        assertEquals(\"Goldman Sachs\", edited.getCustomFields().get(\"company\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"        assertTrue(java.nio.file.Files.exists(abPath));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"    void executeField_saveAccessDenied_wrapsAsCommandException() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"        StorageManager throwing \u003d new SaveThrowingStorage(","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"                temp.resolve(\"ab.json\"),","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"                temp.resolve(\"prefs.json\"),","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"                new AccessDeniedException(\"denied\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"        Model model \u003d baseModelWithOnePerson();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"        Logic logic \u003d new LogicManager(model, throwing);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"        CommandException ex \u003d assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"                logic.execute(\"field 1 /k:v\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"        assertTrue(ex.getCause() instanceof AccessDeniedException);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"    void executeField_saveIoException_wrapsAsCommandException() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"        StorageManager throwing \u003d new SaveThrowingStorage(","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"                temp.resolve(\"ab.json\"),","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"                temp.resolve(\"prefs.json\"),","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"                new IOException(\"io\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"        Model model \u003d baseModelWithOnePerson();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"        Logic logic \u003d new LogicManager(model, throwing);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"        CommandException ex \u003d assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":"                logic.execute(\"field 1 /k:v\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"        assertTrue(ex.getCause() instanceof IOException);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"    void executeMalformedFieldFallsThroughToLegacyParser() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"        Path abPath \u003d temp.resolve(\"ab.json\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"        Path prefsPath \u003d temp.resolve(\"prefs.json\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"        StorageManager storage \u003d new StorageManager(","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"                new JsonAddressBookStorage(abPath),","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"                new JsonUserPrefsStorage(prefsPath));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"        Model model \u003d baseModelWithOnePerson();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"        Logic logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"        // Break grammar (unclosed quote) so lexer throws and shim falls through to legacy parser,","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylantjy"},"content":"        // which then throws the project\u0027s ParseException (unknown command / invalid format).","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylantjy"},"content":"        assertThrows(ParseException.class, () -\u003e logic.execute(\"field 1 /company:\\\"GS\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylantjy"},"content":"    // ----- helpers -----","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylantjy"},"content":"    private static Model baseModelWithOnePerson() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylantjy"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylantjy"},"content":"        ab.addPerson(new PersonBuilder().withName(\"Alex\").build());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylantjy"},"content":"        return new ModelManager(ab, new UserPrefs());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"    /**","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"     * StorageManager that throws from both saveAddressBook overloads.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylantjy"},"content":"     * Using subclass guarantees signatures match your project.","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dylantjy"},"content":"     */","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dylantjy"},"content":"    private static final class SaveThrowingStorage extends StorageManager {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dylantjy"},"content":"        private final IOException toThrow;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dylantjy"},"content":"        SaveThrowingStorage(Path abPath, Path prefsPath, IOException toThrow) {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylantjy"},"content":"            super(new JsonAddressBookStorage(abPath), new JsonUserPrefsStorage(prefsPath));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylantjy"},"content":"            this.toThrow \u003d toThrow;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylantjy"},"content":"        @Override","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dylantjy"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dylantjy"},"content":"            throw toThrow;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dylantjy"},"content":"        @Override","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dylantjy"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dylantjy"},"content":"            throw toThrow;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dylantjy"},"content":"        }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false}],"authorContributionMap":{"dylantjy":134}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"denz-denz"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05T14:05:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T10:05:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T20:47:19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03T14:55:49","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31T14:19:57","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"denz-denz"},"content":"        model.updateFilteredPersonList(new FieldContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08T01:18:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20T08:16:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05T09:50:28","isFullCredit":false}],"authorContributionMap":{"denz-denz":2,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/FieldCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"class FieldCommandTest {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"    private Model model;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"    void setup() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"        // Add one person so index 1 is valid","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"        Person base \u003d new PersonBuilder().withName(\"Alex Yeoh\").build();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"        model.addPerson(base);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"    void executeSinglePairSuccess() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"        BareCommand gc \u003d BareCommand.parse(\"field 1 /company:\\\"Goldman Sachs\\\"\");","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(gc);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"        String feedback \u003d cmd.execute(model).getFeedbackToUser();","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"        assertTrue(feedback.contains(\"company:Goldman Sachs\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"        Person edited \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"        assertEquals(\"Goldman Sachs\", edited.getCustomFields().get(\"company\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"    /*","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"    void executeMultiplePairsOverwriteAndOrder() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"        BareCommand gc \u003d BareCommand.parse(\"field 1 /\\\"asset-class\\\":gold /company:\\\"Goldman Sachs\\\" /company:GS\");","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(gc);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"        cmd.execute(model);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"        Person edited \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"        // last write wins","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dylantjy"},"content":"        assertEquals(\"GS\", edited.getCustomFields().get(\"company\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dylantjy"},"content":"        // order preserved","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dylantjy"},"content":"        assertArrayEquals(new String[]{\"asset-class\", \"company\"},","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dylantjy"},"content":"                edited.getCustomFields().keySet().toArray(new String[0]));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dylantjy"},"content":"    */","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dylantjy"},"content":"    void constructorFromGrammarInvalidIndexThrows() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dylantjy"},"content":"        BareCommand gc \u003d BareCommand.parse(\"field x /k:v\");","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FieldCommand(gc));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dylantjy"},"content":"    void constructorFromGrammarNoPairsThrows() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dylantjy"},"content":"        BareCommand gc \u003d BareCommand.parse(\"field 1\"); // no /k:v","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FieldCommand(gc));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dylantjy"},"content":"    void executeIndexOutOfBoundsThrows() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dylantjy"},"content":"        // There is only 1 person in the model","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dylantjy"},"content":"        BareCommand gc \u003d BareCommand.parse(\"field 2 /k:v\");","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(gc);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dylantjy"},"content":"        CommandException ex \u003d assertThrows(CommandException.class, () -\u003e cmd.execute(model));","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dylantjy"},"content":"        assertEquals(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, ex.getMessage());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dylantjy"},"content":"    void constructorWrongImperativeThrows() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dylantjy"},"content":"        // Build a Command with imperative !\u003d \"field\"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dylantjy"},"content":"        BareCommand.BareCommandBuilder b \u003d new BareCommand.BareCommandBuilder();","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dylantjy"},"content":"        b.setImperative(\"notfield\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dylantjy"},"content":"        b.addParameter(\"1\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dylantjy"},"content":"        b.setOption(\"k\", \"v\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dylantjy"},"content":"        BareCommand c \u003d b.build();","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FieldCommand(c));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dylantjy"},"content":"    void convenienceConstructorInvalidArgsThrow() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FieldCommand(-1, Map.of(\"k\", \"v\")));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FieldCommand(1, null));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FieldCommand(1, Map.of()));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dylantjy"},"content":"    void executeIndexZeroThrowsInvalidIndex() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dylantjy"},"content":"        BareCommand gc \u003d BareCommand.parse(\"field 0 /k:v\");","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(gc);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dylantjy"},"content":"        CommandException ex \u003d assertThrows(CommandException.class, () -\u003e cmd.execute(model));","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dylantjy"},"content":"        assertEquals(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, ex.getMessage());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dylantjy"},"content":"    void executeMessageFormatsWithCommaAndOrder() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e ordered \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dylantjy"},"content":"        ordered.put(\"asset-class\", \"gold\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dylantjy"},"content":"        ordered.put(\"company\", \"GS\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(1, ordered);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dylantjy"},"content":"        String msg \u003d cmd.execute(model).getFeedbackToUser();","lastModifiedDate":"2025-10-15T22:45:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dylantjy"},"content":"        assertTrue(msg.startsWith(\"Added/updated field(s): \"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dylantjy"},"content":"        assertTrue(msg.contains(\"asset-class:gold, company:GS\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dylantjy"},"content":"        assertTrue(msg.endsWith(\"for Alex Yeoh\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dylantjy"},"content":"    void executeBlankKeyThrows() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e pairs \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dylantjy"},"content":"        pairs.put(\"   \", \"v\"); // trims to empty -\u003e validate fails","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(1, pairs);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e cmd.execute(model));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dylantjy"},"content":"    void executeBlankValueThrows() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e pairs \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dylantjy"},"content":"        pairs.put(\"k\", \"   \"); // trims to empty -\u003e validate fails","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(1, pairs);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e cmd.execute(model));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dylantjy"},"content":"    void executeNullKeyNormalizesToEmptyThenThrows() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e pairs \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dylantjy"},"content":"        pairs.put(null, \"v\"); // null -\u003e normalizeKey returns \"\"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(1, pairs);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e cmd.execute(model));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dylantjy"},"content":"    void executeNullValueNormalizesToEmptyThenThrows() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e pairs \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dylantjy"},"content":"        pairs.put(\"k\", null); // null -\u003e normalizeValue returns \"\"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dylantjy"},"content":"        FieldCommand cmd \u003d new FieldCommand(1, pairs);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dylantjy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e cmd.execute(model));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false}],"authorContributionMap":{"dylantjy":157}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08T23:05:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"denz-denz"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08T23:05:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"denz-denz"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"denz-denz"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08T23:05:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08T23:05:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08T23:05:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08T23:05:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08T23:05:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"denz-denz"},"content":"    private FieldContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"denz-denz"},"content":"        return new FieldContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12T16:09:17","isFullCredit":false}],"authorContributionMap":{"denz-denz":10,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"import java.util.Set;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":" * Contains unit tests for TagCommand.","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"public class TagCommandTest {","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"    public void execute_validIndexAndTags_success() throws CommandException {","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d Set.of(new Tag(\"newTag\"), new Tag(\"anotherTag\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_FIRST_PERSON, tagsToAdd);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        CommandResult result \u003d tagCommand.execute(model);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"        // Verify the person was updated with new tags","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"        assertTrue(editedPerson.getTags().contains(new Tag(\"newTag\")));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"        assertTrue(editedPerson.getTags().contains(new Tag(\"anotherTag\")));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"        // Verify success message","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"Added tag to person\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"newTag\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"anotherTag\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"    public void execute_singleTag_success() throws CommandException {","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d Set.of(new Tag(\"singleTag\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_FIRST_PERSON, tagsToAdd);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"        CommandResult result \u003d tagCommand.execute(model);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"        // Verify the person was updated","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"        assertTrue(editedPerson.getTags().contains(new Tag(\"singleTag\")));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"        // Verify success message contains the tag","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"        assertTrue(result.getFeedbackToUser().contains(\"singleTag\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"    public void execute_addToExistingTags_success() throws CommandException {","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e originalTags \u003d new HashSet\u003c\u003e(personToEdit.getTags());","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d Set.of(new Tag(\"additionalTag\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_FIRST_PERSON, tagsToAdd);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"        tagCommand.execute(model);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"        // Verify original tags are preserved and new tag is added","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"        assertTrue(editedPerson.getTags().containsAll(originalTags));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"        assertTrue(editedPerson.getTags().contains(new Tag(\"additionalTag\")));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"        assertEquals(originalTags.size() + 1, editedPerson.getTags().size());","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d Set.of(new Tag(\"tag\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagCommand \u003d new TagCommand(INDEX_FIRST_PERSON, tagsToAdd);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"        assertThrows(NullPointerException.class, () -\u003e tagCommand.execute(null));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d Set.of(new Tag(\"tag\"));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagCommand \u003d new TagCommand(outOfBoundIndex, tagsToAdd);","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e tagCommand.execute(model));","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"        assertEquals(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, exception.getMessage());","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-08T22:53:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"    public void equals() {","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tagsFirst \u003d Set.of(new Tag(\"first\"));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tagsSecond \u003d Set.of(new Tag(\"second\"));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagFirstCommand \u003d new TagCommand(INDEX_FIRST_PERSON, tagsFirst);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagSecondCommand \u003d new TagCommand(INDEX_SECOND_PERSON, tagsSecond);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"        assertTrue(tagFirstCommand.equals(tagFirstCommand));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagFirstCommandCopy \u003d new TagCommand(INDEX_FIRST_PERSON, tagsFirst);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"        assertTrue(tagFirstCommand.equals(tagFirstCommandCopy));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"        assertFalse(tagFirstCommand.equals(1));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"actualmulti"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"actualmulti"},"content":"        assertNotEquals(null, tagFirstCommand);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"actualmulti"},"content":"        // different person index -\u003e returns false","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"actualmulti"},"content":"        assertFalse(tagFirstCommand.equals(tagSecondCommand));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"actualmulti"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagFirstDifferentTags \u003d new TagCommand(INDEX_FIRST_PERSON, tagsSecond);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"actualmulti"},"content":"        assertFalse(tagFirstCommand.equals(tagFirstDifferentTags));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"actualmulti"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"actualmulti"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tags \u003d Set.of(new Tag(\"tag1\"));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"actualmulti"},"content":"        TagCommand tagCommand \u003d new TagCommand(targetIndex, tags);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"actualmulti"},"content":"        String expected \u003d TagCommand.class.getCanonicalName() + \"{index\u003d\" + targetIndex + \", tagsToAdd\u003d\" + tags + \"}\";","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"actualmulti"},"content":"        assertEquals(expected, tagCommand.toString());","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"actualmulti"},"content":"    public void constructor_validInputs_success() {","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tags \u003d Set.of(new Tag(\"friend\"), new Tag(\"colleague\"));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"actualmulti"},"content":"        TagCommand command \u003d new TagCommand(INDEX_FIRST_PERSON, tags);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"actualmulti"},"content":"        // Command should be created successfully without throwing exceptions","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"actualmulti"},"content":"        assertTrue(command instanceof TagCommand);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"actualmulti"},"content":"    public void equals_sameTagsDifferentOrder_returnsTrue() {","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tags1 \u003d Set.of(new Tag(\"friend\"), new Tag(\"colleague\"));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tags2 \u003d Set.of(new Tag(\"colleague\"), new Tag(\"friend\"));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"        TagCommand command1 \u003d new TagCommand(INDEX_FIRST_PERSON, tags1);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"        TagCommand command2 \u003d new TagCommand(INDEX_FIRST_PERSON, tags2);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"        // Sets with same elements in different order should be equal","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"        assertTrue(command1.equals(command2));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"actualmulti"},"content":"    public void hashCode_sameObjects_returnsSameHashCode() {","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tags \u003d Set.of(new Tag(\"friend\"));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"actualmulti"},"content":"        TagCommand command1 \u003d new TagCommand(INDEX_FIRST_PERSON, tags);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"actualmulti"},"content":"        TagCommand command2 \u003d new TagCommand(INDEX_FIRST_PERSON, tags);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"actualmulti"},"content":"        assertEquals(command1.hashCode(), command2.hashCode());","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false}],"authorContributionMap":{"actualmulti":167}},{"path":"src/test/java/seedu/address/logic/commands/UntagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xateh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xateh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xateh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xateh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xateh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xateh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xateh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xateh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xateh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xateh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xateh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xateh"},"content":"/**","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xateh"},"content":" * Contains integration tests (interaction with the Model) for {@code UntagCommand}.","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xateh"},"content":" */","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xateh"},"content":"public class UntagCommandTest {","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xateh"},"content":"    private static final Tag TAG_FRIEND \u003d new Tag(\"friends\");","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xateh"},"content":"    private Model model;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xateh"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xateh"},"content":"    public void setUp() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xateh"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xateh"},"content":"    public void execute_removeExistingTag_success() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xateh"},"content":"        Person personWithTag \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xateh"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(INDEX_SECOND_PERSON, TAG_FRIEND);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xateh"},"content":"        Person expectedPerson \u003d new PersonBuilder(personWithTag).withTags(\"owesMoney\").build();","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xateh"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xateh"},"content":"        expectedModel.setPerson(personWithTag, expectedPerson);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xateh"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xateh"},"content":"        String expectedMessage \u003d String.format(UntagCommand.MESSAGE_REMOVE_TAG_SUCCESS,","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xateh"},"content":"                TAG_FRIEND, Messages.format(expectedPerson));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xateh"},"content":"        assertCommandSuccess(untagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xateh"},"content":"    public void execute_tagNotPresent_throwsCommandException() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xateh"},"content":"        Person personWithoutTag \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xateh"},"content":"        Tag unusedTag \u003d new Tag(\"colleague\");","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xateh"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, unusedTag);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xateh"},"content":"        String expectedMessage \u003d String.format(UntagCommand.MESSAGE_TAG_NOT_FOUND,","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xateh"},"content":"                Messages.format(personWithoutTag), unusedTag);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Xateh"},"content":"        assertCommandFailure(untagCommand, model, expectedMessage);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Xateh"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Xateh"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Xateh"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(outOfBoundsIndex, TAG_FRIEND);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Xateh"},"content":"        assertCommandFailure(untagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Xateh"},"content":"    public void equals() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Xateh"},"content":"        UntagCommand firstCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, TAG_FRIEND);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Xateh"},"content":"        UntagCommand secondCommand \u003d new UntagCommand(INDEX_SECOND_PERSON, TAG_FRIEND);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Xateh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Xateh"},"content":"        org.junit.jupiter.api.Assertions.assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Xateh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Xateh"},"content":"        UntagCommand firstCommandCopy \u003d new UntagCommand(INDEX_FIRST_PERSON, TAG_FRIEND);","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Xateh"},"content":"        org.junit.jupiter.api.Assertions.assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Xateh"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Xateh"},"content":"        org.junit.jupiter.api.Assertions.assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Xateh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Xateh"},"content":"        org.junit.jupiter.api.Assertions.assertFalse(firstCommand.equals(null));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Xateh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Xateh"},"content":"        org.junit.jupiter.api.Assertions.assertFalse(firstCommand.equals(new HelpCommand()));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Xateh"},"content":"}","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false}],"authorContributionMap":{"Xateh":92}},{"path":"src/test/java/seedu/address/logic/commands/decoder/DecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.commands.decoder;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ResolutionException;","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ValidationException;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.LexerException;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ParserException;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"/**","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":" * Test class for testing the decoder\u0027s command resolution. Note that tests here should not test behaviour of the","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":" * extractors; only test if the decoder correctly finds the right command.","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":" */","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"public class DecoderTest {","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    public void decode_tagCommandExactMatch_success() throws","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"            LexerException, ParserException, ResolutionException, ValidationException {","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"        Command tagCommand \u003d Decoder.decode(BareCommand.parse(\"tag 1 test1 test2\"));","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"        assertEquals(TagCommand.class, tagCommand.getClass());","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false}],"authorContributionMap":{"mattcce":26}},{"path":"src/test/java/seedu/address/logic/commands/extractors/TagCommandExtractorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.commands.extractors;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import java.util.Set;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.commands.exceptions.ValidationException;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.BareCommand;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.LexerException;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ParserException;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"public class TagCommandExtractorTest {","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"    public void parse_validArgs_returnsTagCommand() throws LexerException, ParserException, ValidationException {","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"        // single tag","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"        Set\u003cTag\u003e expectedSingleTag \u003d Set.of(new Tag(\"friend\"));","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"        assertEquals(new TagCommand(INDEX_FIRST_PERSON, expectedSingleTag),","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"                TagCommandExtractor.extract(BareCommand.parse(\"tag 1 friend\")));","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"        // multiple tags","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        Set\u003cTag\u003e expectedMultipleTags \u003d Set.of(new Tag(\"friend\"), new Tag(\"colleague\"));","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        assertEquals(new TagCommand(INDEX_FIRST_PERSON, expectedMultipleTags),","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"                TagCommandExtractor.extract(BareCommand.parse(\"tag 1 friend colleague\")));","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"    public void parse_invalidArgs_throwsParseException() throws LexerException, ParserException, ValidationException {","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"        // no index","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        assertThrows(ValidationException.class, () -\u003e","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"                TagCommandExtractor.extract(BareCommand.parse(\"tag\")));","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        assertThrows(ValidationException.class, () -\u003e","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"                TagCommandExtractor.extract(BareCommand.parse(\"tag friend\")));","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"        // invalid index","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        assertThrows(ValidationException.class, () -\u003e","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"                TagCommandExtractor.extract(BareCommand.parse(\"tag 0 friend\")));","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"        assertThrows(ValidationException.class, () -\u003e","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"                TagCommandExtractor.extract(BareCommand.parse(\"tag a friend\")));","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"        // no tags after valid index","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        assertThrows(ValidationException.class, () -\u003e","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"                TagCommandExtractor.extract(BareCommand.parse(\"tag 1\")));","lastModifiedDate":"2025-10-14T00:00:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"    public void parse_duplicateTags_removedAutomatically() throws LexerException, ParserException, ValidationException {","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        // duplicate tags should be handled by Set automatically","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"        Set\u003cTag\u003e expectedTags \u003d Set.of(new Tag(\"friend\"));","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"        assertEquals(new TagCommand(INDEX_FIRST_PERSON, expectedTags),","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"                TagCommandExtractor.extract(BareCommand.parse(\"tag 1 friend friend\")));","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-13T23:40:06","isFullCredit":false}],"authorContributionMap":{"mattcce":58}},{"path":"src/test/java/seedu/address/logic/grammars/command/BareCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"public class BareCommandTest {","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    public void parse_simpleCommand_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"        String cmdString \u003d \"test\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"        BareCommand cmd \u003d assertDoesNotThrow(() -\u003e BareCommand.parse(cmdString));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"test\", cmd.getImperative());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"        assertEquals(0, cmd.getAllParameters().length);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"    public void parse_simpleCommandWithParameters_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"        String cmdString \u003d \"test param0 param1\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"        BareCommand cmd \u003d assertDoesNotThrow(() -\u003e BareCommand.parse(cmdString));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"test\", cmd.getImperative());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        assertEquals(2, cmd.getAllParameters().length);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"param0\", cmd.getParameter(0));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"param1\", cmd.getParameter(1));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"    public void parse_commandWithOptions_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        String cmdString \u003d \"test /opt1:\\\"long value\\\" /opt2:\\\"single\\\"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        BareCommand cmd \u003d assertDoesNotThrow(() -\u003e BareCommand.parse(cmdString));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"test\", cmd.getImperative());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"        assertEquals(0, cmd.getAllParameters().length);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"long value\", cmd.getOptionValue(\"opt1\"));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"single\", cmd.getOptionValue(\"opt2\"));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"    public void parse_complexCommand_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"        String cmdString \u003d \"complex param0 param1 /opt1:\\\"long value\\\" /opt2:\\\"single\\\"/ opt3\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"        BareCommand cmd \u003d assertDoesNotThrow(() -\u003e BareCommand.parse(cmdString));","lastModifiedDate":"2025-10-13T22:24:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"complex\", cmd.getImperative());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"        assertEquals(2, cmd.getAllParameters().length);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"param0\", cmd.getParameter(0));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"param1\", cmd.getParameter(1));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"long value\", cmd.getOptionValue(\"opt1\"));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"single\", cmd.getOptionValue(\"opt2\"));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"        assertTrue(cmd.hasOption(\"opt3\"));","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"        assertFalse(cmd.hasOption(\"opt4\"));","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":60}},{"path":"src/test/java/seedu/address/logic/grammars/command/lexer/CommandLexerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"public class CommandLexerTest {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    public void lex_word_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"test Test test0\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"                [00:04] WORD : test","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"                [05:09] WORD : Test","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"                [10:15] WORD : test0","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"                [15:15] TERMINAL : \\","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"                \"\"\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"        TokenisedCommand tc \u003d assertDoesNotThrow(() -\u003e CommandLexer.lexCommand(ingest));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tc.toString());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"    public void lex_text_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"\\\"test test test\\\"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"[01:15] TEXT : test test test\\n\"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"                + \"[16:16] TERMINAL : \";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"        TokenisedCommand tc \u003d assertDoesNotThrow(() -\u003e CommandLexer.lexCommand(ingest));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tc.toString());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"    public void lex_slash_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"/\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"[00:01] SLASH : /\\n\"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"                + \"[01:01] TERMINAL : \";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"        TokenisedCommand tc \u003d assertDoesNotThrow(() -\u003e CommandLexer.lexCommand(ingest));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tc.toString());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"    public void lex_colon_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \":\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"[00:01] COLON : :\\n\"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"                + \"[01:01] TERMINAL : \";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"        TokenisedCommand tc \u003d assertDoesNotThrow(() -\u003e CommandLexer.lexCommand(ingest));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tc.toString());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"    public void lex_longString_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"event create /description:\\\"online quiz\\\" /from:\\\"2025-09-20 1000\\\" /to:\\\"2025-09-20 1100\\\"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"                [00:05] WORD : event","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"                [06:12] WORD : create","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"                [13:14] SLASH : /","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"                [14:25] WORD : description","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"                [25:26] COLON : :","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"                [27:38] TEXT : online quiz","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"                [40:41] SLASH : /","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"                [41:45] WORD : from","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"                [45:46] COLON : :","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"                [47:62] TEXT : 2025-09-20 1000","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"                [64:65] SLASH : /","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"                [65:67] WORD : to","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"                [67:68] COLON : :","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"                [69:84] TEXT : 2025-09-20 1100","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"                [85:85] TERMINAL : \\","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"                \"\"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"        TokenisedCommand tc \u003d assertDoesNotThrow(() -\u003e CommandLexer.lexCommand(ingest));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tc.toString());","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"    public void lex_unexpectedCharacter_throwsException() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"event create /description:\\\"online quiz\\\" /from:\\\"2025-09-20 1000\\\" % /to:\\\"2025-09-20 1100\\\"\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"        assertThrows(LexerException.class, () -\u003e CommandLexer.lexCommand(ingest));","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"    public void lex_unterminatedString_throwsException() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"event create /description:\\\"online quiz\\\" /from:\\\"2025-09-20 1000 /to:\\\"2025-09-20 1100\\\"\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"        assertThrows(LexerException.class, () -\u003e CommandLexer.lexCommand(ingest));","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"    public void lex_illegalCharacterInString_throwsException() {","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"event create /description:\\\"online quiz\\\" /from:\\\"2025-09-20:1000\\\" /to:\\\"2025-09-20 1100\\\"\";","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"        assertThrows(LexerException.class, () -\u003e CommandLexer.lexCommand(ingest));","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-09T00:08:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":104}},{"path":"src/test/java/seedu/address/logic/grammars/command/lexer/LexerErrorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.utils.Location;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"public class LexerErrorTest {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"    public void lexerError_toString_success() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"        LexerError le \u003d new LexerError(LexerErrorType.UNTERMINATED_STRING,","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"                \"test *this range*\", \"*this range*\", new Location(5, 17));","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"                Error occurred during lexing.","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"                test *this range*","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"                     ^----------^","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"                Unterminated string: *this range*\\","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"                \"\"\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, le.toString());","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false}],"authorContributionMap":{"mattcce":24}},{"path":"src/test/java/seedu/address/logic/grammars/command/lexer/LexerErrorTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.lexer;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"public class LexerErrorTypeTest {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"    public void lexerErrorType_getGenericDescriptions_success() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"Unexpected character\", LexerErrorType.UNEXPECTED_CHARACTER.getGenericDescription());","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"        assertEquals(\"Unterminated string\", LexerErrorType.UNTERMINATED_STRING.getGenericDescription());","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false}],"authorContributionMap":{"mattcce":13}},{"path":"src/test/java/seedu/address/logic/grammars/command/parser/CommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mattcce"},"content":"package seedu.address.logic.grammars.command.parser;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mattcce"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mattcce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.lexer.CommandLexer;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.AstNode;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mattcce"},"content":"import seedu.address.logic.grammars.command.parser.ast.visitors.AstPrinter;","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mattcce"},"content":"public class CommandParserTest {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mattcce"},"content":"    public void parse_imperativeOnly_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"test\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mattcce"},"content":"        AstNode.Command root \u003d assertDoesNotThrow(() -\u003e CommandParser.parseCommand(CommandLexer.lexCommand(ingest)));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mattcce"},"content":"                Command","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mattcce"},"content":"                ├─ Imperative","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mattcce"},"content":"                │  └─ Word (\"test\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mattcce"},"content":"                ├─ ParameterList","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mattcce"},"content":"                └─ OptionList\\","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mattcce"},"content":"                \"\"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mattcce"},"content":"        String tree \u003d new AstPrinter().print(root);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tree);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mattcce"},"content":"    public void parse_imperativeAndParameters_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"test param1 param2 param3\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mattcce"},"content":"        AstNode.Command root \u003d assertDoesNotThrow(() -\u003e CommandParser.parseCommand(CommandLexer.lexCommand(ingest)));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mattcce"},"content":"                Command","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mattcce"},"content":"                ├─ Imperative","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mattcce"},"content":"                │  └─ Word (\"test\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mattcce"},"content":"                ├─ ParameterList","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mattcce"},"content":"                │  ├─ Parameter","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mattcce"},"content":"                │  │  └─ Text (\"param1\")","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mattcce"},"content":"                │  ├─ Parameter","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mattcce"},"content":"                │  │  └─ Text (\"param2\")","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mattcce"},"content":"                │  └─ Parameter","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mattcce"},"content":"                │     └─ Text (\"param3\")","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mattcce"},"content":"                └─ OptionList\\","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mattcce"},"content":"                \"\"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mattcce"},"content":"        String tree \u003d new AstPrinter().print(root);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tree);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mattcce"},"content":"    public void parse_imperativeAndOptions_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"test /boolopt /opt2:\\\"value2\\\"\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mattcce"},"content":"        AstNode.Command root \u003d assertDoesNotThrow(() -\u003e CommandParser.parseCommand(CommandLexer.lexCommand(ingest)));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mattcce"},"content":"                Command","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mattcce"},"content":"                ├─ Imperative","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mattcce"},"content":"                │  └─ Word (\"test\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mattcce"},"content":"                ├─ ParameterList","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mattcce"},"content":"                └─ OptionList","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mattcce"},"content":"                   ├─ Option","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mattcce"},"content":"                   │  └─ OptionName","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mattcce"},"content":"                   │     └─ Word (\"boolopt\")","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mattcce"},"content":"                   └─ Option","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mattcce"},"content":"                      ├─ OptionName","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mattcce"},"content":"                      │  └─ Word (\"opt2\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mattcce"},"content":"                      └─ OptionValue","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mattcce"},"content":"                         └─ Text (\"value2\")\\","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mattcce"},"content":"                \"\"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mattcce"},"content":"        String tree \u003d new AstPrinter().print(root);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tree);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mattcce"},"content":"    public void parse_longCommand_success() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"event create /important \"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mattcce"},"content":"                + \"/description:\\\"online quiz\\\" /from:\\\"2025-09-20 1000\\\" /to:\\\"2025-09-20 1100\\\"\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mattcce"},"content":"        AstNode.Command root \u003d assertDoesNotThrow(() -\u003e CommandParser.parseCommand(CommandLexer.lexCommand(ingest)));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mattcce"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mattcce"},"content":"                Command","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mattcce"},"content":"                ├─ Imperative","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mattcce"},"content":"                │  └─ Word (\"event\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mattcce"},"content":"                ├─ ParameterList","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mattcce"},"content":"                │  └─ Parameter","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mattcce"},"content":"                │     └─ Text (\"create\")","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mattcce"},"content":"                └─ OptionList","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mattcce"},"content":"                   ├─ Option","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mattcce"},"content":"                   │  └─ OptionName","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mattcce"},"content":"                   │     └─ Word (\"important\")","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mattcce"},"content":"                   ├─ Option","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mattcce"},"content":"                   │  ├─ OptionName","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mattcce"},"content":"                   │  │  └─ Word (\"description\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mattcce"},"content":"                   │  └─ OptionValue","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mattcce"},"content":"                   │     └─ Text (\"online quiz\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mattcce"},"content":"                   ├─ Option","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mattcce"},"content":"                   │  ├─ OptionName","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mattcce"},"content":"                   │  │  └─ Word (\"from\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mattcce"},"content":"                   │  └─ OptionValue","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mattcce"},"content":"                   │     └─ Text (\"2025-09-20 1000\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mattcce"},"content":"                   └─ Option","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mattcce"},"content":"                      ├─ OptionName","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mattcce"},"content":"                      │  └─ Word (\"to\")","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mattcce"},"content":"                      └─ OptionValue","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mattcce"},"content":"                         └─ Text (\"2025-09-20 1100\")\\","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mattcce"},"content":"                \"\"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mattcce"},"content":"        String tree \u003d new AstPrinter().print(root);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mattcce"},"content":"        assertEquals(expected, tree);","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mattcce"},"content":"    public void parse_emptyCommand_throwsException() {","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"\";","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mattcce"},"content":"        assertThrows(ParserException.class, () -\u003e CommandParser.parseCommand(CommandLexer.lexCommand(ingest)));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mattcce"},"content":"    public void parse_invalidTokenWhenTextExpectedInParameter_throwsException() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"test :\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mattcce"},"content":"        assertThrows(ParserException.class, () -\u003e CommandParser.parseCommand(CommandLexer.lexCommand(ingest)));","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mattcce"},"content":"    public void parse_invalidTokenWhenWordExpectedInOptionName_throwsException() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"test /\\\"opt1\\\":word\";","lastModifiedDate":"2025-10-08T10:20:38","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mattcce"},"content":"        assertThrows(ParserException.class, () -\u003e CommandParser.parseCommand(CommandLexer.lexCommand(ingest)));","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mattcce"},"content":"    @Test","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mattcce"},"content":"    public void parse_invalidTokenWhenTextExpectedInOptionValue_throwsException() {","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mattcce"},"content":"        String ingest \u003d \"test /opt1::\";","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mattcce"},"content":"","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mattcce"},"content":"        assertThrows(ParserException.class, () -\u003e CommandParser.parseCommand(CommandLexer.lexCommand(ingest)));","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mattcce"},"content":"    }","lastModifiedDate":"2025-10-08T15:11:55","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mattcce"},"content":"}","lastModifiedDate":"2025-10-05T17:54:33","isFullCredit":false}],"authorContributionMap":{"mattcce":152}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05T16:55:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"import java.util.Set;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"denz-denz"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"denz-denz"},"content":"        assertEquals(new FindCommand(new FieldContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"    public void parseCommand_tag() throws Exception {","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"        Set\u003cTag\u003e tags \u003d Set.of(new Tag(\"friend\"));","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"        TagCommand command \u003d (TagCommand) parser.parseCommand(TagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" friend\");","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"        assertEquals(new TagCommand(INDEX_FIRST_PERSON, tags), command);","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-10-05T19:09:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false}],"authorContributionMap":{"actualmulti":11,"denz-denz":2,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06T09:16:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06T09:16:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"denz-denz"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06T09:16:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"denz-denz"},"content":"                new FindCommand(new FieldContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06T09:16:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06T09:16:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27T15:54:22","isFullCredit":false}],"authorContributionMap":{"denz-denz":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/UntagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xateh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Xateh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Xateh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Xateh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Xateh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Xateh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Xateh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Xateh"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Xateh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Xateh"},"content":"/**","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Xateh"},"content":" * Contains tests for {@link UntagCommandParser}.","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Xateh"},"content":" */","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Xateh"},"content":"public class UntagCommandParserTest {","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Xateh"},"content":"    private static final String TAG_DESC_FRIENDS \u003d \" t/friends\";","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Xateh"},"content":"    private static final String INVALID_TAG \u003d \" t/friends!\";","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Xateh"},"content":"    private final UntagCommandParser parser \u003d new UntagCommandParser();","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Xateh"},"content":"    public void parse_validArgs_returnsUntagCommand() {","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Xateh"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Xateh"},"content":"        Tag tag \u003d new Tag(\"friends\");","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Xateh"},"content":"        assertParseSuccess(parser, \"1\" + TAG_DESC_FRIENDS, new UntagCommand(index, tag));","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Xateh"},"content":"    public void parse_missingTag_throwsParseException() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Xateh"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Xateh"},"content":"                UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Xateh"},"content":"    public void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Xateh"},"content":"        assertParseFailure(parser, TAG_DESC_FRIENDS, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Xateh"},"content":"                UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Xateh"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Xateh"},"content":"        assertParseFailure(parser, \"-1\" + TAG_DESC_FRIENDS, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Xateh"},"content":"                UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-10-09T00:16:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Xateh"},"content":"    public void parse_invalidTag_throwsParseException() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Xateh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Xateh"},"content":"","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Xateh"},"content":"    @Test","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Xateh"},"content":"    public void parse_duplicateTagPrefix_throwsParseException() {","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Xateh"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIENDS + TAG_DESC_FRIENDS,","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Xateh"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Xateh"},"content":"    }","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Xateh"},"content":"}","lastModifiedDate":"2025-10-08T21:24:19","isFullCredit":false}],"authorContributionMap":{"Xateh":59}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09T00:23:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"denz-denz"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"denz-denz"},"content":"        modelManager.updateFilteredPersonList(new FieldContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09T00:23:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false}],"authorContributionMap":{"denz-denz":2,"-":130}},{"path":"src/test/java/seedu/address/model/person/FieldContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"denz-denz"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"denz-denz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"denz-denz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"denz-denz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"denz-denz"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"denz-denz"},"content":"import java.util.Collections;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"denz-denz"},"content":"import java.util.List;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"denz-denz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"denz-denz"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"denz-denz"},"content":"public class FieldContainsKeywordsPredicateTest {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"denz-denz"},"content":"    public void equals() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"denz-denz"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"denz-denz"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate firstPredicate \u003d new FieldContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate secondPredicate \u003d new FieldContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"denz-denz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"denz-denz"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"denz-denz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate firstPredCopy \u003d new FieldContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"denz-denz"},"content":"        assertTrue(firstPredicate.equals(firstPredCopy));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"denz-denz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"denz-denz"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"denz-denz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"denz-denz"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"denz-denz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"denz-denz"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"denz-denz"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"denz-denz"},"content":"        // One keyword","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate pred \u003d new FieldContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"denz-denz"},"content":"        assertTrue(pred.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"denz-denz"},"content":"        // Multiple keywords","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"denz-denz"},"content":"        pred \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"denz-denz"},"content":"        assertTrue(pred.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"denz-denz"},"content":"        // Only one matching keyword","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"denz-denz"},"content":"        pred \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"denz-denz"},"content":"        assertTrue(pred.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"denz-denz"},"content":"        // Mixed-case keywords","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"denz-denz"},"content":"        pred \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"denz-denz"},"content":"        assertTrue(pred.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"denz-denz"},"content":"    public void test_phoneContainsKeyword_returnsTrue() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"denz-denz"},"content":"        // Match phone number","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate pred \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"99999999\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"denz-denz"},"content":"        assertTrue(pred.test(new PersonBuilder().withName(\"dummy\").withPhone(\"99999999\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"denz-denz"},"content":"    public void test_emailContainsKeyword_returnsTrue() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"denz-denz"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"alice@gmail.com\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"denz-denz"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"denz-denz"},"content":"    public void test_addressContainsKeyword_returnsTrue() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"denz-denz"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"Street\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"denz-denz"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"123 Main Street\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"denz-denz"},"content":"    public void test_tagContainsKeyword_returnsTrue() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"denz-denz"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"friends\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"denz-denz"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"colleagues\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"denz-denz"},"content":"    public void test_keywordMatchesMultipleFields_returnsTrue() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"denz-denz"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"denz-denz"},"content":"        Person person \u003d new PersonBuilder()","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"denz-denz"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"denz-denz"},"content":"                .withEmail(\"alice@example.com\")","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"denz-denz"},"content":"                .withAddress(\"123 Alice Street\")","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"denz-denz"},"content":"                .build();","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"denz-denz"},"content":"        assertTrue(predicate.test(person));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"denz-denz"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"denz-denz"},"content":"        // Zero keywords","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"denz-denz"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"denz-denz"},"content":"        // Non-matching keyword","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"denz-denz"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"denz-denz"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"denz-denz"},"content":"        //Failure for sub words","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"denz-denz"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"al\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"denz-denz"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"denz-denz"},"content":"    public void test_keywordNotInOtherFields_returnsFalse() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"denz-denz"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"Nonexistent\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"denz-denz"},"content":"        Person person \u003d new PersonBuilder()","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"denz-denz"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"denz-denz"},"content":"                .withPhone(\"99999999\")","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"denz-denz"},"content":"                .withEmail(\"alice@gmail.com\")","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"denz-denz"},"content":"                .withAddress(\"123 Main Street\")","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"denz-denz"},"content":"                .withTags(\"friend\")","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"denz-denz"},"content":"                .build();","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"denz-denz"},"content":"        assertFalse(predicate.test(person));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"denz-denz"},"content":"    public void test_partialMatchInOtherFields_returnsFalse() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"denz-denz"},"content":"        // phone: keyword is only part of the number","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"denz-denz"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"9999\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"denz-denz"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"99998888\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"denz-denz"},"content":"        // email: keyword is substring","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"denz-denz"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(Collections.singletonList(\"gmail\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"denz-denz"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"gmailing@site.com\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"denz-denz"},"content":"        // address: keyword is substring of a longer word","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"denz-denz"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(Collections.singletonList(\"Main\"));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"denz-denz"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Mainland Avenue\").build()));","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"denz-denz"},"content":"    @Test","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"denz-denz"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"denz-denz"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"denz-denz"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(keywords);","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"denz-denz"},"content":"        String expected \u003d FieldContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"denz-denz"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"denz-denz"},"content":"    }","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"denz-denz"},"content":"}","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"denz-denz"},"content":"","lastModifiedDate":"2025-10-04T13:32:31","isFullCredit":false}],"authorContributionMap":{"denz-denz":160}},{"path":"src/test/java/seedu/address/model/person/PersonCustomFieldsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"class PersonCustomFieldsTest {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"    void getCustomFieldsUnmodifiable() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"        Person p \u003d new PersonBuilder().build();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"                p.getCustomFields().put(\"k\", \"v\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"    void withCustomFieldsCopiesAndPreservesOrder() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"        Person p \u003d new PersonBuilder().build();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e in \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"        in.put(\"asset-class\", \"gold\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"        in.put(\"company\", \"GS\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"        Person q \u003d p.withCustomFields(in);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"        // different instance","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"        assertNotSame(p, q);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"        // order preserved","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"        assertArrayEquals(new String[]{\"asset-class\", \"company\"},","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"                q.getCustomFields().keySet().toArray(new String[0]));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"        // defensive copy","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"        in.put(\"x\", \"y\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"        assertFalse(q.getCustomFields().containsKey(\"x\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dylantjy"},"content":"    void equalsAndHashCodeIncludeCustomFields() {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dylantjy"},"content":"        Person a \u003d new PersonBuilder().withName(\"Alex\").build();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dylantjy"},"content":"        Person b \u003d new PersonBuilder().withName(\"Alex\").build();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dylantjy"},"content":"        assertEquals(a, b);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dylantjy"},"content":"        assertEquals(a.hashCode(), b.hashCode());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dylantjy"},"content":"        Person c \u003d a.withCustomFields(Map.of(\"company\", \"GS\"));","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dylantjy"},"content":"        assertNotEquals(a, c);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false}],"authorContributionMap":{"dylantjy":55}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonCustomFieldsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylantjy"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dylantjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dylantjy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dylantjy"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dylantjy"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dylantjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dylantjy"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dylantjy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dylantjy"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dylantjy"},"content":"class JsonAdaptedPersonCustomFieldsTest {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dylantjy"},"content":"    @TempDir Path temp;","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dylantjy"},"content":"    @Test","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dylantjy"},"content":"    void roundTrip_preservesCustomFieldsAndOrder() throws Exception {","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dylantjy"},"content":"        AddressBook book \u003d new AddressBook();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dylantjy"},"content":"        Map\u003cString, String\u003e cf \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dylantjy"},"content":"        cf.put(\"asset-class\", \"gold\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dylantjy"},"content":"        cf.put(\"company\", \"GS\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dylantjy"},"content":"        Person p \u003d new PersonBuilder().withName(\"Alex\").build().withCustomFields(cf);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dylantjy"},"content":"        book.addPerson(p);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dylantjy"},"content":"        Path file \u003d temp.resolve(\"ab.json\");","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dylantjy"},"content":"        JsonAddressBookStorage storage \u003d new JsonAddressBookStorage(file);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dylantjy"},"content":"        storage.saveAddressBook(book);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dylantjy"},"content":"        ReadOnlyAddressBook loaded \u003d storage.readAddressBook(file).get();","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dylantjy"},"content":"        Person loadedP \u003d loaded.getPersonList().get(0);","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dylantjy"},"content":"        assertEquals(cf, loadedP.getCustomFields());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dylantjy"},"content":"        assertArrayEquals(cf.keySet().toArray(), loadedP.getCustomFields().keySet().toArray());","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dylantjy"},"content":"    }","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dylantjy"},"content":"}","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dylantjy"},"content":"","lastModifiedDate":"2025-10-12T17:34:41","isFullCredit":false}],"authorContributionMap":{"dylantjy":42}}]
