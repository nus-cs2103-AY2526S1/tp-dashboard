[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wailon18"},"content":"# Overbooked","lastModifiedDate":"2025-09-21T00:10:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-09-21T00:10:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GeekyGooble"},"content":"[![Java CI](https://github.com/AY2526S1-CS2103T-T10-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2526S1-CS2103T-T10-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2025-10-01T23:33:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GeekyGooble"},"content":"This is **a project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2025-10-01T23:41:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GeekyGooble"},"content":"","lastModifiedDate":"2025-10-01T23:33:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GeekyGooble"},"content":"* The project simulates an ongoing software project for a desktop application (called _OverBooked_) used for managing contact details.","lastModifiedDate":"2025-10-01T23:33:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GeekyGooble"},"content":"* It is named `OverBooked` (`OB` for short) because event organisers often struggle with managing different event contact bookings.","lastModifiedDate":"2025-10-01T23:33:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GeekyGooble"},"content":"* For the detailed documentation of this project, see the **[OverBooked Product Website](https://ay2526s1-cs2103t-t10-2.github.io/tp/)**.","lastModifiedDate":"2025-10-01T23:33:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GeekyGooble"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-10-01T23:33:01","isFullCredit":false}],"authorContributionMap":{"wailon18":2,"GeekyGooble":7,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2024-07-20T12:38:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"## T10-2","lastModifiedDate":"2025-10-01T22:23:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"### Zheng wei","lastModifiedDate":"2025-10-01T22:23:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"\u003cimg src\u003d\"images/jaxwong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T22:23:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"[[github](https://github.com/jaxwong)]","lastModifiedDate":"2025-10-01T22:23:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"* Role: Team Lead","lastModifiedDate":"2025-10-01T22:23:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"* Responsibilities: Model","lastModifiedDate":"2025-10-01T22:23:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"enxi-low"},"content":"### Low En Xi","lastModifiedDate":"2025-10-01T22:18:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"enxi-low"},"content":"\u003cimg src\u003d\"images/enxi-low.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T22:18:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"enxi-low"},"content":"[[github](http://github.com/enxi-low)]","lastModifiedDate":"2025-10-01T22:18:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"enxi-low"},"content":"* Role: Developer","lastModifiedDate":"2025-10-01T22:18:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"enxi-low"},"content":"* Responsibilities: Storage","lastModifiedDate":"2025-10-01T22:18:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wailon18"},"content":"### Chan Wei Lun","lastModifiedDate":"2025-10-01T22:27:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wailon18"},"content":"\u003cimg src\u003d\"images/wailon18.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T22:59:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wailon18"},"content":"[[github](http://github.com/wailon18)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2025-10-01T22:27:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wailon18"},"content":"* Responsibilities: Logic","lastModifiedDate":"2025-10-01T22:27:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GeekyGooble"},"content":"### Tan Jun Hao","lastModifiedDate":"2025-10-01T22:21:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GeekyGooble"},"content":"\u003cimg src\u003d\"images/geekygooble.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T22:21:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GeekyGooble"},"content":"[[github](http://github.com/geekygooble)]","lastModifiedDate":"2025-10-01T22:21:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GeekyGooble"},"content":"* Responsibilities: UI","lastModifiedDate":"2025-10-01T22:21:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JeromeGohRY"},"content":"### Jerome Goh Rih Yu","lastModifiedDate":"2025-10-01T22:23:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JeromeGohRY"},"content":"\u003cimg src\u003d\"images/jeromegohry.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-01T22:23:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JeromeGohRY"},"content":"[[github](https://github.com/JeromeGohRY)]","lastModifiedDate":"2025-10-01T22:23:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JeromeGohRY"},"content":"* Responsibilities: Model","lastModifiedDate":"2025-10-01T22:23:17","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":4,"enxi-low":5,"wailon18":4,"GeekyGooble":4,"-":37,"jaxwong":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams are in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2025-07-24T02:43:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07T16:25:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09T15:32:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21T12:41:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17T04:27:55","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"wailon18"},"content":"* Sports hub events planner who has to operate and liaise with various stakeholders to host sports events","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"wailon18"},"content":"* Has to juggle multiple events","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"wailon18"},"content":"* Has tight deadlines","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"wailon18"},"content":"* Value time and efficiency","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"wailon18"},"content":"* Can type fast","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"wailon18"},"content":"**Value proposition**:","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"wailon18"},"content":"Provides event planners with a single, organized hub for managing all contacts related to their events, reducing the chaos of scattered information. It ensures quick access to the right people at the right time, helping planners stay in control and deliver seamless, stress-free experiences.","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"| Priority | As a …​                                   | I want to …​                                        | So that I can…​                                             |","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"wailon18"},"content":"|-------|-------------------------------------------|-----------------------------------------------------|-------------------------------------------------------------|","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"wailon18"},"content":"| `* * *` | user                                      | search contacts by name                             | easily obtain their contact details                         |","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"wailon18"},"content":"| `* * *` | user                                      | modify my contact list                              | add and delete relevant contacts accordingly                |","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"wailon18"},"content":"| `* * *` | user                                      | view all information regarding a particular contact | easily contact the person                                   |","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"wailon18"},"content":"| `* * *` | user                                      | access the contacts saved from my previous event    | quickly and efficiently add these contacts to my next event |","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"wailon18"},"content":"| `* * *` | user                                      | add upcoming appointment                            | deconflict clashes while scheduling other appointments      |","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"wailon18"},"content":"| `* *` | user                                      | filter my contacts by event                         | find all the people involved in that specific event         |","lastModifiedDate":"2025-10-01T23:42:39","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"enxi-low"},"content":"(For all use cases below, the **System** is `Overbooked` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"enxi-low"},"content":"**Use case: UC1 - Add a contact**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"enxi-low"},"content":"1. User requests to add a contact with the required details","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"enxi-low"},"content":"2. Overbooked adds the contact","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"enxi-low"},"content":"3. Overbooked updates the list","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"enxi-low"},"content":"* 1a. User uses the invalid format or parameters","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"enxi-low"},"content":"    * 1a1. Overbooked informs the user of the error and displays the correct format","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"enxi-low"},"content":"* 1b. User tries to add a contact with the same name","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"enxi-low"},"content":"    * 1b1. Overbooked informs the user that the contact already exists","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"enxi-low"},"content":"* 2a. Overbooked is unable to save the new contact list","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"enxi-low"},"content":"    * 2a1. Overbooked informs the user of the error","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"enxi-low"},"content":"Use case resumes from step 3.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"enxi-low"},"content":"**Use case: UC2 - Delete a contact**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"enxi-low"},"content":"**MSS**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"enxi-low"},"content":"1. User deletes a contact","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"enxi-low"},"content":"2. Overbooked removes the contact from the database","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"enxi-low"},"content":"3. Overbooked updates the list","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"enxi-low"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"enxi-low"},"content":"* 1a. User tries to delete a contact that does not exist in the database","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"enxi-low"},"content":"    * 1a1. Overbooked shows an error message to the user","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"enxi-low"},"content":"* 2a. Overbooked faced some errors in saving the contact list","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"enxi-low"},"content":"    * 2a1. Overbooked informs the user of the error","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"enxi-low"},"content":"**Use case: UC3 - Add an event**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"enxi-low"},"content":"**MSS**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"enxi-low"},"content":"1. User requests to add an event with the required details","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"enxi-low"},"content":"2. OverBooked adds the event","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"enxi-low"},"content":"3. OverBooked updates the list","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"enxi-low"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"enxi-low"},"content":"* 1a. User provides an unacceptable value for the argument","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"enxi-low"},"content":"    * 1a1. OverBooked informs the user of the acceptable values","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"enxi-low"},"content":"* 2a. OverBooked is unable to save the new event","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"enxi-low"},"content":"    * 2a1. OverBooked informs the user of the error","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"enxi-low"},"content":"Use case resumes from step 3.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"enxi-low"},"content":"**Use case: UC4 - Delete an event**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"enxi-low"},"content":"**MSS**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"enxi-low"},"content":"1. User requests to delete an event by specifying its index in the event list.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"enxi-low"},"content":"2. Event Planner verifies that the index is valid.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"enxi-low"},"content":"3. Event Planner deletes the specified event.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"enxi-low"},"content":"4. Event Planner removes all references to the event from the associated contacts.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"enxi-low"},"content":"5. Event Planner updates and displays the new event list.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"enxi-low"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"enxi-low"},"content":"* 2a. The given index is not a valid positive integer","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"enxi-low"},"content":"    * 2a1. Event Planner shows an error message: “Invalid command format. Delete event: Deletes the event identified by the index number used in the event list. Parameters: INDEX(must be a positive integer).”","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"enxi-low"},"content":"* 2b. The given index is greater than the number of displayed events.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"enxi-low"},"content":"    * 2b1. Event Planner shows an error message: “The event index [INDEX] provided is invalid.”","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"enxi-low"},"content":"* 3a. Database update fails.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"enxi-low"},"content":"    * 3a1. Event Planner shows error message: “Failed to save deletion changes. Please restart the app and try again.”","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"enxi-low"},"content":"**Use case: UC5 - Search contact**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"enxi-low"},"content":"**MSS**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"enxi-low"},"content":"1. User types in keywords to search for contacts","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"enxi-low"},"content":"2. Overbooked shows a list of contacts with matching keywords","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"enxi-low"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"enxi-low"},"content":"* 1a. Overbooked did not find any contacts with matching keywords","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"enxi-low"},"content":"    * 1a1. Overbooked shows user a message saying no matching keywords","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"enxi-low"},"content":"**Use case: UC6 - List event**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"enxi-low"},"content":"**MSS**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"enxi-low"},"content":"1. User requests to view the list of events","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"enxi-low"},"content":"2. Overbooked shows the list of events","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"enxi-low"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"enxi-low"},"content":"* 1a. Overbooked is unable to get the list of events","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"enxi-low"},"content":"    * 1a1. Overbooked shows an error message","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"enxi-low"},"content":"* 1b. Overbooked has no events saved","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"enxi-low"},"content":"    * 1b1. Overbooked informs the user that there are no events","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"enxi-low"},"content":"**Use case: UC7 - List contacts**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"enxi-low"},"content":"**MSS**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"enxi-low"},"content":"1. User requests to view the list of contacts","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"enxi-low"},"content":"2. Overbooked shows the list of contacts","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"enxi-low"},"content":"**Extensions**","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"enxi-low"},"content":"* 1a. Overbooked is unable to get the list of contacts","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"enxi-low"},"content":"    * 1a1. Overbooked shows an error message","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"enxi-low"},"content":"Use case ends.","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"enxi-low"},"content":"* 1b. Overbooked has no contacts saved","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"enxi-low"},"content":"    * 1b1. Overbooked informs the user that there are no contacts","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"enxi-low"},"content":"","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"enxi-low"},"content":"Use case ends. ","lastModifiedDate":"2025-10-01T23:48:30","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"jaxwong"},"content":"4. Commands should be case-insensitive.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"jaxwong"},"content":"5. Error messages must be clear, specific and actionable, guiding the user to correct mistakes.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"jaxwong"},"content":"6. The GUI should update in real-time when contacts/events are added, listed or deleted.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"jaxwong"},"content":"7. Placeholder messages must be shown for empty lists so that users do not think the app is unresponsive.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"jaxwong"},"content":"8. Invalid inputs should never crash the system; instead, appropriate error messages should be shown.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"jaxwong"},"content":"9. Duplicate contacts are determined strictly by name and must be rejected.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"jaxwong"},"content":"10. The system must reject invalid command formats, duplicate entries and malformed data consistently.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"jaxwong"},"content":"11. Events with overlapping time intervals must be rejected.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"jaxwong"},"content":"12. All saved data must survive application restarts.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"jaxwong"},"content":"13. Input validation must prevent injection of malicious characters into saved files (e.g. disallow scripts in event names).","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09T15:37:20","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"jaxwong"},"content":"* **CLI(Command Line Interface)**: A text-based interface where the user types commands to interact with the application.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"jaxwong"},"content":"* **GUI(Graphical User Interface)**: The visual interface of the app (buttons, panels, windows) built using JavaFX.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"jaxwong"},"content":"* **Parser**: A component that interprets raw user input strings (e.g., delete 1) and converts them into structured command objects.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"jaxwong"},"content":"* **Command Pattern**: A design pattern where each action (add, delete, list) is encapsulated in its own command class.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"jaxwong"},"content":"* **Event-driven architecture**: A programming paradigm where components react to events (e.g., UI updates when the model changes).","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"jaxwong"},"content":"* **ObservableList**: A JavaFX collection type that notifies observers (e.g., UI) automatically when the list changes.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"jaxwong"},"content":"* **Lifeline(in sequence diagrams)**: A vertical dashed line representing the existence of an object during an interaction.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"jaxwong"},"content":"* **Destroy Marker (X)**: Symbol at the end of a lifeline in UML indicating the object termination. ","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"jaxwong"},"content":"* **Activity Diagram**: A UML diagram that models workflows or processes, show decision points ","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"jaxwong"},"content":"  and actions.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"jaxwong"},"content":"* **State Pointer**:  In undo/redo implementation, refers to the index marking the current state in the version history.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"jaxwong"},"content":"* **AddressBookParser**: A central parser class that delegates parsing to specific command parsers (e.g., AddCommandParser).","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"jaxwong"},"content":"* **VersionedAddressBook**: An extension of AddressBook that maintains a history of states to support undo/redo.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"jaxwong"},"content":"* **Upstream Repository**: The original repository from which a project is forked.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"jaxwong"},"content":"* **Origin**: The default name Git assigns to the remote repository from which you cloned your local repo.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"jaxwong"},"content":"* **Force Push**: A Git operation (git push --force) that overwrites the remote branch history ","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"jaxwong"},"content":"  with your local history.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"jaxwong"},"content":"* **Detached HEAD**: A Git state where you’ve checked out a specific commit rather than a branch, so new commits don’t belong to any branch.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"jaxwong"},"content":"* **Non-Functional Requirement(NFR)**: A requirement describing how the system should behave (e.g., performance, usability), not what it should do.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"jaxwong"},"content":"* **Exploratory Testing**: Testing approach where testers actively explore the app without a strict script, often to uncover edge cases.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"jaxwong"},"content":"* **PlantUML**: A tool used to write text-based UML diagrams that can be rendered into images.","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-10-01T23:37:50","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"enxi-low":141,"wailon18":14,"-":358,"jaxwong":36}},{"path":"docs/_config.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"JeromeGohRY"},"content":"title: \"Overbooked\"","lastModifiedDate":"2025-10-01T23:16:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"theme: minima","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"header_pages:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"  - UserGuide.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  - DeveloperGuide.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  - AboutUs.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"markdown: kramdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JeromeGohRY"},"content":"repository: \"AY2526S1-CS2103T-T10-2/tp\"","lastModifiedDate":"2025-10-01T23:16:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"github_icon: \"images/github-icon.png\"","lastModifiedDate":"2020-08-01T00:36:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"plugins:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - jemoji","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":2,"-":13}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JeromeGohRY"},"content":"title: Overbooked","lastModifiedDate":"2025-10-01T23:16:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"[![Java CI](https://github.com/AY2526S1-CS2103T-T10-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2526S1-CS2103T-T10-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2025-10-01T23:16:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"enxi-low"},"content":"[![codecov](https://codecov.io/github/AY2526S1-CS2103T-T10-2/tp/graph/badge.svg?token\u003dEK4GP6S1V4)](https://codecov.io/github/AY2526S1-CS2103T-T10-2/tp)","lastModifiedDate":"2025-09-22T02:14:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JeromeGohRY"},"content":"**Overbooked is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2025-10-01T23:16:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JeromeGohRY"},"content":"* If you are interested in using Overbooked, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2025-10-01T23:16:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"* If you are interested about developing Overbooked, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2025-10-01T23:16:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":5,"enxi-low":1,"-":13}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wailon18"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28T20:36:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JeromeGohRY"},"content":"     * Formats the {@code event} for display to the user.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JeromeGohRY"},"content":"    public static String format(Event event) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JeromeGohRY"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JeromeGohRY"},"content":"        builder.append(event.getName())","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JeromeGohRY"},"content":"                .append(\"; Start: \")","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JeromeGohRY"},"content":"                .append(event.getStart())","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JeromeGohRY"},"content":"                .append(\"; End: \")","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JeromeGohRY"},"content":"                .append(event.getEnd())","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JeromeGohRY"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JeromeGohRY"},"content":"                .append(event.getDescription());","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JeromeGohRY"},"content":"        return builder.toString();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":16,"wailon18":1,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeromeGohRY"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JeromeGohRY"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"/**","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JeromeGohRY"},"content":" * Adds an event to the address book.","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JeromeGohRY"},"content":" */","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JeromeGohRY"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JeromeGohRY"},"content":"    public static final String COMMAND_WORD \u003d \"add-event\";","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JeromeGohRY"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Event to the address book. \"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"            + \"Parameters: \"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JeromeGohRY"},"content":"            + PREFIX_EVENT_NAME + \"EVENT NAME \"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JeromeGohRY"},"content":"            + PREFIX_START + \"START DATETIME \"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JeromeGohRY"},"content":"            + PREFIX_END + \"END DATETIME \"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JeromeGohRY"},"content":"            + PREFIX_DESC + \"DESCRIPTION \"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JeromeGohRY"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JeromeGohRY"},"content":"            + PREFIX_EVENT_NAME + \"Taylor swift concert\"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JeromeGohRY"},"content":"            + PREFIX_START + \"2025-09-19 19:30\"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JeromeGohRY"},"content":"            + PREFIX_END + \"2025-09-19 23:30\"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JeromeGohRY"},"content":"            + PREFIX_DESC + \"Taylor’s Swift Eras tour\";","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JeromeGohRY"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Event added: %1$s\";","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JeromeGohRY"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JeromeGohRY"},"content":"    private final Event toAdd;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JeromeGohRY"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JeromeGohRY"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JeromeGohRY"},"content":"        toAdd \u003d event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JeromeGohRY"},"content":"    @Override","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JeromeGohRY"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JeromeGohRY"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JeromeGohRY"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JeromeGohRY"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JeromeGohRY"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JeromeGohRY"},"content":"}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":55}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wailon18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wailon18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-08T21:13:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T21:13:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wailon18"},"content":"import java.util.List;","lastModifiedDate":"2025-10-08T21:13:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T21:13:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wailon18"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wailon18"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wailon18"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wailon18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wailon18"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wailon18"},"content":"/**","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wailon18"},"content":" * Deletes an event identified using its displayed index from the address book.","lastModifiedDate":"2025-10-08T21:13:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wailon18"},"content":" */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wailon18"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wailon18"},"content":"    public static final String COMMAND_WORD \u003d \"delete-event\";","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wailon18"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wailon18"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wailon18"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wailon18"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wailon18"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wailon18"},"content":"    private final Index targetIndex;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wailon18"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wailon18"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wailon18"},"content":"    }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wailon18"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wailon18"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"wailon18"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"wailon18"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"wailon18"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"wailon18"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"wailon18"},"content":"        }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"wailon18"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"wailon18"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"wailon18"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, Messages.format(eventToDelete)));","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"wailon18"},"content":"    }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"wailon18"},"content":"}","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false}],"authorContributionMap":{"wailon18":44}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeromeGohRY"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JeromeGohRY"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JeromeGohRY"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JeromeGohRY"},"content":"/**","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JeromeGohRY"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JeromeGohRY"},"content":" */","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JeromeGohRY"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JeromeGohRY"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JeromeGohRY"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JeromeGohRY"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JeromeGohRY"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JeromeGohRY"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JeromeGohRY"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME, PREFIX_START, PREFIX_END, PREFIX_DESC);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JeromeGohRY"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_NAME, PREFIX_START, PREFIX_END, PREFIX_DESC)","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JeromeGohRY"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JeromeGohRY"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JeromeGohRY"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EVENT_NAME, PREFIX_START, PREFIX_END, PREFIX_DESC);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JeromeGohRY"},"content":"        EventName name \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JeromeGohRY"},"content":"        LocalDateTime start \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_START).get());","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JeromeGohRY"},"content":"        LocalDateTime end \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_END).get());","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JeromeGohRY"},"content":"        Event event \u003d new Event(name, start, end, argMultimap.getValue(PREFIX_DESC).get());","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JeromeGohRY"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JeromeGohRY"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JeromeGohRY"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JeromeGohRY"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JeromeGohRY"},"content":"}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":53}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wailon18"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21T14:27:50","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26T17:49:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21T14:27:50","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26T17:54:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26T18:00:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14T20:47:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JeromeGohRY"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JeromeGohRY"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"wailon18"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"wailon18"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29T21:52:34","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":5,"wailon18":3,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"en/\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JeromeGohRY"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"s/\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JeromeGohRY"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"e/\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JeromeGohRY"},"content":"    public static final Prefix PREFIX_DESC \u003d new Prefix(\"d/\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":4,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wailon18"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wailon18"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-10-08T21:13:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T21:13:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wailon18"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wailon18"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wailon18"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"wailon18"},"content":"/**","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"wailon18"},"content":" * Parses input arguments and creates a new DeleteEventCommand object.","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"wailon18"},"content":" */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wailon18"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"wailon18"},"content":"    /**","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"wailon18"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"wailon18"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"wailon18"},"content":"     *","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"wailon18"},"content":"     * @param args remaining user input after the command word","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"wailon18"},"content":"     * @return a DeleteEventCommand targeting the specified index","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"wailon18"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"wailon18"},"content":"     */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"wailon18"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"wailon18"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"wailon18"},"content":"        try {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"wailon18"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wailon18"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"wailon18"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"wailon18"},"content":"            throw new ParseException(","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"wailon18"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"wailon18"},"content":"        }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"wailon18"},"content":"    }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"wailon18"},"content":"}","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false}],"authorContributionMap":{"wailon18":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JeromeGohRY"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JeromeGohRY"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18T09:29:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02T08:13:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JeromeGohRY"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02T08:13:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02T08:13:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30T17:55:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T17:55:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29T22:07:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30T18:08:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T18:08:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:03:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30T18:33:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T18:33:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:14:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:19:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30T18:40:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30T18:40:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10T22:10:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30T18:24:26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JeromeGohRY"},"content":"     * Parses a {@code String event name} into a {@code Name}.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JeromeGohRY"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JeromeGohRY"},"content":"     *","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JeromeGohRY"},"content":"     * @throws ParseException if the given {@code event name} is invalid.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JeromeGohRY"},"content":"    public static EventName parseEventName(String name) throws ParseException {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(name);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JeromeGohRY"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JeromeGohRY"},"content":"        if (!EventName.isValidEventName(trimmedName)) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JeromeGohRY"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JeromeGohRY"},"content":"        return new EventName(trimmedName);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JeromeGohRY"},"content":"     * Parses a {@code String datetime} into a {@code LocalDateTime}.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JeromeGohRY"},"content":"     * @throws ParseException if the given {@code datetime} is invalid.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JeromeGohRY"},"content":"    public static LocalDateTime parseDate(String datetime) throws ParseException {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(datetime);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JeromeGohRY"},"content":"        String trimmed \u003d datetime.trim().replaceAll(\",$\", \"\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JeromeGohRY"},"content":"        try {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JeromeGohRY"},"content":"            return LocalDateTime.parse(trimmed, FORMATTER);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JeromeGohRY"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JeromeGohRY"},"content":"            throw new ParseException(\"Invalid date format. Expected format: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11T09:20:43","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":36,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19T19:20:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11T21:37:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19T19:20:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19T19:20:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19T19:20:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19T19:20:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19T19:20:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JeromeGohRY"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29T07:05:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22T23:30:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T23:30:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19T16:40:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JeromeGohRY"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JeromeGohRY"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JeromeGohRY"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JeromeGohRY"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20T11:51:13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29T07:05:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JeromeGohRY"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29T07:05:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17T13:34:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29T07:05:29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28T15:05:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JeromeGohRY"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JeromeGohRY"},"content":"        return events.contains(event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JeromeGohRY"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JeromeGohRY"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JeromeGohRY"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JeromeGohRY"},"content":"        events.add(e);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"wailon18"},"content":"    /** Removes event from the address book. */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"wailon18"},"content":"    public void removeEvent(Event e) {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"wailon18"},"content":"        events.remove(e);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wailon18"},"content":"    }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05T03:58:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01T23:20:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01T23:20:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JeromeGohRY"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JeromeGohRY"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29T07:05:29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":33,"wailon18":5,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07T12:49:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07T23:11:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17T13:31:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns true if a event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JeromeGohRY"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JeromeGohRY"},"content":"     * Adds the given Event.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JeromeGohRY"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JeromeGohRY"},"content":"    public void addEvent(Event event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"wailon18"},"content":"    /** Deletes the given event */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"wailon18"},"content":"    public void deleteEvent(Event event);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"wailon18"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"wailon18"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"wailon18"},"content":"    /**","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"wailon18"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"wailon18"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"wailon18"},"content":"     */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"wailon18"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":12,"wailon18":12,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08T21:45:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19T12:30:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09T23:15:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23T00:15:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"wailon18"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19T12:30:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"wailon18"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22T23:30:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15T21:32:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15T21:32:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15T21:32:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26T23:48:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17T13:31:55","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07T12:49:51","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25T22:59:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13T13:54:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JeromeGohRY"},"content":"    @Override","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JeromeGohRY"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JeromeGohRY"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JeromeGohRY"},"content":"    @Override","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JeromeGohRY"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JeromeGohRY"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JeromeGohRY"},"content":"        //updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"wailon18"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"wailon18"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"wailon18"},"content":"        requireNonNull(event);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"wailon18"},"content":"        addressBook.removeEvent(event);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"wailon18"},"content":"    }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12T23:57:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19T13:37:43","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11T13:42:43","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19T13:37:43","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09T01:43:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22T23:30:41","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"wailon18"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"wailon18"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"wailon18"},"content":"        return filteredEvents;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"wailon18"},"content":"    }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"wailon18"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"wailon18"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"wailon18"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"wailon18"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"wailon18"},"content":"    }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"wailon18"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"wailon18"},"content":"                \u0026\u0026 filteredEvents.equals(otherModelManager.filteredEvents);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31T09:57:20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":13,"wailon18":22,"-":147}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25T23:10:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JeromeGohRY"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JeromeGohRY"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08T17:32:17","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":6,"-":17}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeromeGohRY"},"content":"package seedu.address.model.event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JeromeGohRY"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JeromeGohRY"},"content":"/**","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JeromeGohRY"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JeromeGohRY"},"content":" */","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JeromeGohRY"},"content":"public class Event {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JeromeGohRY"},"content":"    private final EventName name;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JeromeGohRY"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JeromeGohRY"},"content":"    private final String description;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JeromeGohRY"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JeromeGohRY"},"content":"    public Event(EventName name, LocalDateTime start, LocalDateTime end, String description) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"        requireAllNonNull(name, start, end, description);","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JeromeGohRY"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JeromeGohRY"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JeromeGohRY"},"content":"            throw new IllegalArgumentException(\"Start time must be before end time\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JeromeGohRY"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JeromeGohRY"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JeromeGohRY"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JeromeGohRY"},"content":"    public String getName() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JeromeGohRY"},"content":"        return this.name.toString();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JeromeGohRY"},"content":"    public String getDescription() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JeromeGohRY"},"content":"        return this.description;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JeromeGohRY"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JeromeGohRY"},"content":"        return this.start;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JeromeGohRY"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JeromeGohRY"},"content":"        return this.end;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns true if both events have the same name, start and end.","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JeromeGohRY"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JeromeGohRY"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JeromeGohRY"},"content":"            return true;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JeromeGohRY"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JeromeGohRY"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JeromeGohRY"},"content":"            return false;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JeromeGohRY"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JeromeGohRY"},"content":"        return name.equals(otherEvent.name)","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 start.equals(otherEvent.start)","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 end.equals(otherEvent.end)","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 description.equals(otherEvent.description);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns true if both events have the same name, start and end.","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JeromeGohRY"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JeromeGohRY"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JeromeGohRY"},"content":"            return true;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JeromeGohRY"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName())","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 otherEvent.getStart().equals(getStart())","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 otherEvent.getEnd().equals(getEnd());","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JeromeGohRY"},"content":"}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":82}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeromeGohRY"},"content":"package seedu.address.model.event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JeromeGohRY"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"/**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JeromeGohRY"},"content":" * Represents an Event\u0027s name in the address book.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEventName(String)}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JeromeGohRY"},"content":" */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JeromeGohRY"},"content":"public class EventName {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JeromeGohRY"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JeromeGohRY"},"content":"            \"Event names should be 1–100 characters long and may only contain letters, numbers, spaces, \"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"                    + \"apostrophes (\u0027), hyphens (-), ampersands (\u0026), and commas (,). Extra whitespace is trimmed.\";","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JeromeGohRY"},"content":"    /*","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JeromeGohRY"},"content":"     * Length constraint ensures the name is between 1 and 100 characters.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JeromeGohRY"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z0-9\u0027\u0026,\\\\- ]{1,100}$\";","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JeromeGohRY"},"content":"    public final String fullName;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JeromeGohRY"},"content":"     * Constructs a {@code EventName}.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JeromeGohRY"},"content":"     *","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JeromeGohRY"},"content":"     * @param name A valid event name.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JeromeGohRY"},"content":"    public EventName(String name) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(name);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JeromeGohRY"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JeromeGohRY"},"content":"        checkArgument(isValidEventName(trimmedName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JeromeGohRY"},"content":"        fullName \u003d trimmedName;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns true if a given string is a valid event name.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JeromeGohRY"},"content":"    public static boolean isValidEventName(String test) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JeromeGohRY"},"content":"        return test !\u003d null","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 test.trim().length() \u003e\u003d 1","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 test.trim().length() \u003c\u003d 100","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JeromeGohRY"},"content":"                \u0026\u0026 test.trim().matches(VALIDATION_REGEX);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JeromeGohRY"},"content":"    @Override","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JeromeGohRY"},"content":"    public String toString() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JeromeGohRY"},"content":"        return fullName;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JeromeGohRY"},"content":"}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":51}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeromeGohRY"},"content":"package seedu.address.model.event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JeromeGohRY"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JeromeGohRY"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"import java.util.Iterator;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JeromeGohRY"},"content":"import java.util.List;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JeromeGohRY"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JeromeGohRY"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"wailon18"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"/**","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JeromeGohRY"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JeromeGohRY"},"content":" *","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JeromeGohRY"},"content":" **/","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JeromeGohRY"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JeromeGohRY"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JeromeGohRY"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JeromeGohRY"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JeromeGohRY"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JeromeGohRY"},"content":"     * Adds an event to the list.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JeromeGohRY"},"content":"     * The Event must not already exist in the list.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JeromeGohRY"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JeromeGohRY"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JeromeGohRY"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JeromeGohRY"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JeromeGohRY"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JeromeGohRY"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JeromeGohRY"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JeromeGohRY"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JeromeGohRY"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JeromeGohRY"},"content":"        internalList.setAll(events);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"wailon18"},"content":"    /**","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"wailon18"},"content":"     * Removes the equivalent event from the list","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"wailon18"},"content":"     * The event must exist in the list.","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"wailon18"},"content":"     */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"wailon18"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"wailon18"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"wailon18"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"wailon18"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"wailon18"},"content":"        }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"wailon18"},"content":"    }","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JeromeGohRY"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JeromeGohRY"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JeromeGohRY"},"content":"    @Override","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JeromeGohRY"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JeromeGohRY"},"content":"        return internalList.iterator();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JeromeGohRY"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JeromeGohRY"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JeromeGohRY"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JeromeGohRY"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JeromeGohRY"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JeromeGohRY"},"content":"                    return false;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JeromeGohRY"},"content":"                }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JeromeGohRY"},"content":"            }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JeromeGohRY"},"content":"        return true;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JeromeGohRY"},"content":"}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":73,"wailon18":12}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeromeGohRY"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JeromeGohRY"},"content":"/**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JeromeGohRY"},"content":" * Signals that the operation will result in duplicate Events.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JeromeGohRY"},"content":" */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JeromeGohRY"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":"        super(\"Operation would result in duplicate event\");","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JeromeGohRY"},"content":"}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":10}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wailon18"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"wailon18"},"content":"/**","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"wailon18"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"wailon18"},"content":" */","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"wailon18"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"wailon18"},"content":"}","lastModifiedDate":"2025-10-08T19:37:40","isFullCredit":false}],"authorContributionMap":{"wailon18":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JeromeGohRY"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JeromeGohRY"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JeromeGohRY"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JeromeGohRY"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JeromeGohRY"},"content":"/**","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JeromeGohRY"},"content":" */","lastModifiedDate":"2025-10-08T17:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JeromeGohRY"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JeromeGohRY"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JeromeGohRY"},"content":"    private final String name;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JeromeGohRY"},"content":"    private final String start;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"    private final String end;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JeromeGohRY"},"content":"    private final String description;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JeromeGohRY"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JeromeGohRY"},"content":"    @JsonCreator","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JeromeGohRY"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JeromeGohRY"},"content":"                            @JsonProperty(\"start\") String start,","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JeromeGohRY"},"content":"                            @JsonProperty(\"end\") String end,","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JeromeGohRY"},"content":"                            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JeromeGohRY"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JeromeGohRY"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JeromeGohRY"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JeromeGohRY"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JeromeGohRY"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JeromeGohRY"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JeromeGohRY"},"content":"        this.name \u003d source.getName();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JeromeGohRY"},"content":"        this.start \u003d source.getStart().toString();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JeromeGohRY"},"content":"        this.end \u003d source.getEnd().toString();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JeromeGohRY"},"content":"        this.description \u003d source.getDescription();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JeromeGohRY"},"content":"    /**","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JeromeGohRY"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JeromeGohRY"},"content":"     *","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JeromeGohRY"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JeromeGohRY"},"content":"     */","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JeromeGohRY"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JeromeGohRY"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JeromeGohRY"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\"));","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JeromeGohRY"},"content":"        if (!EventName.isValidEventName(name)) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JeromeGohRY"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JeromeGohRY"},"content":"        EventName modelName \u003d new EventName(name);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JeromeGohRY"},"content":"        LocalDateTime modelStart \u003d LocalDateTime.parse(start);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JeromeGohRY"},"content":"        LocalDateTime modelEnd \u003d LocalDateTime.parse(end);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JeromeGohRY"},"content":"        return new Event(modelName, modelStart, modelEnd, description);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JeromeGohRY"},"content":"    }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JeromeGohRY"},"content":"}","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":66}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03T17:06:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JeromeGohRY"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JeromeGohRY"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JeromeGohRY"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JeromeGohRY"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JeromeGohRY"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2025-10-08T18:00:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JeromeGohRY"},"content":"            this.events.addAll(events);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-08T18:00:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JeromeGohRY"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JeromeGohRY"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JeromeGohRY"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JeromeGohRY"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JeromeGohRY"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JeromeGohRY"},"content":"            }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JeromeGohRY"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:07:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":16,"-":60}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03T14:55:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08T17:12:26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17T13:31:55","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JeromeGohRY"},"content":"        @Override","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JeromeGohRY"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JeromeGohRY"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JeromeGohRY"},"content":"        @Override","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JeromeGohRY"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JeromeGohRY"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"wailon18"},"content":"        @Override","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"wailon18"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"wailon18"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"wailon18"},"content":"        }","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"wailon18"},"content":"        @Override","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"wailon18"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"wailon18"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"wailon18"},"content":"        }","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"wailon18"},"content":"","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"wailon18"},"content":"        @Override","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"wailon18"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"wailon18"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"wailon18"},"content":"        }","lastModifiedDate":"2025-10-08T21:18:10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08T17:12:26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":11,"wailon18":15,"-":204}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JeromeGohRY"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19T11:14:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29T07:05:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29T07:05:38","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JeromeGohRY"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29T07:05:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JeromeGohRY"},"content":"","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JeromeGohRY"},"content":"        @Override","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JeromeGohRY"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JeromeGohRY"},"content":"            return events;","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JeromeGohRY"},"content":"        }","lastModifiedDate":"2025-10-08T17:53:36","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24T22:39:55","isFullCredit":false}],"authorContributionMap":{"JeromeGohRY":7,"-":108}}]
