[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"[![CI Status](https://github.com/AY2526S1-CS2103-F12-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2526S1-CS2103-F12-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2025-09-30T18:38:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"# Devbooks","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"DevBooks provides fast digital access to students in ","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"National University of Singapore, School of Computing, ","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"making it easier to contact any student using their preferred mode of communication. ","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"Allow students to find project mates from the same project group easily and view the ","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"development profile of their contact.","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wen-Cong"},"content":"## Key Features","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wen-Cong"},"content":"* Support saving of popular platform profiles like Telegram handles and GitHub username for your contacts.","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"* Organise contacts neatly, find your contacts easily.","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"* Terminal inspired experience, quick and easy for users familiar with CLI.","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wen-Cong"},"content":"## Documentation","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wen-Cong"},"content":"For detailed documentation of this project, see the [Devbooks Product Website](https://ay2526s1-cs2103-f12-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wen-Cong"},"content":"## Acknowledgements","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wen-Cong"},"content":"This project is based on the `AddressBook-Level3` project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-10-04T14:30:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Harjun751"},"content":"","lastModifiedDate":"2025-09-30T18:27:41","isFullCredit":false}],"authorContributionMap":{"Harjun751":1,"Itsdaodao":1,"-":3,"Wen-Cong":21}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2024-07-20T12:38:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"### Yeo Wen Cong","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wen-Cong"},"content":"\u003cimg src\u003d\"images/wen-cong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wen-Cong"},"content":"[[github](http://github.com/wen-cong)]","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wen-Cong"},"content":"[[portfolio](team/wen-cong.md)]","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wen-Cong"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-30T18:10:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"### Wang Daohang","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"\u003cimg src\u003d\"images/itsdaodao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T17:52:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"[[github](http://github.com/itsdaodao)] [[portfolio](team/itsdaodao.md)]","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"* Responsibilities: Testing","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-30T18:10:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Harjun751"},"content":"### Harvinder Arjun Singh S/O Sukhwant Singh","lastModifiedDate":"2025-09-30T17:44:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Harjun751"},"content":"\u003cimg src\u003d\"images/harjun751.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T17:44:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Harjun751"},"content":"* Responsibilities: Integration","lastModifiedDate":"2025-09-30T17:44:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Harjun751"},"content":"[[github](https://github.com/Harjun751/)]","lastModifiedDate":"2025-09-30T17:44:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Harjun751"},"content":"[[portfolio](team/harjun751.md)]","lastModifiedDate":"2025-09-30T17:44:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-30T17:55:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"MoshiMoshiMochi"},"content":"### Thaddaeus Chua","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"MoshiMoshiMochi"},"content":"\u003cimg src\u003d\"images/moshimoshimochi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T17:52:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"MoshiMoshiMochi"},"content":"[[github](http://github.com/MoshiMoshiMochi)]","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Derekqua"},"content":"[[portfolio](team/moshimoshimochi.md)]","lastModifiedDate":"2025-09-30T18:55:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"MoshiMoshiMochi"},"content":"* Responsibilities: Deliverables and Deadlines","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-30T18:00:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Derekqua"},"content":"### Derek Qua","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Derekqua"},"content":"\u003cimg src\u003d\"images/derekqua.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T18:55:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Derekqua"},"content":"[[github](https://github.com/Derekqua)]","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Derekqua"},"content":"[[portfolio](team/derekqua.md)]","lastModifiedDate":"2025-09-30T18:55:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Derekqua"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2025-09-30T18:55:09","isFullCredit":false}],"authorContributionMap":{"Derekqua":6,"Harjun751":5,"-":34,"Wen-Cong":5,"Itsdaodao":4,"MoshiMoshiMochi":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams are in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2025-07-24T02:43:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07T16:25:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09T15:32:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21T12:41:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17T04:27:55","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"MoshiMoshiMochi"},"content":"**Target user profile**: NUS School of Computing Students","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"MoshiMoshiMochi"},"content":"* He is a student in SOC","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"MoshiMoshiMochi"},"content":"* He likes things to be fast and efficient","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"MoshiMoshiMochi"},"content":"* Need to find connections","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"MoshiMoshiMochi"},"content":"* Often needs to find students taking the same module for group work","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"MoshiMoshiMochi"},"content":"* Often need to contact groupmates","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"MoshiMoshiMochi"},"content":"* Loves using telegram for communication","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"MoshiMoshiMochi"},"content":"**Value proposition**: ","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"MoshiMoshiMochi"},"content":"DevBooks provides fast digital access to students in NUS SOC, making it easier to ","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"MoshiMoshiMochi"},"content":"contact any student using their preferred mode of communication. Allow students to find project mates from the ","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"MoshiMoshiMochi"},"content":"same project group easily and view the development profile of their contact.","lastModifiedDate":"2025-09-30T18:53:51","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Harjun751"},"content":"| `* * *` | beginner user                 |\tadd a contact\t        | i can retrieve it when I want\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Harjun751"},"content":"| `* * *` | beginner user                 |\tadd a phone number to a contact\t        | I can easily message or call them when I need it\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Harjun751"},"content":"| `* * *` | beginner user                 |\ttag my contacts\t        | I can easily group my contacts\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Harjun751"},"content":"| `* * *` | beginner user                 |\tlist out all the contacts within my contact book\t        | I can get an overview of everyone I\u0027ve added so far\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Harjun751"},"content":"| `* * *` | beginner user                 |\tdelete a contact\t        | I can declutter my contacts list if necessary\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Harjun751"},"content":"| `* * *` | beginner user                 |\tlook for list of available commands that I can use\t        | I can know what commands I can use without memorizing\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tadd a telegram handle to a contact\t        | I can easily access my contact\u0027s telegram when i need it\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tupdate a contact\t        | I can update the details of my contacts when they change\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Harjun751"},"content":"| `* * `  | student                       |\tsearch for a contact by name\t        | i can quickly find their contact details\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Harjun751"},"content":"| `* * `  | intermediate user             |\tadd all contact information all just with one line\t        | I don\u0027t need to do so manually using mutiple updates\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tdelete a tag\t        | I can remove outdated tags\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Harjun751"},"content":"| `* * `  | student                       |\tquickly scroll through using arrow keys in an alphabetical list \t        | i find someone without typing.\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Harjun751"},"content":"| `* * `  | impatient user                |\tload my contacts within 2 seconds\t        | I do not need to wait too long to access my contacts\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tsee the recently accessed contacts\t        | I can know who I recently contacted\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tadd an email address to a contact\t        | I can easily email them when I need it\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tset a preferred mode of communication to a contact\t        | I can reach them at their preferred platform when |","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tadd a contact to my favourites list\t        | I can easily access them\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tsee my favourites list\t        | I can contact a favourite friend\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Harjun751"},"content":"| `* * `  | student                       |\tbe able to group contacts by teams\t        | i can access all members in one place.\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Harjun751"},"content":"| `* * `  | advanced user                 |\tbe able to add multiple tags to a contact\t        | i can find my groups quickly.\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Harjun751"},"content":"| `* * `  | intermediate user             |\taccess the github page of a contact\t        | I can easily view their user activity and repos\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tfilter my contacts by tags and name\t        | I can find my contact(s) easier\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tget more details with each commands and flags\t        | I am able to learn how to properly use each command/flag\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Harjun751"},"content":"| `* * `  | student                       |\tback up my contacts to a CSV\t        | i dont lose my contacts if the device fails.\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Harjun751"},"content":"| `* * `  | student                       |\timport a list of contacts from a CSV or file\t        | I can quickly add contacts to another device.\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Harjun751"},"content":"| `* * `  | advanced user                 |\tcreate customizable shortcuts\t        | I can increase the speed of using the application\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Harjun751"},"content":"| `* * `  | advanced user                 |\tview a list of my shortcuts\t        | I can see an overview of my customizations\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Harjun751"},"content":"| `* * `  | advanced user                 |\tcreate my own shortcuts\t        | I can quickly type out long commands instantly\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Harjun751"},"content":"| `* * `  | intermediate user             |\taccess my command history through arrow keys\t        | I can execute repeated operations quickly\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Harjun751"},"content":"| `* * `  | intermediate user             |\tpress \"Tab\" to auto-complete the command that I am typing out\t        | I can quickly finish the command that I am typing.\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Harjun751"},"content":"| `* * `  | intermediate user             |\tsee hint text of what command would be autocompleted if I press \"tab\"\t        | I have visual feedback before I autocomplete a command\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Harjun751"},"content":"| `* * `  | intermediate user             |\trevert the last command\t        | I can undo any mistakes\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tbe able to rename my tags\t        | I mass edit contacts with the same tag\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\t add the github handle to a contact\t        | I can easily access their github page in the future\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Harjun751"},"content":"| `* * `  | beginner user                 |\tdelete all contacts associated with a tag\t        | I can remove irrelevant contacts from my list\t|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Harjun751"},"content":"| `*`     | beginner user                 |\tgo through a tutorial of the app\t        | I can familiarize myself on how to use the app.|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Harjun751"},"content":"| `*`     | beginner user                 |\tread the documentation\t        | I can get started on using the app|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Harjun751"},"content":"| `*`     | beginner user                 |\timport existing contacts from a .vcf file\t        | I do not need to re-type all of my existing contacts|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Harjun751"},"content":"| `*`     | student                       |\tlaunch my telegram chat with the contact person through the app\t        | I can start chatting with my contacts on telegram quickly|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Harjun751"},"content":"| `*`     | student                       |\tlaunch my email app quickly through the app\t        | I can start writing email to my contacts quickly|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Harjun751"},"content":"| `*`     | student                       |\tdelete contacts by date time query\t        | my address book is clean.|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Harjun751"},"content":"| `*`     | advanced user                 |\tuse DevBooks inside of my command console\t        | I don\u0027t need to open the application to perform an operation|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Harjun751"},"content":"| `*`     | aesthetic-minded individual   |\tcustomize the theme of the application\t        | it\u0027s more personal to me|","lastModifiedDate":"2025-09-30T19:06:21","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Wen-Cong"},"content":"(For all use cases below, the **System** is the `Devbooks` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Wen-Cong"},"content":"**Use case: UC01 - Add Contact**","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Wen-Cong"},"content":"1.  Devbooks prompts for command","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Wen-Cong"},"content":"2.  User input add command with required contact information","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Wen-Cong"},"content":"3.  Devbooks saves contact and show success message","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Wen-Cong"},"content":"4.  Devbooks shows the updated contact list","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Wen-Cong"},"content":"* 2a. User input add command with invalid contact information","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Wen-Cong"},"content":"    * 2a1. Devbooks shows an error message","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Wen-Cong"},"content":"    * 2a2. User input new add command with contact information","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Wen-Cong"},"content":"      Steps 2a1-2a2 are repeated until the add command and contact information entered are correct.","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Wen-Cong"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2025-09-30T20:58:45","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Wen-Cong"},"content":"* 2b. Duplicated contact information found","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Wen-Cong"},"content":"    * 2b1. Devbooks shows an error message","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Wen-Cong"},"content":"    * 2b2. User input new add command with contact information","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Wen-Cong"},"content":"      Steps 2b1-2b2 are repeated until the new contact information does not duplicate with existing contacts.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Wen-Cong"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Wen-Cong"},"content":"**Use case: UC02 - Edit Contact**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Wen-Cong"},"content":"**MSS**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Wen-Cong"},"content":"1.  User edits contact in list","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Wen-Cong"},"content":"2.  Devbook detects correct data in the entered data","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Wen-Cong"},"content":"3.  Devbook updates the contact and displays the newly updated contact","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Wen-Cong"},"content":"    Use case ends.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Wen-Cong"},"content":"**Extensions**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Wen-Cong"},"content":"* 1a. Devbook detects an error in the entered data.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Wen-Cong"},"content":"    * 1a1. Devbook prompts the user for the correct data.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Wen-Cong"},"content":"    * 1a2. Beginner user enters new data.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Wen-Cong"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Wen-Cong"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Wen-Cong"},"content":"**Use case: UC05 - Delete Contact**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Wen-Cong"},"content":"**MSS**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Wen-Cong"},"content":"1.  User inputs delete command with desired information to delete","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Wen-Cong"},"content":"2.  Devbooks shows a confirmation prompt","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Wen-Cong"},"content":"3.  User confirms intent to delete ","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Wen-Cong"},"content":"4.  Devbooks deletes the contact","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Wen-Cong"},"content":"    Use case ends.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Wen-Cong"},"content":"**Extensions**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Wen-Cong"},"content":"* 1a. Devbooks does not find a corresponding user to delete","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Wen-Cong"},"content":"    * 1a1. Devbooks shows an error message","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Wen-Cong"},"content":"      Use case ends.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Wen-Cong"},"content":"* 3a. User inputs an invalid confirmation prompt","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Wen-Cong"},"content":"    * 3a1. Devbooks shows an error message","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Wen-Cong"},"content":"    * 3a2. Devbooks re-prompts for confirmation","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Wen-Cong"},"content":"      Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Wen-Cong"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Wen-Cong"},"content":"**Use case: UC09 – Find Contact by Name**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Wen-Cong"},"content":"**MSS**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Wen-Cong"},"content":"1.  User inputs a find command with keyword(s) to search","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Wen-Cong"},"content":"2.  Devbooks validates the input and searches for matching contacts","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Wen-Cong"},"content":"3.  Devbooks displays the matching contacts","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Wen-Cong"},"content":"    Use case ends.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Wen-Cong"},"content":"**Extensions**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Wen-Cong"},"content":"* 2a. User inputs an invalid search format","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Wen-Cong"},"content":"    * 2a1. Devbooks shows an error message","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Wen-Cong"},"content":"    * 2a2. Devbooks prompts for keywords","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Wen-Cong"},"content":"    * 2a3. User inputs find command with keyword(s) to search","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Wen-Cong"},"content":"    Steps 2a1–2a3 are repeated until valid input is provided.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Wen-Cong"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Wen-Cong"},"content":"**Use case: UC06 – Show list of commands**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Wen-Cong"},"content":"**MSS**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Wen-Cong"},"content":"1.  User inputs a help command to look up all commands available","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Wen-Cong"},"content":"2.  Devbook lists out all the commands with its uses","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Wen-Cong"},"content":"3.  Devbook prompts the user to select an available command for more details","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Wen-Cong"},"content":"4.  User chooses specific help commands to look up details of one specific command.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Wen-Cong"},"content":"5.  Devbooks shows the specific instructions and guide on how to use that command","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Wen-Cong"},"content":"    Use case ends.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Wen-Cong"},"content":"**Extensions**","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Wen-Cong"},"content":"* 3a. User did not select any commands to view command details","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Wen-Cong"},"content":"* 4a. User inputs a commands that does not exist in list of commands","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Wen-Cong"},"content":"    * 4a1. Devbooks shows an error message","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Wen-Cong"},"content":"    * 4a2. Devbooks prompts user to select available command","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Wen-Cong"},"content":"    * 4a3. User selects a command from list of available command","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Wen-Cong"},"content":"  Steps 4a1–4a3 are repeated until available command is selected.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"Wen-Cong"},"content":"  Use case resumes from step 5.","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T20:05:50","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Itsdaodao"},"content":"4.  Should only be used by a single user (i.e. not a multi-user product).","lastModifiedDate":"2025-10-02T12:36:26","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Itsdaodao"},"content":"5.  Should store data locally and in a human editable text file.","lastModifiedDate":"2025-10-02T12:36:26","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Itsdaodao"},"content":"6.  Should not use a DBMS to store data.","lastModifiedDate":"2025-10-02T12:36:26","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Itsdaodao"},"content":"7.  Should work without requiring an installer.","lastModifiedDate":"2025-10-02T12:36:26","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"Itsdaodao"},"content":"8.  Should not depend on a specific remote server.","lastModifiedDate":"2025-10-02T12:36:26","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Itsdaodao"},"content":"9.  Should be packaged into a single JAR file.","lastModifiedDate":"2025-10-02T12:36:26","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Itsdaodao"},"content":"10. Should be able to load within 5 seconds. ","lastModifiedDate":"2025-10-02T12:36:26","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"Derekqua"},"content":"* **CLI (command line interface)**: A text-based interface where users type commands to interact with the system.","lastModifiedDate":"2025-09-30T23:42:50","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"Derekqua"},"content":"* **Development profile**: A user\u0027s GitHub profile used to store, manage, and showcase software development projects.","lastModifiedDate":"2025-09-30T23:42:50","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"Derekqua"},"content":"* **Digital access**: The ability to access DevBooks and retrieve information without needing any internet connection","lastModifiedDate":"2025-09-30T23:42:50","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"Derekqua"},"content":"* **Flag/ Parameter**: A prefix in a command (e.g. n/, p/, t/) used to specify values for different fields.","lastModifiedDate":"2025-09-30T23:42:50","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09T15:37:20","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"Derekqua"},"content":"* **NUS SOC**: National University of Singapore, School of Computing","lastModifiedDate":"2025-09-30T23:42:50","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"Derekqua"},"content":"* **Preferred Mode of communication**: Telegram, Email or Phone","lastModifiedDate":"2025-09-30T23:42:50","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"Derekqua"},"content":"* **Project mates/ Project group**: A project group is a team of students from the same module who work together on an assigned project. A project mate is a member of that group.","lastModifiedDate":"2025-09-30T23:42:50","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"Derekqua"},"content":"* **Tag**: A Label assigned to contacts for easy grouping and searching","lastModifiedDate":"2025-09-30T23:42:50","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"Derekqua":8,"Harjun751":43,"-":361,"Wen-Cong":117,"Itsdaodao":7,"MoshiMoshiMochi":11}},{"path":"docs/_config.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"MoshiMoshiMochi"},"content":"title: \"DevBooks\"","lastModifiedDate":"2025-09-30T18:16:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"theme: minima","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"header_pages:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"  - UserGuide.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  - DeveloperGuide.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  - AboutUs.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"markdown: kramdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MoshiMoshiMochi"},"content":"repository: \"AY2526S1-CS2103-F12-2/tp\"","lastModifiedDate":"2025-09-30T18:16:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"github_icon: \"images/github-icon.png\"","lastModifiedDate":"2020-08-01T00:36:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"plugins:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - jemoji","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"-":13,"MoshiMoshiMochi":2}},{"path":"docs/team/derekqua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Derekqua"},"content":"---","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Derekqua"},"content":"layout: page","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Derekqua"},"content":"title: Derek Qua\u0027s Project Portfolio Page","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Derekqua"},"content":"---","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Derekqua"},"content":"","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Derekqua"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Derekqua"},"content":"","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Derekqua"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Derekqua"},"content":"","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Derekqua"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Derekqua"},"content":"","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Derekqua"},"content":"Nothing yet","lastModifiedDate":"2025-09-30T18:02:56","isFullCredit":false}],"authorContributionMap":{"Derekqua":12}},{"path":"docs/team/harjun751.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Harjun751"},"content":"---","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Harjun751"},"content":"layout: page","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Harjun751"},"content":"title: Arjun\u0027s Project Portfolio Page","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Harjun751"},"content":"---","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Harjun751"},"content":"","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Harjun751"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Harjun751"},"content":"","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Harjun751"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Harjun751"},"content":"","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Harjun751"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Harjun751"},"content":"","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Harjun751"},"content":"Nothing yet :(","lastModifiedDate":"2025-09-30T17:43:56","isFullCredit":false}],"authorContributionMap":{"Harjun751":12}},{"path":"docs/team/itsdaodao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"---","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"layout: page","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"title: itsdaodao\u0027s Project Portfolio Page","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"---","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"Nothing yet :(","lastModifiedDate":"2025-09-30T17:45:38","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":12}},{"path":"docs/team/moshimoshimochi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MoshiMoshiMochi"},"content":"---","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"MoshiMoshiMochi"},"content":"layout: page","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"MoshiMoshiMochi"},"content":"title: Thaddaeus\u0027s Project Portfolio Page","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MoshiMoshiMochi"},"content":"---","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"MoshiMoshiMochi"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"MoshiMoshiMochi"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"MoshiMoshiMochi"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"MoshiMoshiMochi"},"content":"Nothing yet :(","lastModifiedDate":"2025-09-30T17:45:11","isFullCredit":false}],"authorContributionMap":{"MoshiMoshiMochi":12}},{"path":"docs/team/wen-cong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Wen-Cong"},"content":"---","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wen-Cong"},"content":"layout: page","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wen-Cong"},"content":"title: Wen Cong\u0027s Project Portfolio Page","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wen-Cong"},"content":"---","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wen-Cong"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wen-Cong"},"content":"Nothing yet :(","lastModifiedDate":"2025-09-30T17:54:00","isFullCredit":false}],"authorContributionMap":{"Wen-Cong":12}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29T19:33:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09T23:15:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29T19:33:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28T20:36:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25T00:37:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29T19:33:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"MoshiMoshiMochi"},"content":"        // Save the current address book state to storage only if the command modifies the data","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"MoshiMoshiMochi"},"content":"        if (command.requiresWrite()) {","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03T18:12:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29T14:17:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27T17:23:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false}],"authorContributionMap":{"-":89,"MoshiMoshiMochi":2}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28T20:36:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"                .append(person.getPhone());","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"        if (!person.getEmail().isEmpty()) {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"            builder.append(\"; Email: \")","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"                    .append(person.getEmail());","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"        builder.append(\"; Address: \")","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"-":47,"Wen-Cong":8}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"MoshiMoshiMochi"},"content":"    /**","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @inheritDoc","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e as AddCommand modifies the address book","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"MoshiMoshiMochi"},"content":"     */","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Override","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public boolean requiresWrite() {","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"MoshiMoshiMochi"},"content":"        return true;","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"-":84,"MoshiMoshiMochi":9}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22T23:30:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MoshiMoshiMochi"},"content":"    /**","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @inheritDoc","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e as ClearCommand modifies the address book","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MoshiMoshiMochi"},"content":"     */","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Override","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public boolean requiresWrite() {","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"MoshiMoshiMochi"},"content":"        return true;","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"-":23,"MoshiMoshiMochi":9}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"MoshiMoshiMochi"},"content":"    /**","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * Returns true if the command modifies the address book.","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * By default, commands do not modify the address book.","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MoshiMoshiMochi"},"content":"     *","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e as this command does not modify the address book","lastModifiedDate":"2025-10-08T09:19:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MoshiMoshiMochi"},"content":"     */","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public boolean requiresWrite() {","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"MoshiMoshiMochi"},"content":"        return false;","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"MoshiMoshiMochi"},"content":"    };","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"-":20,"MoshiMoshiMochi":9}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01T15:01:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T15:01:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01T01:51:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01T01:51:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29T19:47:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27T13:01:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28T13:00:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27T15:11:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27T15:11:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T15:11:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"MoshiMoshiMochi"},"content":"    /**","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @inheritDoc","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e as DeleteCommand modifies the address book","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"MoshiMoshiMochi"},"content":"     */","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Override","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public boolean requiresWrite() {","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"MoshiMoshiMochi"},"content":"        return true;","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"-":69,"MoshiMoshiMochi":9}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01T01:51:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15T13:51:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25T14:29:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19T19:04:53","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07T22:57:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07T22:57:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07T22:57:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:57:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17T13:31:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05T16:24:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14T13:32:23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08T13:35:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"MoshiMoshiMochi"},"content":"    /**","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @inheritDoc","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e as AddCommand modifies the address book","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"MoshiMoshiMochi"},"content":"     */","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Override","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public boolean requiresWrite() {","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"MoshiMoshiMochi"},"content":"        return true;","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T09:14:15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15T22:11:44","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15T22:11:44","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15T22:11:44","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15T22:11:44","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14T19:34:13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21T08:06:48","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11T19:52:49","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07T11:50:35","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11T19:56:32","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05T14:00:03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26T14:48:48","isFullCredit":false}],"authorContributionMap":{"-":242,"MoshiMoshiMochi":9}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06T08:43:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11T10:22:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20T23:17:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE)","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23T14:32:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14T22:22:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10T22:28:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"        Email email \u003d new Email();","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wen-Cong"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_EMAIL)) {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wen-Cong"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17T23:17:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17T23:15:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05T20:25:06","isFullCredit":false}],"authorContributionMap":{"-":59,"Wen-Cong":6}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wen-Cong"},"content":"import java.util.Objects;","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"     * Constructs an empty {@code Email} with null value.","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wen-Cong"},"content":"    public Email() {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wen-Cong"},"content":"        value \u003d null;","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"     * @param email A valid nullable email address.","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14T19:34:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05T04:07:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"        // Email can be empty, hence null value is acceptable","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wen-Cong"},"content":"            return true;","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22T22:31:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"     * Returns if email value is null value","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wen-Cong"},"content":"        return value \u003d\u003d null;","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wen-Cong"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wen-Cong"},"content":"            return \"\";","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13T08:40:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"        return Objects.equals(value, otherEmail.value);","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24T16:57:46","isFullCredit":false}],"authorContributionMap":{"-":75,"Wen-Cong":26}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22T09:48:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16T15:24:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25T15:59:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12T12:35:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24T14:55:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12T12:35:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wen-Cong"},"content":"        if (person.getEmail().isEmpty()) {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wen-Cong"},"content":"            email.setVisible(false);","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wen-Cong"},"content":"        } else {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wen-Cong"},"content":"            email.setVisible(true);","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20T12:04:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02T22:50:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18T16:29:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21T19:13:15","isFullCredit":false}],"authorContributionMap":{"-":59,"Wen-Cong":5}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"MoshiMoshiMochi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19T09:57:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"MoshiMoshiMochi"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"MoshiMoshiMochi"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"MoshiMoshiMochi"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19T15:47:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25T18:28:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21T23:01:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31T09:59:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22T18:39:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20T09:42:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20T08:42:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20T08:42:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19T15:47:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19T15:59:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19T15:59:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20T08:40:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25T16:16:01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Test","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public void execute_addCommand_triggersWrite() throws Exception {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"MoshiMoshiMochi"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"MoshiMoshiMochi"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"MoshiMoshiMochi"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"MoshiMoshiMochi"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"MoshiMoshiMochi"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertCommandTriggersWrite(addCommand,","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"MoshiMoshiMochi"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, expectedPerson),","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"MoshiMoshiMochi"},"content":"                expectedModel);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Test","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public void execute_editCommand_triggersWrite() throws Exception {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"MoshiMoshiMochi"},"content":"        // setup model with one person","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"MoshiMoshiMochi"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"MoshiMoshiMochi"},"content":"        int index \u003d 1; // assuming first person","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"MoshiMoshiMochi"},"content":"        String editCommand \u003d \"edit \" + index + \" \" + PHONE_DESC_AMY; // or replace with valid edit args","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"MoshiMoshiMochi"},"content":"        Person editedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"MoshiMoshiMochi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"MoshiMoshiMochi"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertCommandTriggersWrite(editCommand,","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"MoshiMoshiMochi"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson),","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"MoshiMoshiMochi"},"content":"                expectedModel);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Test","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public void execute_deleteCommand_triggersWrite() throws Exception {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"MoshiMoshiMochi"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"MoshiMoshiMochi"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"MoshiMoshiMochi"},"content":"        String deleteCommand \u003d \"delete \" + index;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"MoshiMoshiMochi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"MoshiMoshiMochi"},"content":"        expectedModel.deletePerson(expectedModel.getFilteredPersonList().get(0));","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertCommandTriggersWrite(deleteCommand,","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"MoshiMoshiMochi"},"content":"                String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, AMY),","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"MoshiMoshiMochi"},"content":"                expectedModel);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Test","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public void execute_clearCommand_triggersWrite() throws Exception {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"MoshiMoshiMochi"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"MoshiMoshiMochi"},"content":"        String clearCommand \u003d ClearCommand.COMMAND_WORD;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"MoshiMoshiMochi"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertCommandTriggersWrite(clearCommand, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"MoshiMoshiMochi"},"content":"    @Test","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"MoshiMoshiMochi"},"content":"    public void execute_listCommand_doesNotTriggerWrite() throws Exception {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"MoshiMoshiMochi"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertCommandDoesNotTriggerWrite(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"MoshiMoshiMochi"},"content":"     *","lastModifiedDate":"2025-10-08T15:03:55","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"MoshiMoshiMochi"},"content":"     *","lastModifiedDate":"2025-10-08T15:03:55","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"MoshiMoshiMochi"},"content":"     *","lastModifiedDate":"2025-10-08T15:03:55","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14T10:05:44","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"MoshiMoshiMochi"},"content":"     *","lastModifiedDate":"2025-10-08T15:03:55","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11T10:15:25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31T09:59:21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05T20:14:09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"MoshiMoshiMochi"},"content":"     *","lastModifiedDate":"2025-10-08T15:03:55","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31T09:59:21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14T15:56:59","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31T09:59:21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19T15:59:04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13T05:45:50","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09T23:04:42","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"MoshiMoshiMochi"},"content":"    /**","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * A Storage stub that tracks whether saveAddressBook() was called.","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"MoshiMoshiMochi"},"content":"     */","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"MoshiMoshiMochi"},"content":"    private static class TrackingStorageManager extends StorageManager {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"MoshiMoshiMochi"},"content":"        private boolean saveCalled \u003d false;","lastModifiedDate":"2025-10-08T15:03:55","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"MoshiMoshiMochi"},"content":"        TrackingStorageManager(Path addressBookPath, Path prefsPath) {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"MoshiMoshiMochi"},"content":"            super(new JsonAddressBookStorage(addressBookPath), new JsonUserPrefsStorage(prefsPath));","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"MoshiMoshiMochi"},"content":"        }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"MoshiMoshiMochi"},"content":"        @Override","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"MoshiMoshiMochi"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"MoshiMoshiMochi"},"content":"            saveCalled \u003d true; // mark that write occurred","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"MoshiMoshiMochi"},"content":"            super.saveAddressBook(addressBook); // optional: actually write file","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"MoshiMoshiMochi"},"content":"        }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"MoshiMoshiMochi"},"content":"    /**","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * - the Storage component\u0027s saveAddressBook() method was called exactly once","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"MoshiMoshiMochi"},"content":"     */","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"MoshiMoshiMochi"},"content":"    private void assertCommandTriggersWrite(String inputCommand, String expectedMessage, Model expectedModel)","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"MoshiMoshiMochi"},"content":"            throws Exception {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"MoshiMoshiMochi"},"content":"        Path bookPath \u003d temporaryFolder.resolve(\"writeTest.json\");","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"MoshiMoshiMochi"},"content":"        Path prefsPath \u003d temporaryFolder.resolve(\"prefsWriteTest.json\");","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"MoshiMoshiMochi"},"content":"        TrackingStorageManager trackingStorage \u003d new TrackingStorageManager(bookPath, prefsPath);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"MoshiMoshiMochi"},"content":"        logic \u003d new LogicManager(model, trackingStorage);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"MoshiMoshiMochi"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"MoshiMoshiMochi"},"content":"        String feedback \u003d result.getFeedbackToUser();","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"MoshiMoshiMochi"},"content":"        if (!feedback.equals(expectedMessage)) {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"MoshiMoshiMochi"},"content":"            // Allow looser match for commands whose feedback may format differently","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"MoshiMoshiMochi"},"content":"            assertTrue(feedback.startsWith(expectedMessage.split(\":\")[0]),","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"MoshiMoshiMochi"},"content":"                    \"Expected feedback to start with same prefix but got: \" + feedback);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"MoshiMoshiMochi"},"content":"        } else {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"MoshiMoshiMochi"},"content":"            assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"MoshiMoshiMochi"},"content":"        }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertEquals(true, trackingStorage.saveCalled, \"Expected saveAddressBook() to be called but it was not.\");","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"MoshiMoshiMochi"},"content":"    /**","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"MoshiMoshiMochi"},"content":"     * - the Storage component\u0027s saveAddressBook() method was NOT called","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"MoshiMoshiMochi"},"content":"     */","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"MoshiMoshiMochi"},"content":"    private void assertCommandDoesNotTriggerWrite(String inputCommand, String expectedMessage, Model expectedModel)","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"MoshiMoshiMochi"},"content":"            throws Exception {","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"MoshiMoshiMochi"},"content":"        Path bookPath \u003d temporaryFolder.resolve(\"noWriteTest.json\");","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"MoshiMoshiMochi"},"content":"        Path prefsPath \u003d temporaryFolder.resolve(\"prefsNoWriteTest.json\");","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"MoshiMoshiMochi"},"content":"        TrackingStorageManager trackingStorage \u003d new TrackingStorageManager(bookPath, prefsPath);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"MoshiMoshiMochi"},"content":"        logic \u003d new LogicManager(model, trackingStorage);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"MoshiMoshiMochi"},"content":"","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"MoshiMoshiMochi"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"MoshiMoshiMochi"},"content":"        assertEquals(false, trackingStorage.saveCalled, \"Expected saveAddressBook() NOT to be called but it was.\");","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"MoshiMoshiMochi"},"content":"    }","lastModifiedDate":"2025-10-08T14:57:27","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false}],"authorContributionMap":{"-":175,"MoshiMoshiMochi":134}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01T17:08:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wen-Cong"},"content":"        Person validPerson \u003d new PersonBuilder().withEmail().build();","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25T22:47:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23T22:27:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08T18:44:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03T14:55:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22T11:15:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T22:59:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06T17:33:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27T17:15:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07T22:24:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27T16:38:58","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06T18:57:26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08T17:12:26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17T13:31:55","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06T19:16:42","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07T22:39:15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08T17:12:26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10T12:11:55","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04T11:53:53","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12T10:27:12","isFullCredit":false}],"authorContributionMap":{"-":203,"Wen-Cong":1}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13T13:29:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05T16:55:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07T08:48:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wen-Cong"},"content":"        Person person \u003d new PersonBuilder().withEmail().build();","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12T16:07:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23T17:13:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27T10:36:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24T10:41:03","isFullCredit":false}],"authorContributionMap":{"-":100,"Wen-Cong":1}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import java.util.Objects;","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30T18:37:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wen-Cong"},"content":"        assertTrue(Email.isValidEmail(null)); // empty email","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09T11:24:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20T23:43:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wen-Cong"},"content":"    public void isEmpty() {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wen-Cong"},"content":"        Email email \u003d new Email();","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wen-Cong"},"content":"        assertTrue(email.isEmpty());","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wen-Cong"},"content":"        Email emptyEmail \u003d new Email();","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wen-Cong"},"content":"        // same null values -\u003e returns true","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wen-Cong"},"content":"        assertTrue(emptyEmail.equals(new Email(null)));","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23T15:52:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wen-Cong"},"content":"    public void toString_null_returnsEmptyString() {","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wen-Cong"},"content":"        Email email \u003d new Email();","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wen-Cong"},"content":"        assert(Objects.equals(email.toString(), \"\"));","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-10-07T22:41:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16T20:33:38","isFullCredit":false}],"authorContributionMap":{"-":80,"Wen-Cong":19}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15T12:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wen-Cong"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_WITHOUT_EMAIL;","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27T20:09:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wen-Cong"},"content":"    @Test","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wen-Cong"},"content":"    public void toModelType_validPersonWithNullEmail_returnsPerson() throws Exception {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wen-Cong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wen-Cong"},"content":"        assertEquals(BENSON_WITHOUT_EMAIL, person.toModelType());","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14T14:24:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13T21:25:09","isFullCredit":false}],"authorContributionMap":{"-":103,"Wen-Cong":7}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18T12:42:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18T17:00:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27T01:19:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"        email \u003d new Email();","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26T15:01:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11T09:23:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wen-Cong"},"content":"    /**","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wen-Cong"},"content":"     * Sets a default {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wen-Cong"},"content":"     */","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wen-Cong"},"content":"    public PersonBuilder withEmail() {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wen-Cong"},"content":"        this.email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wen-Cong"},"content":"        return this;","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wen-Cong"},"content":"    }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wen-Cong"},"content":"","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15T13:16:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20T12:02:49","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03T21:39:03","isFullCredit":false}],"authorContributionMap":{"-":95,"Wen-Cong":9}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29T14:36:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29T14:36:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06T04:07:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06T10:27:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"        if (!person.getEmail().isEmpty()) {","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"        }","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09T19:54:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26T15:01:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false}],"authorContributionMap":{"-":62,"Wen-Cong":2}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22T20:00:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21T15:19:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05T16:32:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05T17:53:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19T09:37:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wen-Cong"},"content":"    public static final Person BENSON_WITHOUT_EMAIL \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wen-Cong"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wen-Cong"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wen-Cong"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2025-10-07T22:19:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26T15:01:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05T20:12:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22T19:31:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21T09:42:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20T13:10:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20T13:10:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05T16:31:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26T07:53:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05T16:31:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05T16:31:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05T16:52:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24T19:38:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04T11:38:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10T12:03:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07T20:13:01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04T11:38:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13T21:21:37","isFullCredit":false}],"authorContributionMap":{"-":76,"Wen-Cong":4}}]
