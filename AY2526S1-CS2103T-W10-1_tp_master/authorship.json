[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"[![CI Status](https://github.com/AY2526S1-CS2103T-W10-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2526S1-CS2103T-W10-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"TutorHub is a desktop application for private tutors to manage their students, parents, schedules, and payments more efficiently.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"It is built on top of the AddressBook-Level3","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"project and follows the same typing-first, command-line-driven approach.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"Target Users:","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"* Private tutors handling multiple students.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"* Tutors who need to organize student/parent details, manage lesson schedules, and track payments with minimal effort.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"Value Proposition","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"* A fast, typing-first address book for private tutors to:","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"* Organize student and parent information.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"* Track lesson schedules and payments.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"* Reduce time spent on admin work so they can focus on teaching.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"Features","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"* Categorize contacts: Separate students and parents (using Childof relationships).","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"* Add parent: add parent n/John Doe p/98765432 e/john@email a/123 Street","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"* Add student: add student n/Jane Doe p/91234567 e/jane@email a/456 Street","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"* Assign schedule: Attach day/time to a student when adding.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"* Payment tracking: Record lesson cost, mark payments made (paid /n), reset, and check unpaid students (list unpaid).","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"* Personal notes: Add notes about students to track progress or reminders.","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"Documentation","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"* User Guide","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"(coming soon)","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"* Developer Guide","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"(coming soon)","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"Acknowledgements","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false}],"authorContributionMap":{"evanjw2":46,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](https://www.comp.nus.edu.sg).","lastModifiedDate":"2024-07-20T12:38:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17T23:33:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kuagabriel8"},"content":"### Gabriel Kua Shih Ern","lastModifiedDate":"2025-09-30T23:17:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kuagabriel8"},"content":"\u003cimg src\u003d\"images/kuagabriel8.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T23:09:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17T23:31:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"seokjoon27"},"content":"### Hong Seokjoon","lastModifiedDate":"2025-09-30T23:13:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"seokjoon27"},"content":"\u003cimg src\u003d\"images/seokjoon27.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T23:13:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"seokjoon27"},"content":"[[github](http://github.com/seokjoon27)]","lastModifiedDate":"2025-09-30T23:13:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"seokjoon27"},"content":"[[portfolio](team/seokjoon27.md)]","lastModifiedDate":"2025-09-30T23:13:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"seokjoon27"},"content":"* Role: Code Quality","lastModifiedDate":"2025-09-30T23:13:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"seokjoon27"},"content":"* Responsibilities: Check for coding standards and git conventions, ensure code quality. ","lastModifiedDate":"2025-09-30T23:13:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"### Ong Jun Wei(Evan)","lastModifiedDate":"2025-09-30T23:07:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"\u003cimg src\u003d\"images/evanjw2.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T23:07:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"[[github](https://github.com/evanjw2)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2025-09-30T23:07:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"* Role: Team lead","lastModifiedDate":"2025-09-30T23:07:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"* Responsibilities: Responsible for overall project coordination.","lastModifiedDate":"2025-09-30T23:07:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"limjimin-nus"},"content":"### Malcolm Chu","lastModifiedDate":"2025-09-30T23:09:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"malcolmchu13"},"content":"\u003cimg src\u003d\"images/malcolmchu13.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-10-02T16:32:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"malcolmchu13"},"content":"[[github](http://github.com/malcolmchu13)]","lastModifiedDate":"2025-09-30T23:06:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"malcolmchu13"},"content":"* Responsibilities: VScode expert","lastModifiedDate":"2025-09-30T23:06:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"limjimin-nus"},"content":"### Lim Ji Min","lastModifiedDate":"2025-09-30T23:09:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"limjimin-nus"},"content":"\u003cimg src\u003d\"images/limjimin-nus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2025-09-30T23:09:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"limjimin-nus"},"content":"[[github](https://github.com/limjimin-nus)]","lastModifiedDate":"2025-09-30T23:09:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"limjimin-nus"},"content":"* Responsibilities: IntelliJ Expert","lastModifiedDate":"2025-09-30T23:09:08","isFullCredit":false}],"authorContributionMap":{"kuagabriel8":2,"malcolmchu13":3,"seokjoon27":6,"evanjw2":5,"-":38,"limjimin-nus":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30T16:51:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams are in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2025-07-24T02:43:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07T16:25:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:18:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31T22:21:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09T15:32:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09T15:35:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31T22:24:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31T22:25:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03T21:32:43","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31T22:26:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21T12:41:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17T04:27:55","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09T16:43:14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31T22:27:21","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07T20:45:58","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"evanjw2"},"content":"Primary users:","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"evanjw2"},"content":"* Private tutors (individuals, not agencies).","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"evanjw2"},"content":"* Tutors who handle multiple students and parents.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"evanjw2"},"content":"* Users who prefer typing-first commands (efficient over GUI clicks).","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"evanjw2"},"content":"* Tech-comfortable but not professional programmers.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"evanjw2"},"content":"Pain points:","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"evanjw2"},"content":"* Managing multiple students’ details, parents’ contacts, schedules, and payments across scattered platforms (e.g., WhatsApp, notebooks, Excel).","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"evanjw2"},"content":"* Losing time on administrative tasks instead of teaching.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"evanjw2"},"content":"**Value proposition**: TutorHub provides a fast, typing-first address book tailored for tutors. It streamlines student and parent information, schedules, and payment tracking so tutors spend less time managing data and more time teaching.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"| Priority | As a …​                 | I want to …​                                           | So that I can…​                                                      |","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"evanjw2"},"content":"| -------- |-------------------------| ---------------------------------------------------- | -------------------------------------------------------------------- |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | add a new student                                     | keep track of all my students                                         |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | edit a student’s details                              | correct mistakes                                                      |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | delete a student                                      | remove students who no longer study with me                            |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | assign a student to a class or group                 | organize my students better                                           |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | view all students in a list                           | quickly find the student I want                                       |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | search for a student by name                          | quickly locate them                                                   |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"evanjw2"},"content":"| * *      | tutor                   | add a photo for each student                           | easily recognize them                                                 |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"evanjw2"},"content":"| * *      | tutor                   | view a student’s grades                               | prioritize their needs                                                |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | track student’s payment                                | know who has paid                                                     |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"evanjw2"},"content":"| * *      | tutor                   | add cost per lesson for students                       | know how much to collect                                              |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"evanjw2"},"content":"| * *      | tutor                   | add personal notes about students                      | remember important info                                               |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | add a parent contact for a student                     | communicate with their guardians                                      |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | edit parent contact information                        | update any changes                                                    |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | delete a parent contact                                 | remove outdated or incorrect info                                     |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | link multiple parents to one student                   | include all guardians                                                 |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | link multiple students to one parent                   | manage parents with multiple kids                                     |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | search for a parent by name                             | contact them easily                                                   |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | store phone numbers for students and parents           | call them                                                             |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | store email addresses for students and parents        | email them                                                            |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | store physical addresses for students and parents     | know where to go for lessons                                          |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | see all contact details for a student or parent       | not have to search multiple sources                                   |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | mark payments as paid/unpaid                            | track who has paid                                                     |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | reset all payment statuses                               | start a new billing cycle                                              |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"evanjw2"},"content":"| * * *    | tutor                   | list unpaid/paid contacts                                 | quickly see who owes or has paid                                       |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"evanjw2"},"content":"| * *      | tutor                   | assign a schedule (day \u0026 time) to each student          | track lessons                                                          |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"evanjw2"},"content":"| *        | tutor                   | view students’ grades                                    | prioritize support                                                     |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"evanjw2"},"content":"| * *      | tutor                   | hide private contact details                              | minimize chance of someone else seeing them by accident               |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"evanjw2"},"content":"| *        | tutor                   | sort students or parents by name                          | locate a contact easily                                               |","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07T16:51:22","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"evanjw2"},"content":"**Use Case: Add a New Student**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command to add a student.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"evanjw2"},"content":"2. System validates the input format.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"evanjw2"},"content":"3. System stores the new student in the address book.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"evanjw2"},"content":"4. System displays a success message: \"You’ve added a new student: \u003cStudent Name\u003e.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"evanjw2"},"content":"* 2a. The type field is missing or invalid.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error, contact must have a type. E.g add t/\u003ctype\u003e n/\u003cname\u003e p/\u003cphone\u003e e/\u003cemail\u003e a/\u003caddress\u003e, type can be s (student) or p (parent).\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"evanjw2"},"content":"* 2b. Duplicate student detected.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message: \"Bruh you might’ve already added this person before, please check again.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"evanjw2"},"content":"* 2c. Phone number invalid (not 8 digits or contains spaces/dashes).","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"evanjw2"},"content":"    * 2c1. System shows error message.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"evanjw2"},"content":"**Use Case: Add a New Parent**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command to add a parent.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"evanjw2"},"content":"2. System validates the input format.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"evanjw2"},"content":"3. System stores the new parent in the address book.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"evanjw2"},"content":"4. System displays a success message: \"You’ve added a new Parent: \u003cParent Name\u003e.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"evanjw2"},"content":"* 2a. The type field is missing or invalid.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error, contact must have a type. E.g add t/\u003ctype\u003e n/\u003cname\u003e p/\u003cphone\u003e e/\u003cemail\u003e a/\u003caddress\u003e, type can be s (student) or p (parent).\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"evanjw2"},"content":"* 2b. Duplicate parent detected.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message: \"Bruh you might’ve already added this person before, please check again.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"evanjw2"},"content":"* 2c. Phone number invalid.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"evanjw2"},"content":"    * 2c1. System shows error message.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"evanjw2"},"content":"**Use Case: Link Parent to Student**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command: link student/\u003cStudent Name\u003e parent/\u003cParent Name\u003e.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"evanjw2"},"content":"2. System validates that both student and parent exist and have correct types.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"evanjw2"},"content":"3. System creates a bidirectional link between student and parent.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"evanjw2"},"content":"4. System displays success message: \"Successfully reunited parent and child. Congrats!\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"evanjw2"},"content":"* 2a. Student or parent does not exist.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error, parent or student name incorrect.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"evanjw2"},"content":"* 2b. Student and parent already linked.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message: \"You have already linked the two…\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"evanjw2"},"content":"* 2c. Parent entered in student field or vice versa.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"evanjw2"},"content":"    * 2c1. System shows appropriate error message.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"evanjw2"},"content":"**Use Case: Unlink Parent from Student**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command: unlink student/\u003cStudent Name\u003e parent/\u003cParent Name\u003e.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"evanjw2"},"content":"2. System validates that both student and parent exist and are linked.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"evanjw2"},"content":"3. System removes the bidirectional link.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"evanjw2"},"content":"4. System displays success message: \"Successfully removed the link between parent and student.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"evanjw2"},"content":"* 2a. Student or parent does not exist.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error, parent or student name incorrect.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"evanjw2"},"content":"* 2b. Student and parent not linked.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message: \"These two are not linked.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"evanjw2"},"content":"**Use Case: Edit Student Details**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command to edit a student’s details.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"evanjw2"},"content":"2. System validates the student exists and input format is correct.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"evanjw2"},"content":"3. System updates the student’s details.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"evanjw2"},"content":"4. System displays a success message: \"Student \u003cStudent Name\u003e details updated successfully.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"evanjw2"},"content":"* 2a. Student not found.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error, student not found.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"evanjw2"},"content":"* 2b. Input format invalid.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"evanjw2"},"content":"**Use Case: Assign or Edit Student Schedule**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the schedule command: add/edit schedule for a student.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"evanjw2"},"content":"2. System validates student exists and schedule format is correct.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"evanjw2"},"content":"3. System stores or replaces the student’s schedule.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"evanjw2"},"content":"4. System displays success message: \"Schedule for \u003cStudent Name\u003e updated.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"evanjw2"},"content":"* 2a. Student not found.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error: Only students can have lesson schedules.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"evanjw2"},"content":"* 2b. Schedule format invalid.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"evanjw2"},"content":"* 3a. Student already has a schedule.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"evanjw2"},"content":"    * 3a1. System shows warning: \"Warning: Student \u0027\u003cStudent Name\u003e\u0027 already had a schedule. Replaced with a new schedule.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"evanjw2"},"content":"**Use Case: Add Cost per Lesson**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command to add cost per lesson for a student.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"evanjw2"},"content":"2. System validates student exists and input is numeric.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"evanjw2"},"content":"3. System stores the cost information.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"evanjw2"},"content":"4. System displays success message: \"Successfully added cost per lesson information!\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"evanjw2"},"content":"* 2a. Input not numeric.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error, cost per lesson should be a numeric value. E.g pay/72.5\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"evanjw2"},"content":"* 2b. Cost already exists.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message: \"You already have the lesson cost information to this student. Please edit or check the existing price.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"evanjw2"},"content":"**Use Case: Add Personal Notes**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command to add a note for a student.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"evanjw2"},"content":"2. System validates student exists and note format is correct.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"evanjw2"},"content":"3. System stores the note.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"evanjw2"},"content":"4. System displays success message: \"Successfully added note under \u003cStudent Name\u003e!\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"evanjw2"},"content":"* 2a. Note too long (\u003e50 characters) or invalid.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error, notes should be a string value. E.g note/Class president\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"evanjw2"},"content":"* 2b. Maximum 5 notes reached.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message: \"Maximum number of notes reached.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"evanjw2"},"content":"**Use Case: Mark Payment as Paid/Unpaid**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command to mark payment for a student.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"evanjw2"},"content":"2. System validates student exists.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"evanjw2"},"content":"3. System updates the payment status.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"evanjw2"},"content":"4. System displays success message: \"\u003cStudent Name\u003e’s payment has been changed to paid/unpaid.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"evanjw2"},"content":"* 2a. Student not found.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error: contact not found.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"evanjw2"},"content":"* 2b. Payment already set to requested status.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"evanjw2"},"content":"    * 2b1. System shows error message: \"Payment status is already \u003cpaid/unpaid\u003e.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"evanjw2"},"content":"**Use Case: Reset All Payments**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command: reset all.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"evanjw2"},"content":"2. System validates the command format.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"evanjw2"},"content":"3. System sets all contacts’ payment status to unpaid.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"evanjw2"},"content":"4. System displays message: \"Payment status of all contacts has been reset to unpaid.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"evanjw2"},"content":"* 2a. Extra tokens present in the command.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Invalid format. Use \u0027reset all\u0027 only.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"evanjw2"},"content":"* 3a. No contacts exist in the system.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"evanjw2"},"content":"    * 3a1. System shows warning: \"No contacts in the address book.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"evanjw2"},"content":"---","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"evanjw2"},"content":"**Use Case: List Paid/Unpaid Contacts**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"evanjw2"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"evanjw2"},"content":"1. Tutor enters the command: list paid or list unpaid.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"evanjw2"},"content":"2. System validates the command format.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"evanjw2"},"content":"3. System retrieves contacts with matching payment status.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"evanjw2"},"content":"4. System displays the list in the GUI with an appropriate message.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"evanjw2"},"content":"   Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"evanjw2"},"content":"**Extensions:**","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"evanjw2"},"content":"* 2a. Command not recognized.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"evanjw2"},"content":"    * 2a1. System shows error message: \"Error: unknown command.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"evanjw2"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"evanjw2"},"content":"* 3a. No contacts match the requested payment status.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"evanjw2"},"content":"    * 3a1. System shows error message: \"No contacts have payment status \u003cpaid/unpaid\u003e.\"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"evanjw2"},"content":"      Use case ends.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11T14:00:08","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09T15:37:20","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"evanjw2"},"content":"* Student (s): A child receiving tuition.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"evanjw2"},"content":"* Parent (p): A guardian linked to one or more students.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"evanjw2"},"content":"* Schedule: The assigned day and time for a student’s lesson.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"evanjw2"},"content":"* Note: Free-text field for extra information about a student or parent.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"evanjw2"},"content":"* Payment Status: Indicator (paid/unpaid) of whether a student’s lesson fees are settled.","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-10-04T13:32:49","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"evanjw2":267,"-":366}},{"path":"docs/_config.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"title: \"TutorHub\"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"theme: minima","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"header_pages:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"  - UserGuide.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  - DeveloperGuide.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  - AboutUs.md","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"markdown: kramdown","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"repository: \"AY2526S1-CS2103T-W10-1/tp\"","lastModifiedDate":"2025-10-04T13:08:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"github_icon: \"images/github-icon.png\"","lastModifiedDate":"2020-08-01T00:36:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"plugins:","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - jemoji","lastModifiedDate":"2020-05-23T01:10:16","isFullCredit":false}],"authorContributionMap":{"evanjw2":2,"-":13}}]
